{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/blogs/index.vue?8f86","webpack:///./src/assets/advertisingimg/glasses/2.jpg","webpack:///./src/App.vue","webpack:///./src/views/background/shootingstar.vue","webpack:///./src/views/background/shootingstar.vue?a13f","webpack:///./src/App.vue?4529","webpack:///./src/views/login.vue","webpack:///./src/textlibrary/dailyEvents.js","webpack:///./src/views/login.vue?09dc","webpack:///./src/views/blogs/index.vue","webpack:///./src/views/components/blogs/bloggerInfo.vue","webpack:///./src/views/components/blogs/bloggerInfo.vue?4206","webpack:///./src/views/components/blogs/blogitem.vue","webpack:///./src/views/blogs/_study/interview_ADTA.vue","webpack:///./src/views/blogs/_study/interview_ADTA.vue?eddd","webpack:///./src/textlibrary/blogitems.js","webpack:///./src/views/components/blogs/blogitem.vue?9c9c","webpack:///./src/views/blogs/index.vue?f41d","webpack:///./src/views/blogs/_vue/jsonviewblog.vue","webpack:///./src/views/blogs/_vue/jsonviewblog.vue?13bc","webpack:///./src/views/blogs/_java/Image2Text_by_opencv_blog.vue","webpack:///./src/views/blogs/_java/Image2Text_by_opencv_blog.vue?df75","webpack:///./src/views/blogs/_vue/get_map_key_and_value.vue","webpack:///./src/views/blogs/_vue/get_map_key_and_value.vue?e5a0","webpack:///./src/views/blogs/_java/Face_recognition_by_opencv.vue","webpack:///./src/views/blogs/_java/Face_recognition_by_opencv.vue?28cd","webpack:///./src/views/blogs/_study/interview_springboot.vue","webpack:///./src/views/blogs/_study/interview_springboot.vue?7828","webpack:///./src/views/blogs/_study/interview_mysql.vue","webpack:///./src/views/blogs/_study/interview_mysql.vue?7c2b","webpack:///./src/views/blogs/_study/interview_java_basis.vue","webpack:///./src/views/blogs/_study/interview_java_basis.vue?1583","webpack:///./src/views/blogs/_study/interview_java_container.vue","webpack:///./src/views/blogs/_study/interview_java_container.vue?38e4","webpack:///./src/views/blogs/_study/interview_java_abnormal.vue","webpack:///./src/views/blogs/_study/interview_java_abnormal.vue?6175","webpack:///./src/views/blogs/_study/interview_java_concurrent.vue","webpack:///./src/views/blogs/_study/interview_java_concurrent.vue?1b2b","webpack:///./src/views/blogs/_study/interview_java_jvm.vue","webpack:///./src/views/blogs/_study/interview_java_jvm.vue?c1d9","webpack:///./src/views/blogs/_study/interview_java_spring.vue","webpack:///./src/views/blogs/_study/interview_java_spring.vue?68ee","webpack:///./src/views/blogs/_study/interview_java_springmvc.vue","webpack:///./src/views/blogs/_study/interview_java_springmvc.vue?559f","webpack:///./src/views/blogs/_study/interview_java_springcloud.vue","webpack:///./src/views/blogs/_study/interview_java_springcloud.vue?337a","webpack:///./src/views/blogs/_study/interview_myBatis.vue","webpack:///./src/views/blogs/_study/interview_myBatis.vue?8685","webpack:///./src/views/blogs/_study/interview_redis.vue","webpack:///./src/views/blogs/_study/interview_redis.vue?489c","webpack:///./src/views/blogs/_study/interview_MQ_RabbitMQ.vue","webpack:///./src/views/blogs/_study/interview_MQ_RabbitMQ.vue?2e9d","webpack:///./src/views/blogs/_study/interview_linux.vue","webpack:///./src/views/blogs/_study/interview_linux.vue?a088","webpack:///./src/views/blogs/_study/interview_zookeeper.vue","webpack:///./src/views/blogs/_study/interview_zookeeper.vue?cf42","webpack:///./src/views/blogs/_study/interview_netty.vue","webpack:///./src/views/blogs/_study/interview_netty.vue?907b","webpack:///./src/views/blogs/_study/interview_dubbo.vue","webpack:///./src/views/blogs/_study/interview_dubbo.vue?74bb","webpack:///./src/views/blogs/_study/interview_tomcat.vue","webpack:///./src/views/blogs/_study/interview_tomcat.vue?14ee","webpack:///./src/router/index.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/assets/advertisingimg/glasses/5.jpg","webpack:///./src/views/login.vue?0267","webpack:///./src/assets/study/study.png","webpack:///./src/assets/advertisingimg/glasses/17.jpg","webpack:///./src/assets/advertisingimg/glasses/19.jpg","webpack:///./src/assets/java/Face_recognition_by_opencv.webp","webpack:///./src/assets/1.jpg","webpack:///./src/views/background/shootingstar.vue?1567","webpack:///./src/assets/advertisingimg/glasses/12.jpg","webpack:///./src/assets/vue/Image2Text_by_opencv_blog.png","webpack:///./src/assets/advertisingimg/glasses/3.jpg","webpack:///./src/App.vue?7ba9","webpack:///./src/assets/advertisingimg/glasses/6.jpg","webpack:///./src/assets/advertisingimg/glasses/13.jpg","webpack:///./src/assets/advertisingimg/glasses/14.jpg","webpack:///./src/assets/advertisingimg/glasses/16.jpg","webpack:///./src/assets/logo.png","webpack:///./src/assets/advertisingimg/glasses/18.jpg","webpack:///./src/assets/advertisingimg/glasses/11.jpg","webpack:///./src/assets/advertisingimg/glasses/15.jpg","webpack:///./src/assets/java/json-viewer.png","webpack:///./src/views/components/blogs/blogitem.vue?de49","webpack:///./src/assets/advertisingimg/glasses/1.jpg","webpack:///./src/assets/advertisingimg/glasses/4.jpg","webpack:///./src/assets/advertisingimg/glasses/7.jpg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","ref","props","point","type","Number","default","lineColor","String","roundColor","docWidth","docHeight","context","circleArr","timer","mounted","canvasDom","this","$refs","canvas","offsetWidth","offsetHeight","width","height","getContext","strokeStyle","lineWidth","fillStyle","createCircleArr","draw","cycleDraw","methods","rangeRadom","max","min","Math","floor","random","drawCircle","x","y","moveX","moveY","circle","beginPath","arc","PI","closePath","fill","drawLine","beginX","beginY","closeX","closeY","opacity","moveTo","lineTo","stroke","clearRect","A","abs","B","lineLength","sqrt","C","lineOpacity","setInterval","cir","beforeDestory","clearInterval","render","__scopeId","components","shootingstar","style","src","color","dailyEvents","item","index","timestamp","time","placement","initDailyEvent","title","dailyEventTitle","href","dailyEventUrl","target","dailyEventContent","to","model","form","label-width","size","label","username","password","onSubmit","url","content","urls","urls1","created","$router","params","dailyEvent","id","gutter","span","background-color","default-active","activeIndex","handleSelect","scrollbarHeight","hobbyList","Date","activeNames","handleChange","accordion","blogitems","gotoOneBlog","backgroundImgUrl","rel","xmlns","stroke-linecap","alt","onclick","data-title","data-report-click","align","script","require","document","documentElement","clientHeight","_this","onresize","val","console","log","bloggerInfo","blogitem","keyPath","start","data-report-view","data-line-number","routes","path","component","Login","Index","children","Jsonviewblog","Get_map_key_and_value","Image2Text_by_opencv_blog","Face_recognition_by_opencv","Interview_springboot","Interview_mysql","Interview_java_basis","Interview_java_container","Interview_java_abnormal","Interview_java_concurrent","Interview_java_jvm","Interview_java_spring","Interview_java_springmvc","Interview_java_springcloud","Interview_myBatis","Interview_redis","Interview_MQ_RabbitMQ","Interview_linux","Interview_zookeeper","Interview_netty","Interview_ADTA","Interview_dubbo","Interview_tomcat","router","createRouter","history","createWebHashHistory","createStore","state","mutations","actions","createApp","App","use","store","ElementPlus","mount"],"mappings":"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1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,aAE7xK,eAA8E,QAAxEY,KAAK,kDAAkDqC,IAAI,eACjE,eAAqE,QAA/DrC,KAAK,yCAAyCqC,IAAI,mB,wEAnmCxD,GACA,I,ICDA,MAAMQ,GAAS,GACfA,GAAO7D,OAAS,GAED,UCDTkD,GAAY,CACd,CACIvC,KAAM,aACNkB,IAAK,eACLC,QAAS,6BACThG,KAAM,MACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,wBACLC,QAAS,yBACThG,KAAM,MACNsH,iBAAkBU,EAAQ,SAC5B,CACEnD,KAAM,cACNkB,IAAK,6BACLC,QAAS,oBACThG,KAAM,OACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,4BACLC,QAAS,2BACThG,KAAM,OACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,uBACLC,QAAS,cACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,2BACLC,QAAS,cACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,0BACLC,QAAS,YACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,4BACLC,QAAS,UACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,qBACLC,QAAS,kBACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,wBACLC,QAAS,YACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,2BACLC,QAAS,gBACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,uBACLC,QAAS,gBACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,6BACLC,QAAS,kBACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,kBACLC,QAAS,cACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,oBACLC,QAAS,aACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,kBACLC,QAAS,WACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,wBACLC,QAAS,sBACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,mBACLC,QAAS,YACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,kBACLC,QAAS,WACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,kBACLC,QAAS,kBACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,sBACLC,QAAS,eACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,kBACLC,QAAS,WACThG,KAAM,QACNsH,iBAAkBU,EAAQ,SAE9B,CACInD,KAAM,cACNkB,IAAK,iBACLC,QAAS,sBACThG,KAAM,QACNsH,iBAAkBU,EAAQ,UAGnBZ,MHvGA,IACXrL,KADW,WAEP,MAAO,CACH+K,gBAAsE,GAArD7G,OAAO,GAAD,OAAIgI,SAASC,gBAAgBC,eACpDlB,YAAa,CAAC,KACdG,UAAW,KAGnBjB,QARW,WASPtF,KAAKuG,UAAY,IAErBzG,QAXW,WAYP,IAAMyH,EAAQvH,KACdpB,OAAO4I,SAAW,WACdD,EAAMtB,gBAAuE,GAArD7G,OAAO,GAAD,OAAIgI,SAASC,gBAAgBC,iBAGnExG,QAAS,CACLuF,aADK,SACQoB,GACTC,QAAQC,IAAIF,IAEhBjB,YAJK,SAIOtB,GACRlF,KAAKuF,QAAQvJ,KAAK,CAACsB,KAAK4H,O,UI/EpC,GAAO7B,OAAS,GAED,UP0CA,IACX/F,KAAM,QACNiG,WAAY,CAACqE,cAAYC,aACzB3M,KAHW,WAIP,MAAO,CACH+K,gBAAsE,GAArD7G,OAAO,GAAD,OAAIgI,SAASC,gBAAgBC,eACpDvB,YAAa,MAGrBjG,QATW,WAUP,IAAMyH,EAAQvH,KACdpB,OAAO4I,SAAW,WACdD,EAAMtB,gBAAuE,GAArD7G,OAAO,GAAD,OAAIgI,SAASC,gBAAgBC,iBAGnExG,QAAS,CACLkF,aADK,SACQ3H,EAAKyJ,GACdJ,QAAQC,IAAItJ,EAAKyJ,M,UQ7D7B,GAAOzE,OAAS,EAChB,GAAOC,UAAY,kBAEJ,U,+hDCPX,GCAJ,MAAM,GAAS,GACf,GAAOD,OAAS,GAED,U,GCHf,eAAiC,UAA7B,4BAAwB,G,GAC5B,eAyLU,WAzLDtE,MAAM,WAAW0E,MAAA,uB,CAC1B,eAuLM,OAvLDiC,GAAG,kBAAkB3G,MAAM,4B,CAChC,eAAiF,QAA3E2H,IAAI,aAAarC,KAAK,uDAC5B,eAkLM,OAlLDqB,GAAG,gBAAgB3G,MAAM,sC,CAC9B,eAEM,OAFD4H,MAAM,6BAA6BlD,MAAA,kB,CACxC,eAAyI,QAAnImD,iBAAe,QAAQvJ,EAAE,kBAAkBqI,GAAG,uBAAuBjC,MAAA,uDAE3E,eAAyD,U,eAAtD,4CAAwC,eAAI,M,eAAA,YAC/C,eA2Ku6P,OA3Kl6P1E,MAAM,eAAa,CAAC,eA2KuG,QA3KjGA,MAAM,oCAAoC+H,QAAQ,uBAAuBrD,MAAA,oB,CAAyB,eAA0C,QAApC1E,MAAM,iBAAgB,W,eAAc,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAE/S,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,QAC1N,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,WAAO,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,WAAO,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,QACjO,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,WAAO,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAAY,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAEtO,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,WAAO,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,WAAO,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,QACrL,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,QAC7K,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,QAC1K,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,iBAAa,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,QACnO,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,MAAE,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAEzK,eAGU,QAHJA,MAAM,iBAAgB,0D,eAGlB,QACV,eAAyC,QAAnCA,MAAM,iBAAgB,U,iBAAc,eAAwC,QAAlCA,MAAM,iBAAgB,S,iBAAa,eAAgD,QAA1CA,MAAM,oBAAmB,c,iBAAkB,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,gBAEhL,eAAyC,QAAnCA,MAAM,iBAAgB,U,iBAAc,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,gBACtF,eAAyE,QAAnEA,MAAM,iBAAgB,0C,eAA6C,sBACnE,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,kBAAiB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA8F,QAAxFA,MAAM,gBAAe,4EAAmE,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAChT,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAExC,eAAiD,QAA3CA,MAAM,iBAAgB,kB,eAAqB,YACjD,eAA0C,QAApCA,MAAM,iBAAgB,W,iBAAe,eAAyC,QAAnCA,MAAM,iBAAgB,U,iBAAc,eAAuC,QAAjCA,MAAM,iBAAgB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,QAAI,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAA0C,QAApCA,MAAM,oBAAmB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAgD,QAA1CA,MAAM,qBAAoB,KAAgB,eAAqC,QAA/BA,MAAM,gBAAe,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAqC,QAA/BA,MAAM,gBAAe,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAqC,QAA/BA,MAAM,gBAAe,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAqC,QAA/BA,MAAM,gBAAe,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAEpyB,eAAyC,QAAnCA,MAAM,iBAAgB,U,iBAAc,eAAyC,QAAnCA,MAAM,iBAAgB,U,iBAAc,eAAuC,QAAjCA,MAAM,iBAAgB,Q,iBAAY,eAAwC,QAAlCA,MAAM,kBAAiB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,iBAAa,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,gBAClb,eAAmE,QAA7DA,MAAM,iBAAgB,sC,eAAuC,gBACnE,eAAwD,QAAlDA,MAAM,iBAAgB,yB,eAA4B,mCACrC,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAA6C,QAAvCA,MAAM,kBAAiB,aAAgB,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAyC,QAAnCA,MAAM,gBAAe,WAAc,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAsC,QAAhCA,MAAM,gBAAe,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAqC,QAA/BA,MAAM,gBAAe,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAqC,QAA/BA,MAAM,gBAAe,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAC1oB,eAA6C,QAAvCA,MAAM,iBAAgB,c,eAAiB,gBAC7C,eAAyF,QAAnFA,MAAM,iBAAgB,0D,eAA6D,gBACzF,eAA4C,QAAtCA,MAAM,iBAAgB,a,eAAgB,gBAC5C,eAAsD,QAAhDA,MAAM,kBAAiB,sBAAyB,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAA6C,QAAvCA,MAAM,gBAAe,iBAAkB,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAC5V,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAExC,eASU,QATJA,MAAM,iBAAgB,iR,eASlB,YACV,eAAyC,QAAnCA,MAAM,iBAAgB,U,iBAAc,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,eAAW,eAA6C,QAAvCA,MAAM,kBAAiB,aAAgB,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,qBAAiB,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,mBAAe,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,cAAU,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,aAAS,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,aAAS,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,aAAS,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,6BACnqB,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAA4C,QAAtCA,MAAM,oBAAmB,UAAa,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAC9P,eAA6C,QAAvCA,MAAM,iBAAgB,c,eAAiB,6BAChC,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAA4C,QAAtCA,MAAM,oBAAmB,UAAa,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,mCAC3O,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAA+C,QAAzCA,MAAM,oBAAmB,aAAgB,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACvQ,eAAkF,QAA5EA,MAAM,iBAAgB,mD,eAAsD,wBAC1E,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA2C,QAArCA,MAAM,kBAAiB,WAAc,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAA0C,QAApCA,MAAM,oBAAmB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,aAAS,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,qBACxd,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA6C,QAAvCA,MAAM,kBAAiB,aAAgB,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAgD,QAA1CA,MAAM,oBAAmB,cAAiB,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACzX,eAA0D,QAApDA,MAAM,iBAAgB,2B,eAA8B,qBACrD,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAuC,QAAjCA,MAAM,kBAAiB,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAiD,QAA3CA,MAAM,oBAAmB,eAAkB,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,qBACvX,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAuC,QAAjCA,MAAM,kBAAiB,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACjN,eAA4C,QAAtCA,MAAM,iBAAgB,a,eAAgB,qBACvC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA4C,QAAtCA,MAAM,kBAAiB,YAAe,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,cAAU,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAC3N,eAA4C,QAAtCA,MAAM,iBAAgB,a,eAAgB,qBACvC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA2C,QAArCA,MAAM,kBAAiB,WAAc,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACxQ,eAA8F,QAAxFA,MAAM,iBAAgB,+D,eAAkE,qBACzF,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA4D,QAAtDA,MAAM,kBAAiB,4BAA+B,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,iBAAa,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAC5R,eAA6C,QAAvCA,MAAM,iBAAgB,c,eAAiB,qBACxC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAyD,QAAnDA,MAAM,kBAAiB,yBAA4B,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAClO,eAA6C,QAAvCA,MAAM,iBAAgB,c,eAAiB,qBACxC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAkD,QAA5CA,MAAM,kBAAiB,kBAAqB,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAuC,QAAjCA,MAAM,iBAAgB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAC9P,eAA2C,QAArCA,MAAM,iBAAgB,Y,eAAe,qBACtC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA8C,QAAxCA,MAAM,kBAAiB,cAAiB,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAuC,QAAjCA,MAAM,iBAAgB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAC1P,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,aAAS,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAC9F,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAExC,eAKU,QALJA,MAAM,iBAAgB,sK,eAKlB,YACV,eAAyC,QAAnCA,MAAM,iBAAgB,U,iBAAc,eAAyC,QAAnCA,MAAM,iBAAgB,U,iBAAc,eAAuC,QAAjCA,MAAM,iBAAgB,Q,iBAAY,eAAsD,QAAhDA,MAAM,kBAAiB,sBAAyB,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,sBAAkB,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,wBAAoB,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,iBAAa,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,oCACrc,eAAqC,QAA/BA,MAAM,kBAAiB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAkD,QAA5CA,MAAM,oBAAmB,gBAAmB,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAC1Q,eAAgD,QAA1CA,MAAM,iBAAgB,iB,eAAoB,uBACzC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,kBAAiB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAAY,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAC3N,eAAqC,QAA/BA,MAAM,iBAAgB,MAAS,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,WAAO,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA4C,QAAtCA,MAAM,kBAAiB,YAAe,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,0BAC3W,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA2C,QAArCA,MAAM,kBAAiB,WAAc,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA6C,QAAvCA,MAAM,gBAAe,eAAkB,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oBACzS,eAAyC,QAAnCA,MAAM,iBAAgB,UAAa,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACrF,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,yBAC/B,eAAqC,QAA/BA,MAAM,kBAAiB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAyC,QAAnCA,MAAM,oBAAmB,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACtP,eAAwC,QAAlCA,MAAM,iBAAgB,SAAY,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,WAAO,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA4C,QAAtCA,MAAM,kBAAiB,YAAe,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,oBAChV,eAA4D,QAAtDA,MAAM,iBAAgB,6B,eAAgC,2BACrD,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,kBAAiB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oBACpN,eAAsC,QAAhCA,MAAM,iBAAgB,OAAU,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,gCAC1E,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA2C,QAArCA,MAAM,kBAAiB,WAAc,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsD,QAAhDA,MAAM,kBAAiB,sBAAyB,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAAY,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA4C,QAAtCA,MAAM,kBAAiB,YAAe,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oBAC1jB,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,iBAAgB,S,iBAAa,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA+C,QAAzCA,MAAM,oBAAmB,a,eAAgB,MAAE,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,8BACxP,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA2C,QAArCA,MAAM,kBAAiB,WAAc,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA0C,QAApCA,MAAM,gBAAe,YAAe,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,wBACtS,eAAwC,QAAlCA,MAAM,iBAAgB,SAAY,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oBACpF,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAC5C,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAC5C,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAExC,eAIU,QAJJA,MAAM,iBAAgB,mH,eAIlB,YACV,eAAyC,QAAnCA,MAAM,iBAAgB,U,iBAAc,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,kBAAc,eAAsD,QAAhDA,MAAM,kBAAiB,sBAAyB,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,aAAS,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,cAAU,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,kCACjZ,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,4BACxF,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAyC,QAAnCA,MAAM,oBAAmB,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAC1P,eAAwE,QAAlEA,MAAM,iBAAgB,yC,eAA4C,uBACjE,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA4C,QAAtCA,MAAM,kBAAiB,YAAe,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,kBAAc,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAC9W,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,UAAM,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,YAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,kBAAiB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACjS,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,UAAM,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,YAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,kBAAiB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACjS,eAAgD,QAA1CA,MAAM,iBAAgB,iB,eAAoB,gBAChD,eAAuC,QAAjCA,MAAM,iBAAgB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,SAAK,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAA0C,QAApCA,MAAM,oBAAmB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,QAAI,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,SAAK,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,QAAI,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,SAAK,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACzvB,eAAsC,QAAhCA,MAAM,iBAAgB,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,MAAE,eAAqC,QAA/BA,MAAM,kBAAiB,KAAQ,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,MAAE,eAAwC,QAAlCA,MAAM,kBAAiB,K,eAAW,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,MAAE,eAAsC,QAAhCA,MAAM,kBAAiB,M,eAAS,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,oBAC5b,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,MAAE,eAAqC,QAA/BA,MAAM,kBAAiB,KAAQ,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,MAAE,eAAwC,QAAlCA,MAAM,kBAAiB,K,eAAW,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,MAAE,eAAsC,QAAhCA,MAAM,kBAAiB,M,eAAS,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,wBAC7b,eAAsE,QAAhEA,MAAM,iBAAgB,uC,eAA0C,wBACtE,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,UAAM,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAuC,QAAjCA,MAAM,kBAAiB,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,MAAE,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,wBACrjB,eAA2C,QAArCA,MAAM,iBAAgB,Y,eAAe,wBAC3C,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,WAAO,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAyC,QAAnCA,MAAM,kBAAiB,SAAY,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,SAAK,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,WAAO,eAAqC,QAA/BA,MAAM,kBAAiB,KAAQ,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAqC,QAA/BA,MAAM,gBAAe,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,2BAC7lB,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oBACja,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAC5C,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gCACxB,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAkD,QAA5CA,MAAM,oBAAmB,gBAAmB,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACvQ,eAA4C,QAAtCA,MAAM,iBAAgB,a,eAAgB,gBAC5C,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,OAAG,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,kBAAiB,K,eAAW,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,MAAE,eAAsC,QAAhCA,MAAM,kBAAiB,MAAS,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,oBAC3e,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,OAAG,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,kBAAiB,K,eAAW,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,MAAE,eAAsC,QAAhCA,MAAM,kBAAiB,MAAS,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,0BAC5lB,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA0C,QAApCA,MAAM,kBAAiB,UAAa,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oBACrX,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,sBACtC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA0C,QAApCA,MAAM,kBAAiB,UAAa,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,gBAAe,YAAa,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACxP,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACxC,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YACxF,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBAExC,eAGU,QAHJA,MAAM,iBAAgB,qF,eAGlB,YACV,eAAyC,QAAnCA,MAAM,iBAAgB,U,iBAAc,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,kBAAc,eAA8C,QAAxCA,MAAM,kBAAiB,cAAiB,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,mBAAe,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,kCAC3V,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACpG,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,wCAC/D,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,YAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,kBAAiB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAA0C,QAApCA,MAAM,oBAAmB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oBAClb,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,WAAO,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA4C,QAAtCA,MAAM,kBAAiB,YAAe,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oBACpS,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,YAAQ,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA6C,QAAvCA,MAAM,kBAAiB,aAAgB,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oBACtS,eAAgD,QAA1CA,MAAM,iBAAgB,iB,eAAoB,oBAChD,eAAuC,QAAjCA,MAAM,iBAAgB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,SAAK,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAA0C,QAApCA,MAAM,oBAAmB,QAAW,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,SAAK,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,SAAK,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,UAAM,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,SAAK,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oBAC5vB,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,OAAG,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,kBAAiB,K,eAAW,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,MAAE,eAAsC,QAAhCA,MAAM,kBAAiB,M,eAAS,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,wBACnc,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,OAAG,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,kBAAiB,K,eAAW,WAAO,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,MAAE,eAAsC,QAAhCA,MAAM,kBAAiB,M,eAAS,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,4BACpc,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,SAAK,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA0C,QAApCA,MAAM,kBAAiB,UAAa,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,MAAE,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oCACnU,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAA2C,QAArCA,MAAM,oBAAmB,SAAY,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,4BAC3P,eAA2C,QAArCA,MAAM,iBAAgB,Y,eAAe,4BAC3C,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,QAAI,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA0C,QAApCA,MAAM,kBAAiB,UAAa,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,MAAE,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA4C,QAAtCA,MAAM,kBAAiB,YAAe,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,MAAE,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA2C,QAArCA,MAAM,kBAAiB,WAAc,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,+BACz0B,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,WAAO,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAqC,QAA/BA,MAAM,gBAAe,OAAU,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,wBACl6B,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oBAC5C,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oCACxB,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAkD,QAA5CA,MAAM,oBAAmB,gBAAmB,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oBACvQ,eAA4C,QAAtCA,MAAM,iBAAgB,a,eAAgB,oBAC5C,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,OAAG,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,kBAAiB,K,eAAW,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,MAAE,eAAsC,QAAhCA,MAAM,kBAAiB,MAAS,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,wBAC9lB,eAAsC,QAAhCA,MAAM,iBAAgB,O,iBAAW,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAsC,QAAhCA,MAAM,iBAAgB,O,eAAU,OAAG,eAAqC,QAA/BA,MAAM,kBAAiB,K,iBAAS,eAAmC,QAA7BA,MAAM,gBAAe,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,kBAAiB,K,eAAW,QAAI,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,UAAM,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,MAAE,eAAsC,QAAhCA,MAAM,kBAAiB,MAAS,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,8BACze,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA0C,QAApCA,MAAM,kBAAiB,UAAa,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,wBACrX,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,0BACtC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA0C,QAApCA,MAAM,kBAAiB,UAAa,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,gBAAe,YAAa,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,oBACxP,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,yBACnC,eAAqC,QAA/BA,MAAM,kBAAiB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACzF,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAwC,QAAlCA,MAAM,iBAAgB,S,iBAAa,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAiD,QAA3CA,MAAM,oBAAmB,e,eAAkB,MAAE,eAAwC,QAAlCA,MAAM,qBAAoB,K,iBAAS,eAAgD,QAA1CA,MAAM,qBAAoB,K,eAAgB,0BAC5P,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,OAAG,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAA2C,QAArCA,MAAM,kBAAiB,WAAc,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,KAAC,eAAwC,QAAlCA,MAAM,qBAAoB,KAAQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACjQ,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,gBACxC,eAAyC,QAAnCA,MAAM,iBAAgB,U,eAAa,SAAK,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAC1F,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAE5C,eAAwC,QAAlCA,MAAM,qBAAoB,K,eAAQ,YAExC,eAAyH,OAApHA,MAAM,kBAAkBgI,aAAW,KAAKC,oBAAkB,oCAAiE,eAAiyP,MAA7xPjI,MAAM,gBAAgB0E,MAAA,I,CAAS,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAA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AAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,OAAQ,eAA+C,MAA3CA,MAAA,8BAAmC,O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,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C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A,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA6C,MAAzCA,MAAA,8BAAmC,KAAM,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1CA,MAAA,8BAAmC,MAAO,eAA8C,MAA1C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","file":"js/app.b98d685c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export { default } from \"-!../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=29d051ae&lang=scss&scoped=true\"; export * from \"-!../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=29d051ae&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/2.5fb0c9ff.jpg\";","<template>\n<!--  <div id=\"nav\">-->\n<!--    <router-link to=\"/\">login</router-link> |-->\n<!--    <router-link to=\"/about\">About</router-link>-->\n<!--  </div>-->\n  <shootingstar></shootingstar>\n  <router-view/>\n</template>\n<script>\nimport shootingstar from '../src/views/background/shootingstar'\nexport default {\n  name: 'App',\n  components: {shootingstar}\n}\n</script>\n<style lang=\"scss\">\n\n.markdown_views img {\n  max-height: 360px;\n}\npre {\n  padding: 10px 10px;\n}\n.markdown_views.prism-atom-one-dark .pre-numbering li {\n  color: #abb2bf!important;\n  border-right: 1px solid #c5c5c5;\n}\n.markdown_views.prism-atom-one-dark pre code {\n  background-color: #282c34;\n  color: #abb2bf;\n}\n.markdown_views .prettyprint .pre-numbering {\n  display: none;\n  position: absolute;\n  width: 48px;\n  background-color: #eef0f4;\n  top: 0;\n  left: 0;\n  margin: 0;\n  padding: 8px 0;\n  list-style: none;\n  text-align: right;\n}\n.markdown_views.prism-atom-one-dark .prettyprint, .markdown_views.prism-atom-one-dark .prettyprint .pre-numbering, .markdown_views.prism-atom-one-dark pre.prettyprint {\n  background-color: #282c34;\n}\n/* 背景 */\n.div-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0); /* 透明背景色 */\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n#nav {\n  padding: 30px;\n\n  a {\n    font-weight: bold;\n    color: #2c3e50;\n\n    &.router-link-exact-active {\n      color: #42b983;\n    }\n  }\n}\n</style>\n","<template>\r\n    <div class=\"starry-sky\">\r\n        <canvas ref=\"canvas\"></canvas>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        point: {\r\n            type: Number,\r\n            default: 50 // 生成的星星（点）的个数, 默认25个\r\n        },\r\n        lineColor: {\r\n            type: String,\r\n            default: 'rgb(0,0,0)' // 线的颜色\r\n        },\r\n        roundColor: {\r\n            type: String,\r\n            default: 'rgb(155,161,167)' // 星星的颜色\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            docWidth: 0, // 画布宽\r\n            docHeight: 0, // 画布高\r\n            context: null, // canvasDom的执行上下文\r\n            circleArr: [], // 圆点数组\r\n            timer: null, // 定时器对象\r\n        }\r\n    },\r\n    mounted() {\r\n        const canvasDom = this.$refs.canvas\r\n\r\n        // 取画布的高宽来设置显示分辨率\r\n        this.docWidth = canvasDom.offsetWidth\r\n        this.docHeight = canvasDom.offsetHeight\r\n\r\n        // 设置画布分辨率\r\n        canvasDom.width = canvasDom.offsetWidth\r\n        canvasDom.height = canvasDom.offsetHeight\r\n\r\n        // 初始化canvas上下文\r\n        this.context = canvasDom.getContext('2d')\r\n\r\n        // 设置线条和星星颜色\r\n        this.context.strokeStyle = this.lineColor;\r\n        this.context.lineWidth = 1;\r\n        this.context.fillStyle = this.roundColor;\r\n\r\n        // 初始化\r\n        this.createCircleArr()       // 设置星星数组\r\n        this.draw() // 首屏绘制\r\n        this.cycleDraw() // 循环绘制\r\n    },\r\n    methods: {\r\n        /**\r\n         * 生成min和max之间随机数\r\n         */\r\n        rangeRadom(max, min) {\r\n            return Math.floor(Math.random() * (max - min + 1) + min)\r\n        },\r\n        /**\r\n         * 绘制原点\r\n         */\r\n        drawCircle(context, x, y, r, moveX, moveY) {\r\n            let circle = {\r\n                x,\r\n                y,\r\n                r,\r\n                moveX,\r\n                moveY,\r\n            }\r\n            context.beginPath()\r\n            context.arc(circle.x, circle.y, circle.r, 0, 2 * Math.PI)\r\n            context.closePath()\r\n            context.fill()\r\n            return circle\r\n        },\r\n        /**\r\n         * 绘制线条\r\n         */\r\n        drawLine(context, beginX, beginY, closeX, closeY, opacity) {\r\n            context.beginPath()\r\n            context.strokeStyle = `rgba(0, 0, 0, ${opacity})`\r\n            context.moveTo(beginX, beginY)\r\n            context.lineTo(closeX, closeY)\r\n            context.closePath()\r\n            context.stroke()\r\n        },\r\n        /**\r\n         * 生成圆点数组\r\n         */\r\n        createCircleArr() {\r\n            for (let i = 0; i < this.point; i++) {\r\n                this.circleArr.push(this.drawCircle(\r\n                    this.context,\r\n                    this.rangeRadom(this.docWidth, 0),\r\n                    this.rangeRadom(this.docHeight, 0),\r\n                    this.rangeRadom(15, 2),\r\n                    this.rangeRadom(10, -10)/40,\r\n                    this.rangeRadom(10, -10)/40\r\n                ))\r\n            }\r\n        },\r\n        /**\r\n         * 每一帧绘制\r\n         */\r\n        draw() {\r\n            const circleArr = this.circleArr\r\n            this.context.clearRect(0, 0, this.docWidth, this.docHeight)\r\n            // 循环绘制点\r\n            for (let i = 0; i < this.point; i++) {\r\n                this.drawCircle(this.context, circleArr[i].x, circleArr[i].y, circleArr[i].r)\r\n            }\r\n            // 循环绘制线\r\n            for (let i = 0; i < this.point; i++) {\r\n                for (let j = 0; j < this.point; j++) {\r\n                    if (i + j < this.point) {\r\n                        let A = Math.abs(circleArr[i + j].x - circleArr[i].x)\r\n                        let B = Math.abs(circleArr[i + j].y - circleArr[i].y)\r\n                        let lineLength = Math.sqrt(A * A + B * B)\r\n                        let C = 1 / lineLength * 7 - 0.009\r\n                        let lineOpacity = C > 0.03 ? 0.03 : C;\r\n                        if (lineOpacity > 0) {\r\n                            this.drawLine(\r\n                                this.context,\r\n                                circleArr[i].x,\r\n                                circleArr[i].y,\r\n                                circleArr[i + j].x,\r\n                                circleArr[i + j].y,\r\n                                lineOpacity,\r\n                            )\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * 循环绘制\r\n         */\r\n        cycleDraw() {\r\n            this.timer = setInterval(() => {\r\n                for(let i = 0; i < this.point; i++) {\r\n                    let cir = this.circleArr[i]\r\n                    cir.x += cir.moveX\r\n                    cir.y += cir.moveY\r\n                    if (cir.x > this.docWidth) {\r\n                        cir.x = 0\r\n                    } else if (cir.x < 0) {\r\n                        cir.x = this.docWidth\r\n                    }\r\n                    if (cir.y > this.docHeight) {\r\n                        cir.y = 0\r\n                    } else if (cir.y < 0) {\r\n                        cir.y = this.docHeight\r\n                    }\r\n                }\r\n                this.draw()\r\n            }, 10)\r\n        },\r\n    },\r\n    beforeDestory() {\r\n        // 记得摧毁定时器\r\n        clearInterval(this.timer)\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.starry-sky {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n}\r\n\r\ncanvas {\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: -1;\r\n    background-color: #d3dbdd;\r\n}\r\n</style>\r\n","import { render } from \"./shootingstar.vue?vue&type=template&id=d2e1f040&scoped=true\"\nimport script from \"./shootingstar.vue?vue&type=script&lang=js\"\nexport * from \"./shootingstar.vue?vue&type=script&lang=js\"\n\nimport \"./shootingstar.vue?vue&type=style&index=0&id=d2e1f040&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-d2e1f040\"\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=4d10b309\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"div-container\">\r\n        <el-container>\r\n            <el-header><h2 class=\"login-title\">Welcome To Litluecat Blogs</h2></el-header>\r\n            <el-container>\r\n                <el-aside width=\"50%\" style=\"padding-left: 20px;padding-top: 20px\">\r\n                    <el-container>\r\n                        <el-aside width=\"40%\">\r\n                            <div class=\"block\" style=\"text-align: left;\">\r\n                                <el-timeline color=\"rgb\">\r\n                                    <el-scrollbar height=\"500px\">\r\n                                        <el-timeline-item v-for=\"(item,index) in dailyEvents\" :key=\"index\" :timestamp=\"item.time\" placement=\"top\">\r\n                                            <h4 @click=\"initDailyEvent(item)\">{{item.title}}</h4>\r\n                                        </el-timeline-item>\r\n                                    </el-scrollbar>\r\n                                </el-timeline>\r\n                            </div>\r\n                        </el-aside>\r\n                        <el-main class=\"daily_event_content\">\r\n                            <el-scrollbar height=\"500px\">\r\n                                <h3>{{this.dailyEventTitle}}</h3>\r\n                                <el-link type=\"primary\" :href=\"this.dailyEventUrl\" target=\"_blank\">查看具体内容</el-link>\r\n                                <pre>{{this.dailyEventContent}}</pre>\r\n                            </el-scrollbar>\r\n                        </el-main>\r\n                    </el-container>\r\n<!--                <el-carousel :interval=\"4000\" direction=\"vertical\" height=\"600px\">-->\r\n<!--                    <el-carousel-item v-for=\"(_url,index) in urls\" :key=\"index\">-->\r\n<!--                        <h3 class=\"medium\">-->\r\n<!--                            <el-image :src=\"_url\" style=\"height: 600px\"></el-image>-->\r\n<!--                        </h3>-->\r\n<!--                    </el-carousel-item>-->\r\n<!--                </el-carousel>-->\r\n\r\n                </el-aside>\r\n                <el-main>\r\n                    <router-link to=\"/index\"><h3><i class=\"el-icon-view\"></i>&nbsp;&nbsp;I am just looking.（游客进入主页）</h3></router-link>\r\n                    <h3>I am Litluecat. I have key.&nbsp;&nbsp;<i class=\"el-icon-key\"></i></h3>\r\n                    <el-form ref=\"form\" :model=\"form\" label-width=\"80px\" class=\"login-form\" size=\"mini\">\r\n                    <div style=\"margin-bottom: 10px\"><el-avatar><img src=\"../assets/1.jpg\"></el-avatar><i class=\"el-icon-lock\"></i></div>\r\n                    <el-form-item label=\"账号\">\r\n                        <el-input v-model=\"form.username\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"密码\">\r\n                        <el-input type=\"password\" v-model=\"form.password\"></el-input>\r\n                    </el-form-item>\r\n                    <el-button type=\"primary\" size=\"mini\" @click=\"onSubmit\"><i class=\"el-icon-unlock\"></i>登录</el-button>\r\n                    </el-form>\r\n\r\n<!--                    <el-row>-->\r\n<!--                        <el-col-->\r\n<!--                            v-for=\"(o, index) in urls1\"-->\r\n<!--                            :key=\"index\"-->\r\n<!--                            :span=\"7\"-->\r\n<!--                            :offset=\"1\"-->\r\n<!--                        >-->\r\n<!--                            <el-card :body-style=\"{ padding: '0px', height:'194px'}\" style=\"margin-bottom: 5px\">-->\r\n<!--                                <img-->\r\n<!--                                    :src=\"o\"-->\r\n<!--                                    class=\"image\"-->\r\n<!--                                />-->\r\n<!--                            </el-card>-->\r\n<!--                        </el-col>-->\r\n<!--                    </el-row>-->\r\n                </el-main>\r\n            </el-container>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport md5 from 'js-md5'\r\nimport _dailyEvents from '../textlibrary/dailyEvents'\r\n\r\nexport default {\r\n    name: 'login',\r\n    data() {\r\n        const urls = [\r\n            require('../assets/advertisingimg/glasses/1.jpg'),\r\n            require('../assets/advertisingimg/glasses/2.jpg'),\r\n            require('../assets/advertisingimg/glasses/3.jpg'),\r\n            require('../assets/advertisingimg/glasses/4.jpg'),\r\n            require('../assets/advertisingimg/glasses/5.jpg'),\r\n            require('../assets/advertisingimg/glasses/6.jpg'),\r\n            require('../assets/advertisingimg/glasses/7.jpg'),\r\n        ]\r\n        const urls1 = [\r\n            require('../assets/advertisingimg/glasses/11.jpg'),\r\n            require('../assets/advertisingimg/glasses/12.jpg'),\r\n            require('../assets/advertisingimg/glasses/13.jpg'),\r\n            require('../assets/advertisingimg/glasses/14.jpg'),\r\n            require('../assets/advertisingimg/glasses/15.jpg'),\r\n            require('../assets/advertisingimg/glasses/16.jpg'),\r\n            require('../assets/advertisingimg/glasses/17.jpg'),\r\n            require('../assets/advertisingimg/glasses/18.jpg'),\r\n            require('../assets/advertisingimg/glasses/19.jpg'),\r\n        ]\r\n        return {\r\n            form: {\r\n                username: \"\",\r\n                password: \"\"\r\n            },\r\n            dailyEvents: [],\r\n            dailyEventTitle: '点击左侧新闻，查看相关内容',\r\n            dailyEventContent: '',\r\n            dailyEventUrl: '',\r\n            urls,\r\n            urls1,\r\n        };\r\n    },\r\n    created() {\r\n        this.dailyEvents = _dailyEvents;\r\n    },\r\n    methods: {\r\n        onSubmit() {//maomao mimi\r\n            // eslint-disable-next-line no-empty\r\n            if(\"e2145387bcc7842edef4ccecc34b7da4\" == md5(this.form.username) &&\r\n                // eslint-disable-next-line no-empty\r\n                \"dde6ecd6406700aa000b213c843a3091\" == md5(this.form.password)){\r\n                this.$router.push({name:'Index', params:{username: this.form.username}})\r\n            }\r\n        },\r\n        initDailyEvent(dailyEvent){\r\n            this.dailyEventTitle = dailyEvent.title\r\n            this.dailyEventContent = dailyEvent.content\r\n            this.dailyEventUrl = dailyEvent.url\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.daily_event_content pre {\r\n    white-space: pre-wrap; /*css-3*/\r\n    white-space: -moz-pre-wrap; /*Mozilla,since1999*/\r\n    white-space: -pre-wrap; /*Opera4-6*/\r\n    white-space: -o-pre-wrap; /*Opera7*/\r\n    word-wrap: break-word; /*InternetExplorer5.5+*/\r\n    width: 90%;\r\n    text-align: left;\r\n    height: 500px;\r\n    line-height: 20px;\r\n}\r\n.login-form {\r\n    width: 350px;\r\n    margin: 80px auto; /* 上下间距160px，左右自动居中*/\r\n    background-color: rgba(255, 255, 255, 0.3); /* 透明背景色 */\r\n    padding: 30px;\r\n    border-radius: 20px; /* 圆角 */\r\n}\r\n\r\n/* 标题 */\r\n.login-title {\r\n    color: #303133;\r\n    text-align: center;\r\n}\r\na{\r\n    text-decoration: none;\r\n    color:#3d8fd1\r\n}\r\n/*.el-carousel__item h3 {*/\r\n/*    color: #475669;*/\r\n/*    font-size: 14px;*/\r\n/*    opacity: 0.75;*/\r\n/*    line-height: 200px;*/\r\n/*    margin: 0;*/\r\n/*    text-align: center;*/\r\n/*}*/\r\n\r\n/*.el-carousel__item:nth-child(2n) {*/\r\n/*    background-color: #99a9bf;*/\r\n/*}*/\r\n\r\n/*.el-carousel__item:nth-child(2n + 1) {*/\r\n/*    background-color: #d3dce6;*/\r\n/*}*/\r\n\r\n/*.image {*/\r\n/*    width: 100%;*/\r\n/*    display: block;*/\r\n/*}*/\r\n</style>\r\n","//每日实事\r\nconst dailyEvents = [\r\n    {\r\n        time: '2020/07/23',\r\n        url: 'https://voice.baidu.com/act/newpneumonia/newpneumonia/?from=osari_aladin_banner',\r\n        title: '每日疫情，速报',\r\n        content: '',\r\n    },\r\n    {\r\n        time: '2020/07/27',\r\n        url: 'http://baijiahao.baidu.com/s?id=1706405120485993987&wfr=spider&for=pc',\r\n        title: '南京此轮疫情毒株为德尔塔',\r\n        content: '今天（27日）上午10时30分，南京市举行第七场新冠肺炎疫情防控新闻发布会，通报疫情防控最新情况。据南京市疾控中心副主任丁洁通报，从完成的病例来看，目前引起南京疫情的毒株是德尔塔毒株。德尔塔毒株目前是全球疫情流行的一个最主要的毒株。从此前相关的疫情来看，这个毒株有一些新的特点，它对身体的适应力增强，传播速度比较快，然后它这个病毒的载量比较高，治疗时间比较长，也比较容易发展成为重症。（总台记者 杨守华 黄鹤飞 苏玉民 郑玉锴 王侃）',\r\n    },\r\n    {\r\n        time: '2020/07/27',\r\n            url: 'https://www.sohu.com/a/479756484_114988?_trans_=000014_bdss_dkwhfy',\r\n        title: '卫健委：26日新增确诊病例71例，其中本土31例在江苏',\r\n        content: '新京报快讯 据国家卫健委消息，7月26日0—24时，31个省(自治区、直辖市)和新疆生产建设兵团报告新增确诊病例71例，其中境外输入病例40例(云南19例，广东13例，上海4例，江苏3例，四川1例)，本土病例31例(均在江苏);无新增死亡病例;新增疑似病例4例，均为境外输入病例(均在上海)。\\n' +\r\n            '\\n' +\r\n            '当日新增治愈出院病例17例，解除医学观察的密切接触者331人，重症病例较前一日增加3例。\\n' +\r\n            '\\n' +\r\n            '境外输入现有确诊病例615例(其中重症病例18例)，现有疑似病例4例。累计确诊病例7286例，累计治愈出院病例6671例，无死亡病例。\\n' +\r\n            '\\n' +\r\n            '截至7月26日24时，据31个省(自治区、直辖市)和新疆生产建设兵团报告，现有确诊病例795例(其中重症病例20例)，累计治愈出院病例87245例，累计死亡病例4636例，累计报告确诊病例92676例，现有疑似病例4例。累计追踪到密切接触者1077340人，尚在医学观察的密切接触者11046人。\\n' +\r\n            '\\n' +\r\n            '31个省(自治区、直辖市)和新疆生产建设兵团报告新增无症状感染者20例，其中境外输入17例，本土3例(均在辽宁);当日转为确诊病例10例(境外输入3例);当日解除医学观察15例(均为境外输入);尚在医学观察的无症状感染者431例(境外输入410例)。\\n' +\r\n            '\\n' +\r\n            '累计收到港澳台地区通报确诊病例27619例。其中，香港特别行政区11978例(出院11701例，死亡212例)，澳门特别行政区59例(出院53例)，台湾地区15582例(出院12603例，死亡786例)。\\n' +\r\n            '\\n' +\r\n            '编辑 刘佳妮',\r\n    },\r\n    {\r\n        time: '2020/07/26',\r\n        url: 'https://www.sohu.com/a/479547339_120388781?_trans_=000014_bdss_dkwhfy',\r\n        title: '南京新冠感染者增至57例 正开展第2轮全员核酸检测',\r\n        content: '随着“德尔塔”变种病毒席卷美国，美国各州卫生官员警告公众，疫情还远未结束。根据约翰霍普金斯大学的数据，美国各州在过去一周报告的新冠病例数都比前一周多。\\n' +\r\n            '\\n' +\r\n            '本周，加利福尼亚州的圣迭戈和洛杉矶都达自今年2月以来单日新增人数最多，洛杉矶的住院人数在两周内增加了一倍多。而佛罗里达州的卫生数据显示，新增病例在两周内几乎翻了一番，从7月2日当周的7.8%增加到本周的15.1%。\\n' +\r\n            '\\n' +\r\n            '路易斯安那州卫生官员当地时间23日指出，路易斯安那州现在的人均病例增长率是美国最高的。21日，路易斯安那州报告了自疫情开始以来的第三高日新增病例数。路易斯安那州州长约翰贝尔爱德华兹表示：“我们知道其中超过80%的新增病例感染的是‘德尔塔’变种病毒，而导致激增的原因是接种疫苗的人比例非常低。”\\n' +\r\n            '\\n' +\r\n            '根据美国疾病控制和预防中心的数据，美国仍有30个州尚未为至少一半的居民全面接种疫苗。7月23日，美国接种疫苗平均人数是自1月底开始接种疫苗以来的最低水平。（央视记者刘旭）',\r\n    },\r\n    {\r\n        time: '2020/07/26',\r\n        url: 'https://www.sohu.com/a/479548864_162758?_trans_=000014_bdss_dkwhfy',\r\n        title: '不想隔离，超过30%英国人删掉新冠追踪App',\r\n        content: '【环球时报综合报道】英国上周全面解除防疫限制后，主要通过新冠追踪App来防控疫情，及时确定密接者位置并要求他们自我隔离。然而，令英国政府和科学家担心的是，有1/3英国民众为了逃避隔离而删除了该应用。\\n' +\r\n            '\\n' +\r\n            '据美国彭博社25日报道，英国一项最新民调显示，超过30%18至34岁的英国民众已经卸载了新冠追踪App，30%仍在使用该应用的人打算在6天内删除它。英国保守党议员马克·哈珀表示，为避免大批民众删除该应用，甚至逃避接受核酸检测，英国政府应该立即采取行动。他称：“这对公共卫生安全来讲非常危险。”\\n' +\r\n            '\\n' +\r\n            '英国卫生与社会保障部表示，该应用下载量已超过2600万次，但拒绝透露有多少人卸载应用或关闭追踪功能。上周，英格兰和威尔士约有62万人接到自我隔离通知，远高于前一周的53万人。英国政府担心，实际密接者人数远不止这些。（王逸）\\n' +\r\n            '\\n' +\r\n            '作者：王逸',\r\n    },\r\n    {\r\n        time: '2020/07/26',\r\n        url: 'https://www.sohu.com/a/479549278_162758?_trans_=000014_bdss_dkwhfy',\r\n        title: '美国多地新冠肺炎病例激增 疫苗接种率暴跌',\r\n        content: '',\r\n    },\r\n    {\r\n        time: '2020/07/26',\r\n        url: 'https://www.sohu.com/a/479534660_119038?_trans_=000014_bdss_dkwhfy',\r\n        title: '辽宁新增1例本土新冠肺炎确诊病例',\r\n        content: '',\r\n    },\r\n    {\r\n        time: '2020/07/26',\r\n        url: 'https://baijiahao.baidu.com/s?id=1706333495815422867&wfr=spider&for=pc',\r\n        title: '南京有4个高风险区25个中风险区',\r\n        content: '',\r\n    },\r\n    {\r\n        time: '2020/07/26',\r\n        url: 'https://baijiahao.baidu.com/s?id=1706336335830196834&wfr=spider&for=pc',\r\n        title: '河南强降雨已致69人遇难',\r\n        content: '',\r\n    },\r\n    {\r\n        time: '2020/07/21',\r\n        url: 'https://baijiahao.baidu.com/s?id=1705875113576270748&wfr=spider&for=pc',\r\n        title: '河南巩义山体滑坡 洪灾已致至少4死',\r\n        content: '',\r\n    },\r\n    {\r\n        time: '2020/07/21',\r\n        url: 'https://baijiahao.baidu.com/s?id=1705864084293568771&wfr=spider&for=pc',\r\n        title: '多家企业捐款驰援河南',\r\n        content: '',\r\n    },\r\n    {\r\n        time: '2020/07/21',\r\n        url: 'https://baijiahao.baidu.com/s?id=1705837029117341922&wfr=spider&for=pc',\r\n        title: '国家防总将防汛Ⅲ级应急响应提升至Ⅱ级',\r\n        content: '',\r\n    },\r\n    {\r\n        time: '2020/07/20',\r\n        url: 'https://haokan.baidu.com/v?pd=wisenatural&vid=7339949482199059812',\r\n        title: '郑州地铁5号线被困乘客已安全疏散',\r\n        content: '',\r\n    },\r\n    {\r\n        time: '2020/07/20',\r\n        url: 'https://www.thepaper.cn/newsDetail_forward_13664812',\r\n        title: '郑州地铁5号线多人被困车厢',\r\n        content: '',\r\n    },\r\n    {\r\n        time: '2020/07/20',\r\n        url: 'https://baijiahao.baidu.com/s?id=1705811188133752529&wfr=spider&for=pc',\r\n        title: '郑州暴雨致多趟列车晚点停运',\r\n        content: '',\r\n    },\r\n    {\r\n        time: '2020/07/20',\r\n        url: 'https://sv.baidu.com/videoui/page/videoland?context=%7B%22nid%22%3A%22sv_9144129083453873301%22%2C%22sourceFrom%22%3A%22bjh%22%7D',\r\n        title: '郑州持续暴雨，地铁全线网车站紧急关停',\r\n        content: '',\r\n    },\r\n    {\r\n        time: '2020/07/20',\r\n        url: 'https://sv.baidu.com/videoui/page/videoland?context=%7B%22nid%22%3A%22sv_10466038847748409992%22%2C%22sourceFrom%22%3A%22bjh%22%7D',\r\n        title: '河南遭遇极端强降雨，5个气象站破极值',\r\n        content: '',\r\n    },\r\n]\r\nexport default dailyEvents\r\n","import { render } from \"./login.vue?vue&type=template&id=34cb0803&scoped=true\"\nimport script from \"./login.vue?vue&type=script&lang=js\"\nexport * from \"./login.vue?vue&type=script&lang=js\"\n\nimport \"./login.vue?vue&type=style&index=0&id=34cb0803&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-34cb0803\"\n\nexport default script","<template>\r\n    <div class=\"div-container\">\r\n        <el-container>\r\n            <el-header id=\"navigation_bar\" style=\"background-color: rgba(245,253,255,0.3);  height: 15%\">\r\n                <el-row :gutter=\"20\">\r\n                <el-col :span=\"4\"><h2><a href=\"Login\">Litluecat Blogs</a></h2></el-col>\r\n                    <el-col :span=\"12\">\r\n                        <el-menu background-color=\"rgba(245,253,255,0)\" :default-active=\"activeIndex\" class=\"el-menu-demo\" mode=\"horizontal\" @select=\"handleSelect\">\r\n                            <el-menu-item index=\"1\">首页</el-menu-item>\r\n                        </el-menu>\r\n                    </el-col>\r\n                    <el-col :span=\"8\">\r\n                        <div style=\"padding-top: 15px; text-align: right\">\r\n                            <el-avatar> 游客 </el-avatar>\r\n                        </div>\r\n                    </el-col>\r\n                </el-row>\r\n            </el-header>\r\n            <el-container style=\"height: 85%;padding-top: 10px;\">\r\n                <el-aside width=\"25%\">\r\n                    <el-container>\r\n                        <!-- 头部信息 -->\r\n                        <el-header style=\"height: 30%\">\r\n                            <bloggerInfo></bloggerInfo>\r\n                        </el-header>\r\n                        <el-main :style=\"'height: '+scrollbarHeight*0.9+'px'\">\r\n                            <blogitem></blogitem>\r\n                        </el-main>\r\n                    </el-container>\r\n                </el-aside>\r\n                <el-container>\r\n                    <el-main style=\"padding-left: 10px; padding-right: 20px; padding-top: 0px; padding-bottom: 0px\">\r\n                        <div style=\"background-color: rgba(245,253,255,0.3);padding: 10px\">\r\n                            <el-scrollbar :height=\"scrollbarHeight\">\r\n                                <router-view></router-view>\r\n                            </el-scrollbar>\r\n                        </div>\r\n                    </el-main>\r\n                </el-container>\r\n            </el-container>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport bloggerInfo from '../components/blogs/bloggerInfo'\r\nimport blogitem from '../components/blogs/blogitem'\r\nexport default {\r\n    name: 'Index',\r\n    components: {bloggerInfo,blogitem},\r\n    data() {\r\n        return {\r\n            scrollbarHeight: Number(`${document.documentElement.clientHeight}`) * 0.8,\r\n            activeIndex: '1',\r\n        };\r\n    },\r\n    mounted() {\r\n        const _this = this;\r\n        window.onresize = function temp() {\r\n            _this.scrollbarHeight = Number(`${document.documentElement.clientHeight}`) * 0.8;\r\n        }\r\n    },\r\n    methods: {\r\n        handleSelect(key, keyPath) {\r\n            console.log(key, keyPath);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.baidu_pl {\r\n    text-align: left;\r\n}\r\na{\r\n    text-decoration: none;\r\n    color:#3d8fd1\r\n}\r\n</style>\r\n","<template>\r\n    <div style=\"background-color: rgba(245,253,255,0.3); text-align: left\">\r\n        <el-container>\r\n            <el-header>\r\n                <div style=\"margin-bottom: 10px\"><el-avatar><img src=\"../../../assets/1.jpg\"></el-avatar>Litluecat</div>\r\n                <el-row :gutter=\"18\">\r\n                    <el-col :span=\"4\" v-for=\"(item, index) in hobbyList\" :key=\"index\"><el-tag size=\"mini\">{{item}}</el-tag></el-col>\r\n                </el-row>\r\n            </el-header>\r\n            <el-main>河南加油！！！中国加油！！！</el-main>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            value: new Date(),\r\n            hobbyList: ['猫猫','赚钱','动漫','游戏','工作','佛系'],\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n</style>\r\n","import { render } from \"./bloggerInfo.vue?vue&type=template&id=a0449d52\"\nimport script from \"./bloggerInfo.vue?vue&type=script&lang=js\"\nexport * from \"./bloggerInfo.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\r\n    <el-collapse v-model=\"activeNames\" @change=\"handleChange\" accordion id=\"blogitem\">\r\n        <el-collapse-item title=\"Java\" name=\"1\">\r\n            <div class=\"block\">\r\n                <el-timeline color=\"rgb\">\r\n                    <el-scrollbar :height=\"scrollbarHeight\">\r\n                        <template v-for=\"(item, index) in blogitems\" :key=\"index\">\r\n                            <el-timeline-item v-if=\"'Java' === (item.type)\" placement=\"top\" :timestamp=\"item.time\">\r\n                                <el-card style=\"background-color: rgba(245,253,255,0.3);\" @click=\"gotoOneBlog(item.url)\">\r\n                                    <div class=\"block\" style=\"height: 80%\">\r\n                                        <el-image style=\"width: 60%;\" :src=\"item.backgroundImgUrl\"></el-image>\r\n                                    </div>\r\n                                    <p>{{item.content}}</p>\r\n                                </el-card>\r\n                            </el-timeline-item>\r\n                        </template>\r\n                    </el-scrollbar>\r\n                </el-timeline>\r\n            </div>\r\n        </el-collapse-item>\r\n        <el-collapse-item title=\"Vue\" name=\"2\">\r\n            <div class=\"block\">\r\n                <el-timeline color=\"rgb\">\r\n                    <el-scrollbar :height=\"scrollbarHeight\">\r\n                        <template v-for=\"(item, index) in blogitems\" :key=\"index\">\r\n                            <el-timeline-item v-if=\"'Vue' === (item.type)\" placement=\"top\" :timestamp=\"item.time\">\r\n                                <el-card style=\"background-color: rgba(245,253,255,0.3);\" @click=\"gotoOneBlog(item.url)\">\r\n                                    <div class=\"block\" style=\"height: 80%\">\r\n                                        <el-image style=\"width: 60%;\" :src=\"item.backgroundImgUrl\"></el-image>\r\n                                    </div>\r\n                                    <p>{{item.content}}</p>\r\n                                </el-card>\r\n                            </el-timeline-item>\r\n                        </template>\r\n                    </el-scrollbar>\r\n                </el-timeline>\r\n            </div>\r\n        </el-collapse-item>\r\n        <el-collapse-item title=\"Study\" name=\"3\">\r\n            <div class=\"block\">\r\n                <el-timeline color=\"rgb\">\r\n                    <el-scrollbar :height=\"scrollbarHeight\">\r\n                        <template v-for=\"(item, index) in blogitems\" :key=\"index\">\r\n                            <el-timeline-item v-if=\"'Study' === (item.type)\" placement=\"top\">\r\n                                <el-card style=\"background-color: rgba(245,253,255,0.3);\" @click=\"gotoOneBlog(item.url)\">\r\n<!--                                    <div class=\"block\" style=\"height: 80%\">-->\r\n<!--                                        <el-image style=\"width: 60%;\" :src=\"item.backgroundImgUrl\"></el-image>-->\r\n<!--                                    </div>-->\r\n                                    <p>{{item.content}}</p>\r\n                                </el-card>\r\n                            </el-timeline-item>\r\n                        </template>\r\n                    </el-scrollbar>\r\n                </el-timeline>\r\n            </div>\r\n        </el-collapse-item>\r\n    </el-collapse>\r\n</template>\r\n\r\n<script>\r\nimport _blogitems from \"../../../textlibrary/blogitems\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            scrollbarHeight: Number(`${document.documentElement.clientHeight}`) * 0.3,\r\n            activeNames: ['1'],\r\n            blogitems: [],\r\n        };\r\n    },\r\n    created() {\r\n        this.blogitems = _blogitems;\r\n    },\r\n    mounted() {\r\n        const _this = this;\r\n        window.onresize = function temp() {\r\n            _this.scrollbarHeight = Number(`${document.documentElement.clientHeight}`) * 0.4;\r\n        };\r\n    },\r\n    methods: {\r\n        handleChange(val) {\r\n            console.log(val);\r\n        },\r\n        gotoOneBlog(url){\r\n            this.$router.push({name:url})\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n#blogitem div{\r\n    background-color: rgba(245,253,255,0);\r\n}\r\n#blogitem .el-card__body{\r\n    padding: 5px;\r\n}\r\n#blogitem .el-collapse-item__header{\r\n    font-size: 15px;\r\n}\r\n#blogitem .el-timeline-item{\r\n    padding-bottom: 5px;\r\n}\r\n</style>\r\n","<template>\r\n<h2>架构设计&分布式&数据结构与算法面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"_31\"></a>架构设计</h2>\r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"JDK_33\"></a>请列举出在JDK中几个常用的设计模式？</h3>\r\n<p>单例模式（Singleton pattern）用于Runtime，Calendar和其他的一些类中。工厂模式（Factory pattern）被用于各种不可变的类如 Boolean，像Boolean.valueOf，观察者模式（Observer pattern）被用于 Swing 和很多的事件监听中。装饰器设计模式（Decorator design pattern）被用于多个 Java IO 类中。</p>\r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"_39\"></a>什么是设计模式？你是否在你的代码里面使用过任何设计模式？</h3>\r\n<p>设计模式是软件开发人员在软件开发过程中面临的一般问题的解决方案。这些解决方案是众多软件开发人员经过相当长的一段时间的试验和错误总结出来的。设计模式是代码可用性的延伸</p>\r\n<p>设计模式分类：创建型模式，结构型模式，行为型模式</p>\r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"JDKCGLIB_47\"></a>静态代理、JDK动态代理以及CGLIB动态代理</h3>\r\n<p>代理模式是java中最常用的设计模式之一，尤其是在spring框架中广泛应用。对于java的代理模式，一般可分为：静态代理、动态代理、以及CGLIB实现动态代理。</p>\r\n<p>对于上述三种代理模式，分别进行说明。</p>\r\n<h4><a id=\"_53\"></a>静态代理</h4>\r\n<p>静态代理其实就是在程序运行之前，提前写好被代理方法的代理类，编译后运行。在程序运行之前，class已经存在。<br> 下面我们实现一个静态代理demo:</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8zMjM3NDMyLTVkNmViYWI3YTlmM2Q4MzIucG5n?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>定义一个接口Target</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>proxy<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Target</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p>TargetImpl 实现接口Target</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>proxy<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TargetImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Target</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TargetImpl execute！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"execute\"</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<p>代理类</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>proxy<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Proxy</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Target</span><span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span> Target target<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">Proxy</span><span class=\"token punctuation\">(</span>Target target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"perProcess\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        String result <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"postProcess\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li></ul></pre>\r\n<p>测试类:</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>proxy<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProxyTest</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n        Target target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TargetImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Proxy p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        String result <span class=\"token operator\">=</span>  p<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li></ul></pre>\r\n<p>运行结果:</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">perProcess\r\nTargetImpl execute！\r\npostProcess\r\nexecute\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>静态代理需要针对被代理的方法提前写好代理类，如果被代理的方法非常多则需要编写很多代码，因此，对于上述缺点，通过动态代理的方式进行了弥补。</p>\r\n<h4><a id=\"_140\"></a>动态代理</h4>\r\n<p>动态代理主要是通过反射机制，在运行时动态生成所需代理的class.</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8zMjM3NDMyLTYzMzU2NDcwZjY0MmQ2NjUucG5n?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>接口</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>dynamic<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Target</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p>实现类</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>dynamic<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TargetImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Target</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TargetImpl execute！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"execute\"</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<p>代理类</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>dynamic<span class=\"token punctuation\">;</span>\r\n\r\n\r\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span>InvocationHandler<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span>Method<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DynamicProxyHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">InvocationHandler</span><span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span> Target target<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">DynamicProxyHandler</span><span class=\"token punctuation\">(</span>Target target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> Object <span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>Object proxy<span class=\"token punctuation\">,</span> Method method<span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> Throwable <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"========before==========\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Object result <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"========after===========\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li></ul></pre>\r\n<p>测试类</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>dynamic<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span>Proxy<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DynamicProxyTest</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        Target target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TargetImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        DynamicProxyHandler handler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DynamicProxyHandler</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Target proxySubject <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Target<span class=\"token punctuation\">)</span> Proxy<span class=\"token punctuation\">.</span><span class=\"token function\">newProxyInstance</span><span class=\"token punctuation\">(</span>TargetImpl<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>TargetImpl<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInterfaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        String result <span class=\"token operator\">=</span> proxySubject<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li></ul></pre>\r\n<p>运行结果：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>before<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>\r\nTargetImpl execute！\r\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>after<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\r\nexecute\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>无论是动态代理还是静态带领，都需要定义接口，然后才能实现代理功能。这同样存在局限性，因此，为了解决这个问题，出现了第三种代理方式：cglib代理。</p>\r\n<h4><a id=\"cglib_232\"></a>cglib代理</h4>\r\n<p>CGLib采用了非常底层的字节码技术，其原理是通过字节码技术为一个类创建子类，并在子类中采用方法拦截的技术拦截所有父类方法的调用，顺势织入横切逻辑。JDK动态代理与CGLib动态代理均是实现Spring AOP的基础。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8zMjM3NDMyLTYzOGY4MmM2ZDRkNTExNDUucG5n?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>目标类</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>cglib<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Target</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        String message <span class=\"token operator\">=</span> <span class=\"token string\">\"-----------test------------\"</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> message<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<p>通用代理类</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>cglib<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">import</span> net<span class=\"token punctuation\">.</span>sf<span class=\"token punctuation\">.</span>cglib<span class=\"token punctuation\">.</span>proxy<span class=\"token punctuation\">.</span>MethodInterceptor<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> net<span class=\"token punctuation\">.</span>sf<span class=\"token punctuation\">.</span>cglib<span class=\"token punctuation\">.</span>proxy<span class=\"token punctuation\">.</span>MethodProxy<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span>Method<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyMethodInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MethodInterceptor</span><span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> Object <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span>Object obj<span class=\"token punctuation\">,</span> Method method<span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">,</span> MethodProxy proxy<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> Throwable <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;MethodInterceptor start...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Object result <span class=\"token operator\">=</span> proxy<span class=\"token punctuation\">.</span><span class=\"token function\">invokeSuper</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&gt;&gt;&gt;&gt;MethodInterceptor ending...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"result\"</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li></ul></pre>\r\n<p>测试类</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>cglib<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">import</span> net<span class=\"token punctuation\">.</span>sf<span class=\"token punctuation\">.</span>cglib<span class=\"token punctuation\">.</span>proxy<span class=\"token punctuation\">.</span>Enhancer<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CglibTest</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"***************\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Target target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Target</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        CglibTest test <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CglibTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Target proxyTarget <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Target<span class=\"token punctuation\">)</span> test<span class=\"token punctuation\">.</span><span class=\"token function\">createProxy</span><span class=\"token punctuation\">(</span>Target<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        String res <span class=\"token operator\">=</span> proxyTarget<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> Object <span class=\"token function\">createProxy</span><span class=\"token punctuation\">(</span>Class <span class=\"token class-name\">targetClass</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        Enhancer enhancer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Enhancer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        enhancer<span class=\"token punctuation\">.</span><span class=\"token function\">setSuperclass</span><span class=\"token punctuation\">(</span>targetClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        enhancer<span class=\"token punctuation\">.</span><span class=\"token function\">setCallback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyMethodInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> enhancer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li></ul></pre>\r\n<p>执行结果:</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>\r\n<span class=\"token operator\">&gt;&gt;&gt;</span><span class=\"token operator\">&gt;</span>MethodInterceptor start<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>test<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\r\n<span class=\"token operator\">&gt;&gt;&gt;</span><span class=\"token operator\">&gt;</span>MethodInterceptor ending<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\nresult\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<p>代理对象的生成过程由Enhancer类实现，大概步骤如下：</p>\r\n<ol><li> <p>生成代理类Class的二进制字节码；</p> </li><li> <p>通过Class.forName加载二进制字节码，生成Class对象；</p> </li><li> <p>通过反射机制获取实例构造，并初始化代理类对象。</p> </li></ol>\r\n<h3><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"_323\"></a>单例模式</h3>\r\n<p>单例模式（Singleton Pattern）是 Java 中最简单的设计模式之一。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。</p>\r\n<p><strong>意图</strong>：保证一个类仅有一个实例，并提供一个访问它的全局访问点。</p>\r\n<p><strong>主要解决</strong>：一个全局使用的类频繁地创建与销毁。</p>\r\n<p>懒汉式，线程安全</p>\r\n<p><strong>代码实例</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton2</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> Singleton2 instance<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token function\">Singleton2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">synchronized</span> Singleton2 <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>instance <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">return</span> instance<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li></ul></pre>\r\n<p>饿汉式，线程安全</p>\r\n<p><strong>代码实例</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton3</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> Singleton3 instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token function\">Singleton3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> Singleton3 <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">return</span> instance<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li></ul></pre>\r\n<p>双检锁/双重校验锁 + volatile关键字</p>\r\n<p><strong>代码实例</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton7</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">volatile</span> Singleton7 instance <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token function\">Singleton7</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> Singleton7 <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>instance <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>Singleton7<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>instance <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton7</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">return</span> instance<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li></ul></pre>\r\n<h3><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"_405\"></a>工厂模式</h3>\r\n<p>工厂模式（Factory Pattern）是 Java 中最常用的设计模式之一。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。</p>\r\n<p><strong>意图</strong>：定义一个创建对象的接口，让其子类自己决定实例化哪一个工厂类，工厂模式使其创建过程延迟到子类进行。</p>\r\n<p><strong>主要解决</strong>：主要解决接口选择的问题。</p>\r\n<p>我们将创建一个 <em>Shape</em> 接口和实现 <em>Shape</em> 接口的实体类。下一步是定义工厂类 <em>ShapeFactory</em>。</p>\r\n<p><em>FactoryPatternDemo</em>，我们的演示类使用 <em>ShapeFactory</em> 来获取 <em>Shape</em> 对象。它将向 <em>ShapeFactory</em> 传递信息（<em>CIRCLE / RECTANGLE / SQUARE</em>），以便获取它所需对象的类型。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvdXJXb24vaW1hZ2UvbWFzdGVyLyVFOCVBRSVCRSVFOCVBRSVBMSVFNiVBOCVBMSVFNSVCQyU4Ri8lRTUlQjclQTUlRTUlOEUlODIlRTYlQTglQTElRTUlQkMlOEYuanBn\" alt=\"工厂模式\"></p>\r\n<p>步骤 1</p>\r\n<p>创建一个接口。</p>\r\n<p><em>Shape.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Shape</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<p>步骤 2</p>\r\n<p>创建实现接口的实体类。</p>\r\n<p><em>Rectangle.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Rectangle</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Shape</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Inside Rectangle::draw() method.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p><em>Square.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Square</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Shape</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Inside Square::draw() method.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p><em>Circle.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Circle</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Shape</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Inside Circle::draw() method.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p>步骤 3</p>\r\n<p>创建一个工厂，生成基于给定信息的实体类的对象。</p>\r\n<p><em>ShapeFactory.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ShapeFactory</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token comment\">//使用 getShape 方法获取形状类型的对象</span>\r\n    <span class=\"token keyword\">public</span> Shape <span class=\"token function\">getShape</span><span class=\"token punctuation\">(</span>String shapeType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>shapeType <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">return</span> null<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        shapeType <span class=\"token operator\">=</span> shapeType<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>shapeType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">case</span> <span class=\"token string\">\"circle\"</span><span class=\"token operator\">:</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">case</span> <span class=\"token string\">\"rectangle\"</span><span class=\"token operator\">:</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">case</span> <span class=\"token string\">\"square\"</span><span class=\"token operator\">:</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Square</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\r\n                <span class=\"token keyword\">return</span> null<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li></ul></pre>\r\n<p>步骤 4</p>\r\n<p>使用该工厂，通过传递类型信息来获取实体类的对象。</p>\r\n<p><em>FactoryPatternDemo.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FactoryPatternDemo</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        ShapeFactory shapeFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ShapeFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token comment\">//获取 Circle 的对象，并调用它的 draw 方法</span>\r\n        Shape shape1 <span class=\"token operator\">=</span> shapeFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getShape</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CIRCLE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//调用 Circle 的 draw 方法</span>\r\n        shape1<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token comment\">//获取 Rectangle 的对象，并调用它的 draw 方法</span>\r\n        Shape shape2 <span class=\"token operator\">=</span> shapeFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getShape</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"RECTANGLE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//调用 Rectangle 的 draw 方法</span>\r\n        shape2<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token comment\">//获取 Square 的对象，并调用它的 draw 方法</span>\r\n        Shape shape3 <span class=\"token operator\">=</span> shapeFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getShape</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SQUARE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//调用 Square 的 draw 方法</span>\r\n        shape3<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li></ul></pre>\r\n<p>步骤 5</p>\r\n<p>验证输出。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Inside Circle<span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> method<span class=\"token punctuation\">.</span>\r\nInside Rectangle<span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> method<span class=\"token punctuation\">.</span>\r\nInside Square<span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> method<span class=\"token punctuation\">.</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<h3><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"_545\"></a>观察者模式</h3>\r\n<p>当对象间存在一对多关系时，则使用观察者模式（Observer Pattern）。比如，当一个对象被修改时，则会自动通知它的依赖对象。观察者模式属于行为型模式。</p>\r\n<p><strong>意图</strong>：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。</p>\r\n<p><strong>主要解决</strong>：一个对象状态改变给其他对象通知的问题，而且要考虑到易用和低耦合，保证高度的协作。</p>\r\n<p>实现</p>\r\n<p>观察者模式使用三个类 Subject、Observer 和 Client。Subject 对象带有绑定观察者到 Client 对象和从 Client 对象解绑观察者的方法。我们创建 <em>Subject</em> 类、<em>Observer</em> 抽象类和扩展了抽象类 <em>Observer</em> 的实体类。</p>\r\n<p><em>ObserverPatternDemo</em>，我们的演示类使用 <em>Subject</em> 和实体类对象来演示观察者模式。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvdXJXb24vaW1hZ2UvbWFzdGVyLyVFOCVBRSVCRSVFOCVBRSVBMSVFNiVBOCVBMSVFNSVCQyU4Ri8lRTglQTclODIlRTUlQUYlOUYlRTglODAlODUlRTYlQTglQTElRTUlQkMlOEYuanBn\" alt=\"观察者模式\"></p>\r\n<p>步骤 1</p>\r\n<p>创建 Subject 类。</p>\r\n<p><em>Subject.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Subject</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span> List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Observer<span class=\"token punctuation\">&gt;</span></span> observers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> state<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> state<span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\">notifyAllObservers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>Observer observer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        observers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">notifyAllObservers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>Observer observer <span class=\"token operator\">:</span> observers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            observer<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li></ul></pre>\r\n<p>步骤 2</p>\r\n<p>创建 Observer 类。</p>\r\n<p><em>Observer.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Observer</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">protected</span> Subject subject<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<p>步骤 3</p>\r\n<p>创建实体观察者类。</p>\r\n<p><em>BinaryObserver.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BinaryObserver</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Observer</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">BinaryObserver</span><span class=\"token punctuation\">(</span>Subject subject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subject <span class=\"token operator\">=</span> subject<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subject<span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Binary String: \"</span>\r\n                <span class=\"token operator\">+</span> Integer<span class=\"token punctuation\">.</span><span class=\"token function\">toBinaryString</span><span class=\"token punctuation\">(</span>subject<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li></ul></pre>\r\n<p><em>OctalObserver.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OctalObserver</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Observer</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">OctalObserver</span><span class=\"token punctuation\">(</span>Subject subject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subject <span class=\"token operator\">=</span> subject<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subject<span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"Octal String: \"</span>\r\n                <span class=\"token operator\">+</span> Integer<span class=\"token punctuation\">.</span><span class=\"token function\">toOctalString</span><span class=\"token punctuation\">(</span> subject<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li></ul></pre>\r\n<p><em>HexaObserver.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HexaObserver</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Observer</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">HexaObserver</span><span class=\"token punctuation\">(</span>Subject subject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subject <span class=\"token operator\">=</span> subject<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subject<span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"Hex String: \"</span>\r\n                <span class=\"token operator\">+</span> Integer<span class=\"token punctuation\">.</span><span class=\"token function\">toHexString</span><span class=\"token punctuation\">(</span> subject<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li></ul></pre>\r\n<p>步骤 4</p>\r\n<p>使用 <em>Subject</em> 和实体观察者对象。</p>\r\n<p><em>ObserverPatternDemo.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ObserverPatternDemo</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        Subject subject <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Subject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">BinaryObserver</span><span class=\"token punctuation\">(</span>subject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">HexaObserver</span><span class=\"token punctuation\">(</span>subject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">OctalObserver</span><span class=\"token punctuation\">(</span>subject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"First state change: 15\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        subject<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Second state change: 10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        subject<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li></ul></pre>\r\n<p>步骤 5</p>\r\n<p>验证输出。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">First state change<span class=\"token operator\">:</span> <span class=\"token number\">15</span>\r\nBinary String<span class=\"token operator\">:</span> <span class=\"token number\">1111</span>\r\nHex String<span class=\"token operator\">:</span> F\r\nOctal String<span class=\"token operator\">:</span> <span class=\"token number\">17</span>\r\n\r\nSecond state change<span class=\"token operator\">:</span> <span class=\"token number\">10</span>\r\nBinary String<span class=\"token operator\">:</span> <span class=\"token number\">1010</span>\r\nHex String<span class=\"token operator\">:</span> A\r\nOctal String<span class=\"token operator\">:</span> <span class=\"token number\">12</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"_720\"></a>装饰器模式</h3>\r\n<p>装饰器模式（Decorator Pattern）允许向一个现有的对象添加新的功能，同时又不改变其结构。这种类型的设计模式属于结构型模式，它是作为现有的类的一个包装。</p>\r\n<p><strong>意图</strong>：动态地给一个对象添加一些额外的职责。就增加功能来说，装饰器模式相比生成子类更为灵活。</p>\r\n<p><strong>主要解决</strong>：一般的，我们为了扩展一个类经常使用继承方式实现，由于继承为类引入静态特征，并且随着扩展功能的增多，子类会很膨胀。</p>\r\n<p>实现</p>\r\n<p>我们将创建一个 <em>Shape</em> 接口和实现了 <em>Shape</em> 接口的实体类。然后我们创建一个实现了 <em>Shape</em> 接口的抽象装饰类 <em>ShapeDecorator</em>，并把 <em>Shape</em> 对象作为它的实例变量。</p>\r\n<p><em>RedShapeDecorator</em> 是实现了 <em>ShapeDecorator</em> 的实体类。</p>\r\n<p><em>DecoratorPatternDemo</em>，我们的演示类使用 <em>RedShapeDecorator</em> 来装饰 <em>Shape</em> 对象。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvdXJXb24vaW1hZ2UvbWFzdGVyLyVFOCVBRSVCRSVFOCVBRSVBMSVFNiVBOCVBMSVFNSVCQyU4Ri8lRTglQTMlODUlRTklQTUlQjAlRTUlOTklQTglRTYlQTglQTElRTUlQkMlOEYuanBn\" alt=\"装饰器模式\"></p>\r\n<p>步骤 1</p>\r\n<p>创建一个接口。</p>\r\n<p><em>Shape.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Shape</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<p>步骤 2</p>\r\n<p>创建实现接口的实体类。</p>\r\n<p><em>Rectangle.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Rectangle</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Shape</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Shape: Rectangle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<p><em>Circle.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Circle</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Shape</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Shape: Circle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<p>步骤 3</p>\r\n<p>创建实现了 <em>Shape</em> 接口的抽象装饰类。</p>\r\n<p><em>ShapeDecorator.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ShapeDecorator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Shape</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">protected</span> Shape decoratorShape<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">ShapeDecorator</span><span class=\"token punctuation\">(</span>Shape decoratorShape<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>decoratorShape <span class=\"token operator\">=</span> decoratorShape<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        decoratorShape<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li></ul></pre>\r\n<p>步骤 4</p>\r\n<p>创建扩展了 <em>ShapeDecorator</em> 类的实体装饰类。</p>\r\n<p><em>RedShapeDecorator.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RedShapeDecorator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ShapeDecorator</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">RedShapeDecorator</span><span class=\"token punctuation\">(</span>Shape decoratorShape<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>decoratorShape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        decoratorShape<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\">setRedBorder</span><span class=\"token punctuation\">(</span>decoratorShape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setRedBorder</span><span class=\"token punctuation\">(</span>Shape decoratorShape<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Border Color: Red\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li></ul></pre>\r\n<p>步骤 5</p>\r\n<p>使用 <em>RedShapeDecorator</em> 来装饰 <em>Shape</em> 对象。</p>\r\n<p><em>DecoratorPatternDemo.java</em></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DecoratorPatternDemo</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        Shape circle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Shape redCircle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RedShapeDecorator</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Shape redRectangle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RedShapeDecorator</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Circle with normal border\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        circle<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nCircle of red border\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        redCircle<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nRectangle of red border\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        redRectangle<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li></ul></pre>\r\n<p>步骤 6</p>\r\n<p>验证输出。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Circle with normal border\r\nShape<span class=\"token operator\">:</span> Circle\r\n\r\nCircle of red border\r\nShape<span class=\"token operator\">:</span> Circle\r\nBorder Color<span class=\"token operator\">:</span> Red\r\n\r\nRectangle of red border\r\nShape<span class=\"token operator\">:</span> Rectangle\r\nBorder Color<span class=\"token operator\">:</span> Red\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<h3><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"_879\"></a>秒杀系统设计</h3>\r\n<p><strong>什么是秒杀</strong></p>\r\n<p>通俗一点讲就是网络商家为促销等目的组织的网上限时抢购活动</p>\r\n<p><strong>业务特点</strong></p>\r\n<ul><li> <p>高并发：秒杀的特点就是这样<strong>时间极短</strong>、 <strong>瞬间用户量大</strong>。</p> </li><li> <p>库存量少：一般秒杀活动商品量很少，这就导致了只有极少量用户能成功购买到。</p> </li><li> <p>业务简单：流程比较简单，一般都是下订单、扣库存、支付订单</p> </li><li> <p>恶意请求，数据库压力大</p> </li></ul>\r\n<p><strong>解决方案</strong></p>\r\n<p>前端：页面资源静态化，按钮控制，使用答题校验码可以防止秒杀器的干扰，让更多用户有机会抢到</p>\r\n<p>nginx：校验恶意请求，转发请求，负载均衡；动静分离，不走tomcat获取静态资源；gzip压缩，减少静态文件传输的体积，节省带宽，提高渲染速度</p>\r\n<p>业务层：集群，多台机器处理，提高并发能力</p>\r\n<p>redis：集群保证高可用，持久化数据；分布式锁（悲观锁）；缓存热点数据（库存）</p>\r\n<p>mq：削峰限流，MQ堆积订单，保护订单处理层的负载，Consumer根据自己的消费能力来取Task，实际上下游的压力就可控了。重点做好路由层和MQ的安全</p>\r\n<p>数据库：读写分离，拆分事务提高并发度</p>\r\n<p><strong>秒杀系统设计小结</strong></p>\r\n<ul><li>秒杀系统就是一个“三高”系统，即<strong>高并发、高性能</strong>和<strong>高可用</strong>的分布式系统</li><li>秒杀设计原则：<strong>前台请求尽量少，后台数据尽量少，调用链路尽量短，尽量不要有单点</strong></li><li>秒杀高并发方法：<strong>访问拦截、分流、动静分离</strong></li><li>秒杀数据方法：<strong>减库存策略、热点、异步、限流降级</strong></li><li>访问拦截主要思路：通过CDN和缓存技术，尽量把访问拦截在离用户更近的层，尽可能地过滤掉无效请求。</li><li>分流主要思路：通过分布式集群技术，多台机器处理，提高并发能力。</li></ul>\r\n<h2><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"_920\"></a>分布式</h2>\r\n<h3><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"_922\"></a>分布式概述</h3>\r\n<h4><a id=\"_924\"></a>分布式</h4>\r\n<p>分布式（distributed）是为了解决单个物理服务器容量和性能瓶颈问题而采用的优化手段，将一个业务拆分成不同的子业务，分布在不同的机器上执行。服务之间通过远程调用协同工作，对外提供服务。</p>\r\n<p>该领域需要解决的问题极多，在不同的技术层面上，又包括：分布式缓存、分布式数据库、分布式计算、分布式文件系统等，一些技术如MQ、Redis、zookeeper等都跟分布式有关。</p>\r\n<p>从理念上讲，分布式的实现有两种形式：</p>\r\n<p><strong>水平扩展</strong>：当一台机器扛不住流量时，就通过添加机器的方式，将流量平分到所有服务器上，所有机器都可以提供 相同的服务；</p>\r\n<p><strong>垂直拆分</strong>：前端有多种查询需求时，一台机器扛不住，可以将不同的业务需求分发到不同的机器上，比如A机器处理余票查询的请求，B机器处理支付的请求。</p>\r\n<h4><a id=\"_938\"></a>集群</h4>\r\n<p>集群（cluster）是指在多台不同的服务器中部署相同应用或服务模块，构成一个集群，通过负载均衡设备对外提供服务。</p>\r\n<p>两个特点</p>\r\n<p><strong>可扩展性</strong>：集群中的服务节点，可以动态的添加机器，从而增加集群的处理能力。</p>\r\n<p><strong>高可用性</strong>：如果集群某个节点发生故障，这台节点上面运行的服务，可以被其他服务节点接管，从而增强集群的高可用性。</p>\r\n<p>两大能力</p>\r\n<p><strong>负载均衡</strong>：负载均衡能把任务比较均衡地分布到集群环境下的计算和网络资源。</p>\r\n<p><strong>集群容错</strong>：当我们的系统中用到集群环境，因为各种原因在集群调用失败时，集群容错起到关键性的作用。</p>\r\n<h4><a id=\"_956\"></a>微服务</h4>\r\n<p>微服务就是很小的服务，小到一个服务只对应一个单一的功能，只做一件事。这个服务可以单独部署运行，服务之间通过远程调用协同工作，每个微服务都是由独立的小团队开发，测试，部署，上线，负责它的整个生命周期。</p>\r\n<h4><a id=\"_962\"></a>多线程</h4>\r\n<p>多线程（multi-thread）：多线程是指程序中包含多个执行流，即在一个程序中可以同时运行多个不同的线程来执行不同的任务。多线程是为了提高CPU的利用率。</p>\r\n<h4><a id=\"_968\"></a>高并发</h4>\r\n<p>高并发（High Concurrency）是一种系统运行过程中发生了一种“短时间内遇到大量请求”的情况，高并发对应的是访问请求，多线程是解决高并发的方法之一，高并发还可以通过分布式，集群，算法优化，数据库优化等方法解决。</p>\r\n<h3><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"_974\"></a>分布式系统设计理念</h3>\r\n<h4><a id=\"_976\"></a>分布式系统的目标与要素</h4>\r\n<p>分布式系统的目标是提升系统的整体性能和吞吐量另外还要尽量保证分布式系统的容错性（假如增加10台服务器才达到单机运行效果2倍左右的性能，那么这个分布式系统就根本没有存在的意义）。</p>\r\n<p>即使采用了分布式系统，我们也要尽力运用并发编程、高性能网络框架等等手段提升单机上的程序性能。</p>\r\n<h4><a id=\"_982\"></a>分布式系统设计两大思路：中心化和去中心化</h4>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC81LzI0LzE2MzkxNWQ1ZGZiM2VjZTk?x-oss-process=image/format,png\" alt=\"分布式系统设计两大思路：中心化和去中心化\"></p>\r\n<p><strong>中心化设计</strong></p>\r\n<ul><li><strong>两个角色：</strong> 中心化的设计思想很简单，分布式集群中的节点机器按照角色分工，大体上分为两种角色： <strong>“领导”</strong> 和 <strong>“干活的”</strong></li><li><strong>角色职责：</strong> “领导”通常负责分发任务并监督“干活的”，发现谁太闲了，就想发设法地给其安排新任务，确保没有一个“干活的”能够偷懒，如果“领导”发现某个“干活的”因为劳累过度而病倒了，则是不会考虑先尝试“医治”他的，而是一脚踢出去，然后把他的任务分给其他人。其中微服务架构 <strong>Kubernetes</strong> 就恰好采用了这一设计思路。</li><li>中心化设计的问题\r\n<ol><li>中心化的设计存在的最大问题是“领导”的安危问题，如果“领导”出了问题，则群龙无首，整个集群就奔溃了。但我们难以同时安排两个“领导”以避免单点问题。</li><li>中心化设计还存在另外一个潜在的问题，既“领导”的能力问题：可以领导10个人高效工作并不意味着可以领导100个人高效工作，所以如果系统设计和实现得不好，问题就会卡在“领导”身上。</li></ol> </li><li><strong>领导安危问题的解决办法：</strong> 大多数中心化系统都采用了主备两个“领导”的设计方案，可以是热备或者冷备，也可以是自动切换或者手动切换，而且越来越多的新系统都开始具备自动选举切换“领导”的能力，以提升系统的可用性。</li></ul>\r\n<p><strong>去中心化设计</strong></p>\r\n<ul><li><strong>众生地位平等：</strong> 在去中心化的设计里，通常没有“领导”和“干活的”这两种角色的区分，大家的角色都是一样的，地位是平等的，全球互联网就是一个典型的去中心化的分布式系统，联网的任意节点设备宕机，都只会影响很小范围的功能。</li><li><strong>“去中心化”不是不要中心，而是由节点来自由选择中心。</strong> （集群的成员会自发的举行“会议”选举新的“领导”主持工作。最典型的案例就是ZooKeeper及Go语言实现的Etcd）</li><li><strong>去中心化设计的问题：</strong> 去中心化设计里最难解决的一个问题是 <strong>“脑裂”问题</strong> ，这种情况的发生概率很低，但影响很大。脑裂指一个集群由于网络的故障，被分为至少两个彼此无法通信的单独集群，此时如果两个集群都各自工作，则可能会产生严重的数据冲突和错误。一般的设计思路是，当集群判断发生了脑裂问题时，规模较小的集群就“自杀”或者拒绝服务。</li></ul>\r\n<h4><a id=\"_1003\"></a>分布式与集群的区别是什么？</h4>\r\n<ul><li><strong>分布式：</strong> 一个业务分拆多个子业务，部署在不同的服务器上</li><li><strong>集群：</strong> 同一个业务，部署在多个服务器上。比如之前做电商网站搭的redis集群以及solr集群都是属于将redis服务器提供的缓存服务以及solr服务器提供的搜索服务部署在多个服务器上以提高系统性能、并发量解决海量存储问题。</li></ul>\r\n<h3><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"CAP_1010\"></a>CAP定理</h3>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC81LzI0LzE2MzkxMmU5NzNlY2I5M2M?x-oss-process=image/format,png\" alt=\"CAP定理\"></p>\r\n<p>在理论计算机科学中，CAP定理（CAP theorem），又被称作布鲁尔定理（Brewer’s theorem），它指出对于一个分布式计算系统来说，不可能同时满足以下三点：</p>\r\n<div class=\"table-box\"><table><thead><tr><th align=\"left\">选项</th><th align=\"left\">描述</th></tr></thead><tbody><tr><td align=\"left\">Consistency（一致性）</td><td align=\"left\">指数据在多个副本之间能够保持一致的特性（严格的一致性）</td></tr><tr><td align=\"left\">Availability（可用性）</td><td align=\"left\">指系统提供的服务必须一直处于可用的状态，每次请求都能获取到非错的响应（不保证获取的数据为最新数据）</td></tr><tr><td align=\"left\">Partition tolerance（分区容错性）</td><td align=\"left\">分布式系统在遇到任何网络分区故障的时候，仍然能够对外提供满足一致性和可用性的服务，除非整个网络环境都发生了故障</td></tr></tbody></table></div>\r\n<p><strong>Spring Cloud在CAP法则上主要满足的是A和P法则，Dubbo和Zookeeper在CAP法则主要满足的是C和P法则</strong></p>\r\n<p>CAP仅适用于原子读写的NOSQL场景中，并不适合数据库系统。现在的分布式系统具有更多特性比如扩展性、可用性等等，在进行系统设计和开发时，我们不应该仅仅局限在CAP问题上。</p>\r\n<p><strong>注意：不是所谓的3选2（不要被网上大多数文章误导了）</strong></p>\r\n<p>现实生活中，大部分人解释这一定律时，常常简单的表述为：“一致性、可用性、分区容忍性三者你只能同时达到其中两个，不可能同时达到”。实际上这是一个非常具有误导性质的说法，而且在CAP理论诞生12年之后，CAP之父也在2012年重写了之前的论文。</p>\r\n<p><strong>当发生网络分区的时候，如果我们要继续服务，那么强一致性和可用性只能2选1。也就是说当网络分区之后P是前提，决定了P之后才有C和A的选择。也就是说分区容错性（Partition tolerance）我们是必须要实现的。</strong></p>\r\n<h2><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"CAP_1034\"></a>CAP定理的证明</h2>\r\n<p>关于CAP这三个特性我们就介绍完了，接下来我们试着证明一下<strong>为什么CAP不能同时满足</strong>。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAyMC8xLzExLzE2ZjkyMTEwOTczNjgzMDY?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>为了简化证明的过程，我们假设整个集群里只有两个N1和N2两个节点，如下图：</p>\r\n<p>N1和N2当中各自有一个应用程序AB和数据库，当系统满足一致性的时候，我们认为N1和N2数据库中的数据保持一致。在满足可用性的时候，我们认为无论用户访问N1还是N2，都可以获得正确的结果，在满足分区容错性的时候，我们认为无论N1还是N2宕机或者是两者的通信中断，都不影响系统的运行。</p>\r\n<p>我们假设一种极端情况，假设某个时刻N1和N2之间的网络通信突然中断了。如果系统<strong>满足分区容错性</strong>，那么显然可以支持这种异常。问题是在此前提下，一致性和可用性是否可以做到不受影响呢？</p>\r\n<p>我们做个假象实验，如下图，突然某一时刻N1和N2之间的关联断开：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAyMC8xLzExLzE2ZjkyMTEzMTkxNmYxODY?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>有用户向N1发送了请求更改了数据，将数据库从V0更新成了V1。由于网络断开，所以N2数据库依然是V0，如果这个时候有一个请求发给了N2，但是N2并没有办法可以直接给出最新的结果V1，这个时候该怎么办呢？</p>\r\n<p>这个时候无法两种方法，<strong>一种是将错就错，将错误的V0数据返回给用户。第二种是阻塞等待，等待网络通信恢复，N2中的数据更新之后再返回给用户</strong>。显然前者牺牲了一致性，后者牺牲了可用性。</p>\r\n<p>这个例子虽然简单，但是说明的内容却很重要。在分布式系统当中，CAP三个特性我们是无法同时满足的，必然要舍弃一个。三者舍弃一个，显然排列组合一共有三种可能。</p>\r\n<h3><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"BASE_1064\"></a>BASE理论</h3>\r\n<p>BASE理论由eBay架构师Dan Pritchett提出，在2008年上被分表为论文，并且eBay给出了他们在实践中总结的基于BASE理论的一套新的分布式事务解决方案。</p>\r\n<p><strong>BASE</strong> 是 <strong>Basically Available（基本可用）</strong> 、<strong>Soft-state（软状态）</strong> 和 <strong>Eventually Consistent（最终一致性）</strong> 三个短语的缩写。BASE理论是对CAP中一致性和可用性权衡的结果，其来源于对大规模互联网系统分布式实践的总结，是基于CAP定理逐步演化而来的，它大大降低了我们对系统的要求。</p>\r\n<h4><a id=\"BASE_1070\"></a>BASE理论的核心思想</h4>\r\n<p>即使无法做到强一致性，但每个应用都可以根据自身业务特点，采用适当的方式来使系统达到最终一致性。也就是牺牲数据的一致性来满足系统的高可用性，系统中一部分数据不可用或者不一致时，仍需要保持系统整体“主要可用”。</p>\r\n<p>针对数据库领域，BASE思想的主要实现是对业务数据进行拆分，让不同的数据分布在不同的机器上，以提升系统的可用性，当前主要有以下两种做法：</p>\r\n<ul><li>按功能划分数据库</li><li>分片（如开源的Mycat、Amoeba等）。</li></ul>\r\n<p>由于拆分后会涉及分布式事务问题，所以eBay在该BASE论文中提到了如何用最终一致性的思路来实现高性能的分布式事务。</p>\r\n<h4><a id=\"BASE_1083\"></a>BASE理论三要素</h4>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC81LzI0LzE2MzkxNDgwNmQ5ZTE1YzY?x-oss-process=image/format,png\" alt=\"BASE理论三要素\"></p>\r\n<h5><a id=\"1__1089\"></a>1. 基本可用</h5>\r\n<p>基本可用是指分布式系统在出现不可预知故障的时候，允许损失部分可用性。但是，这绝不等价于系统不可用。</p>\r\n<p>比如：</p>\r\n<ul><li><strong>响应时间上的损失</strong>：正常情况下，一个在线搜索引擎需要在0.5秒之内返回给用户相应的查询结果，但由于出现故障，查询结果的响应时间增加了1~2秒</li><li><strong>系统功能上的损失</strong>：正常情况下，在一个电子商务网站上进行购物的时候，消费者几乎能够顺利完成每一笔订单，但是在一些节日大促购物高峰的时候，由于消费者的购物行为激增，为了保护购物系统的稳定性，部分消费者可能会被引导到一个降级页面</li></ul>\r\n<h5><a id=\"2__1098\"></a>2. 软状态</h5>\r\n<p>软状态指允许系统中的数据存在中间状态，并认为该中间状态的存在不会影响系统的整体可用性，即允许系统在不同节点的数据副本之间进行数据同步的过程存在延时</p>\r\n<h5><a id=\"3__1102\"></a>3. 最终一致性</h5>\r\n<p>最终一致性强调的是系统中所有的数据副本，在经过一段时间的同步后，最终能够达到一个一致的状态。因此，最终一致性的本质是需要系统保证最终数据能够达到一致，而不需要实时保证系统数据的强一致性。</p>\r\n<h2><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"_1110\"></a>数据结构与算法</h2>\r\n<h3><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"_1112\"></a>冒泡排序</h3>\r\n<p>冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，依次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。</p>\r\n<p>算法描述</p>\r\n<ul><li>比较相邻的元素。如果第一个比第二个大，就交换它们两个；</li><li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；</li><li>针对所有的元素重复以上的步骤，除了最后一个；</li><li>重复步骤1~3，直到排序完成。</li></ul>\r\n<p>动图演示</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20190712143006969.gif\" alt=\"冒泡排序\"></p>\r\n<p>代码实现</p>\r\n<p>下面的排序算法统一使用的测试代码如下，<a href=\"https://github.com/JourWon/sort-algorithm\">源码GitHub链接</a></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token comment\">// 只需要修改成对应的方法名就可以了</span>\r\n    <span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Arrays<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">/**\r\n * Description:冒泡排序\r\n *\r\n * @param array 需要排序的数组\r\n * @author JourWon\r\n * @date 2019/7/11 9:54\r\n */</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array <span class=\"token operator\">==</span> null <span class=\"token operator\">||</span> array<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\r\n\t<span class=\"token keyword\">int</span> length <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token comment\">// 外层循环控制比较轮数i</span>\r\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t<span class=\"token comment\">// 内层循环控制每一轮比较次数，每进行一轮排序都会找出一个较大值</span>\r\n\t\t<span class=\"token comment\">// (array.length - 1)防止索引越界，(array.length - 1 - i)减少比较次数</span>\r\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> length <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\t<span class=\"token comment\">// 前面的数大于后面的数就进行交换</span>\r\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> array<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\t\t<span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\tarray<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\tarray<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\r\n\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li></ul></pre>\r\n<p>算法分析</p>\r\n<p><strong>最佳情况：T(n) = O(n) 最差情况：T(n) = O(n2) 平均情况：T(n) = O(n2)</strong></p>\r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"_1181\"></a>选择排序</h3>\r\n<p>表现<strong>最稳定的排序算法之一</strong>，因为<strong>无论什么数据进去都是O(n2)的时间复杂度</strong>，所以用到它的时候，数据规模越小越好。唯一的好处可能就是不占用额外的内存空间了吧。理论上讲，选择排序可能也是平时排序一般人想到的最多的排序方法了吧。</p>\r\n<p>选择排序(Selection-sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。</p>\r\n<p>算法描述</p>\r\n<p>n个记录的直接选择排序可经过n-1趟直接选择排序得到有序结果。具体算法描述如下：</p>\r\n<ul><li>初始状态：无序区为R[1…n]，有序区为空；</li><li>第i趟排序(i=1,2,3…n-1)开始时，当前有序区和无序区分别为R[1…i-1]和R(i…n）。该趟排序从当前无序区中-选出关键字最小的记录 R[k]，将它与无序区的第1个记录R交换，使R[1…i]和R[i+1…n)分别变为记录个数增加1个的新有序区和记录个数减少1个的新无序区；</li><li>n-1趟结束，数组有序化了。</li></ul>\r\n<p>动图演示</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20190712143023558.gif\" alt=\"选择排序\"></p>\r\n<p>代码实现</p>\r\n<p>下面的排序算法统一使用的测试代码如下，<a href=\"https://github.com/JourWon/sort-algorithm\">源码GitHub链接</a></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token comment\">// 只需要修改成对应的方法名就可以了</span>\r\n    <span class=\"token function\">selectionSort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Arrays<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">/**\r\n * Description: 选择排序\r\n *\r\n * @param array\r\n * @return void\r\n * @author JourWon\r\n * @date 2019/7/11 23:31\r\n */</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">selectionSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array <span class=\"token operator\">==</span> null <span class=\"token operator\">||</span> array<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\r\n\t<span class=\"token keyword\">int</span> length <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t<span class=\"token comment\">// 保存最小数的索引</span>\r\n\t\t<span class=\"token keyword\">int</span> minIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\t<span class=\"token comment\">// 找到最小的数</span>\r\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">[</span>minIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\t\tminIndex <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span>\r\n\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\r\n\t\t<span class=\"token comment\">// 交换元素位置</span>\r\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">!=</span> minIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> minIndex<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">/**\r\n * Description: 交换元素位置\r\n *\r\n * @param array\r\n * @param a\r\n * @param b\r\n * @return void\r\n * @author JourWon\r\n * @date 2019/7/11 17:57\r\n */</span>\r\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t<span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\tarray<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\tarray<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li><li style=\"color: rgb(153, 153, 153);\">40</li><li style=\"color: rgb(153, 153, 153);\">41</li><li style=\"color: rgb(153, 153, 153);\">42</li><li style=\"color: rgb(153, 153, 153);\">43</li><li style=\"color: rgb(153, 153, 153);\">44</li><li style=\"color: rgb(153, 153, 153);\">45</li><li style=\"color: rgb(153, 153, 153);\">46</li><li style=\"color: rgb(153, 153, 153);\">47</li><li style=\"color: rgb(153, 153, 153);\">48</li><li style=\"color: rgb(153, 153, 153);\">49</li></ul></pre>\r\n<p>算法分析</p>\r\n<p><strong>最佳情况：T(n) = O(n2) 最差情况：T(n) = O(n2) 平均情况：T(n) = O(n2)</strong></p>\r\n<h3><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"_1273\"></a>快速排序</h3>\r\n<p>快速排序的基本思想：通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分的关键字小，则可分别对这两部分记录继续进行排序，以达到整个序列有序。</p>\r\n<p>算法描述</p>\r\n<p>快速排序使用分治法来把一个串（list）分为两个子串（sub-lists）。具体算法描述如下：</p>\r\n<ul><li>从数列中挑出一个元素，称为 “基准”（<strong>pivot</strong>）；</li><li>重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；</li><li>递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。</li></ul>\r\n<p>动图演示</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20190712143139347.gif\" alt=\"快速排序\"></p>\r\n<p>代码实现</p>\r\n<p>下面的排序算法统一使用的测试代码如下，<a href=\"https://github.com/JourWon/sort-algorithm\">源码GitHub链接</a></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token comment\">// 只需要修改成对应的方法名就可以了</span>\r\n    <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Arrays<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">/**\r\n * Description: 快速排序\r\n *\r\n * @param array\r\n * @return void\r\n * @author JourWon\r\n * @date 2019/7/11 23:39\r\n */</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t<span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n\r\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> left<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array <span class=\"token operator\">==</span> null <span class=\"token operator\">||</span> left <span class=\"token operator\">&gt;=</span> right <span class=\"token operator\">||</span> array<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\t<span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n\r\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> left<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t<span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">&gt;</span> left<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t<span class=\"token comment\">// 先判断基准数和后面的数依次比较</span>\r\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;=</span> array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\t<span class=\"token operator\">--</span>right<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\t\t<span class=\"token comment\">// 当基准数大于了 arr[left]，则填坑</span>\r\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\tarray<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\t\t\t<span class=\"token operator\">++</span>left<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\t\t<span class=\"token comment\">// 现在是 arr[right] 需要填坑了</span>\r\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&gt;=</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\t<span class=\"token operator\">++</span>left<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\tarray<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\t\t\t<span class=\"token operator\">--</span>right<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\tarray<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token keyword\">return</span> left<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li><li style=\"color: rgb(153, 153, 153);\">40</li><li style=\"color: rgb(153, 153, 153);\">41</li><li style=\"color: rgb(153, 153, 153);\">42</li><li style=\"color: rgb(153, 153, 153);\">43</li><li style=\"color: rgb(153, 153, 153);\">44</li><li style=\"color: rgb(153, 153, 153);\">45</li><li style=\"color: rgb(153, 153, 153);\">46</li><li style=\"color: rgb(153, 153, 153);\">47</li></ul></pre>\r\n<p>算法分析</p>\r\n<p><strong>最佳情况：T(n) = O(nlogn) 最差情况：T(n) = O(n2) 平均情况：T(n) = O(nlogn)</strong></p>\r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"_1361\"></a>递归</h3>\r\n<p><strong>什么叫递归</strong></p>\r\n<p>递归函数就是直接或间接调用自身的函数，也就是自身调用自己。</p>\r\n<p><strong>一般什么时候使用递归？</strong></p>\r\n<p>递归是常用的编程技术，其基本思想就是“自己调用自己”，一个使用递归技术的方法即是直接或间接的调用自身的方法。递归方法实际上体现了“以此类推”、“用同样的步骤重复”这样的思想。</p>\r\n<p>还有些数据结构如二叉树，结构本身固有递归特性；此外，有一类问题，其本身没有明显的递归结构，但用递归程序求解比其他方法更容易编写程序。</p>\r\n<p><strong>需满足的两个条件</strong></p>\r\n<ol><li>有反复执行的过程(调用自身)</li><li>有跳出反复执行过程的条件(递归出口)</li></ol>\r\n<p><strong>经典问题：阶乘</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">递归阶乘n<span class=\"token operator\">!</span> <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>* <span class=\"token function\">1</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> Integer <span class=\"token function\">recursionMulity</span><span class=\"token punctuation\">(</span>Integer n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> n <span class=\"token operator\">*</span> <span class=\"token function\">recursionMulity</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p><strong>经典问题：不死神兔（斐波那契数列）</strong></p>\r\n<p>3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？</p>\r\n<p>分析：首先我们要明白题目的意思指的是每个月的兔子总对数；假设将兔子分为小中大三种，兔子从出生后三个月后每个月就会生出一对兔子，</p>\r\n<p>那么我们假定第一个月的兔子为小兔子，第二个月为中兔子，第三个月之后就为大兔子，那么第一个月分别有1、0、0，第二个月分别为0、1、0，</p>\r\n<p>第三个月分别为1、0、1，第四个月分别为,1、1、1，第五个月分别为2、1、2，第六个月分别为3、2、3，第七个月分别为5、3、5……</p>\r\n<p>兔子总数分别为：1、1、2、3、5、8、13……</p>\r\n<p>于是得出了一个规律，从第三个月起，后面的兔子总数都等于前面两个月的兔子总数之和，即为斐波那契数列。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> mon<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mon <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span>mon <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span>mon <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h3><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"_1419\"></a>二分查找</h3>\r\n<p>在数组[130,150,170,190,210,230,250,270,290,310]中查找数字190，红色为二分线(折半线)，灰色为查找区域，黑色为排除区域。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxNy81LzI1L2E5ZWE3ZTVkNzQwM2I1NDEwYzJlZmQwOTQ0Njc1MWZk?x-oss-process=image/format,png\" alt=\"img\">二分查找也称折半查找（Binary Search），它是一种效率较高的查找方法，前提是<strong>数据结构必须先排好序</strong>，时间复杂度可以表示O(h)=O(log2n)，以2为底，n的对数。其缺点是要求待查表为有序表，且插入删除困难。</p>\r\n<p><strong>左加右不加，找右缩左，找左缩右</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BinarySearch</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">binarySort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">/**\r\n     * 循环实现二分查找\r\n     *\r\n     * @param arr\r\n     * @param key\r\n     * @return\r\n     */</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">//第一个下标</span>\r\n        <span class=\"token keyword\">int</span> low <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//最后一个下标</span>\r\n        <span class=\"token keyword\">int</span> high <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//防越界</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> key <span class=\"token operator\">&gt;</span> arr<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> low <span class=\"token operator\">&gt;</span> high<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">&lt;=</span> high<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">+</span> high<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;&gt;&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                high <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">&gt;</span> arr<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                low <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token keyword\">return</span> mid<span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li></ul></pre>\r\n<p>二分查找中中间值的计算</p>\r\n<p>这是一个经典的话题，如何计算二分查找中的中值？大家一般给出了两种计算方法：</p>\r\n<ul><li>算法一： <code>mid = (low + high) / 2</code></li><li>算法二： <code>mid = low + (high – low)/2</code></li></ul>\r\n<p>乍看起来，算法一简洁，算法二提取之后，跟算法一没有什么区别。但是实际上，区别是存在的。算法一的做法，在极端情况下，(low + high)存在着溢出的风险，进而得到错误的mid结果，导致程序错误。而算法二能够保证计算出来的mid，一定大于low，小于high，不存在溢出的问题。</p>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"Hash_1477\"></a>一致性Hash算法</h3>\r\n<h4><a id=\"_1479\"></a>概述</h4>\r\n<p><strong>一致性Hash是一种特殊的Hash算法，由于其均衡性、持久性的映射特点，被广泛的应用于负载均衡领域和分布式存储</strong>，如nginx和memcached都采用了一致性Hash来作为集群负载均衡的方案。</p>\r\n<p><strong>普通的Hash函数</strong>最大的作用是<strong>散列</strong>，或者说是将一系列在形式上具有相似性质的数据，打散成随机的、均匀分布的数据。<strong>不难发现，这样的Hash只要集群的数量N发生变化，之前的所有Hash映射就会全部失效</strong>。如果集群中的每个机器提供的服务没有差别，倒不会产生什么影响，但对于分布式缓存这样的系统而言，映射全部失效就意味着之前的缓存全部失效，后果将会是灾难性的。<strong>一致性Hash通过构建环状的Hash空间</strong>代替线性Hash空间的方法解决了这个问题。</p>\r\n<p>良好的分布式cahce系统中的一致性hash算法应该满足以下几个方面：</p>\r\n<ul><li><strong>平衡性(Balance)</strong></li></ul>\r\n<p>平衡性是指哈希的结果能够尽可能分布到所有的缓冲中去，这样可以使得所有的缓冲空间都得到利用。很多哈希算法都能够满足这一条件。</p>\r\n<ul><li><strong>单调性(Monotonicity)</strong></li></ul>\r\n<p>单调性是指如果已经有一些内容通过哈希分派到了相应的缓冲中，又有新的缓冲区加入到系统中，那么哈希的结果应能够保证原有已分配的内容可以被映射到新的缓冲区中去，而不会被映射到旧的缓冲集合中的其他缓冲区。</p>\r\n<ul><li><strong>分散性(Spread)</strong></li></ul>\r\n<p>在分布式环境中，终端有可能看不到所有的缓冲，而是只能看到其中的一部分。当终端希望通过哈希过程将内容映射到缓冲上时，由于不同终端所见的缓冲范围有可能不同，从而导致哈希的结果不一致，最终的结果是相同的内容被不同的终端映射到不同的缓冲区中。这种情况显然是应该避免的，因为它导致相同内容被存储到不同缓冲中去，降低了系统存储的效率。分散性的定义就是上述情况发生的严重程度。好的哈希算法应能够尽量避免不一致的情况发生，也就是尽量降低分散性。</p>\r\n<ul><li><strong>负载(Load)</strong></li></ul>\r\n<p>负载问题实际上是从另一个角度看待分散性问题。既然不同的终端可能将相同的内容映射到不同的缓冲区中，那么对于一个特定的缓冲区而言，也可能被不同的用户映射为不同的内容。与分散性一样，这种情况也是应当避免的，因此好的哈希算法应能够尽量降低缓冲的负荷。</p>\r\n<ul><li><strong>平滑性(Smoothness)</strong></li></ul>\r\n<p>平滑性是指缓存服务器的数目平滑改变和缓存对象的平滑改变是一致的。</p>\r\n<h4><a id=\"Hash_1510\"></a>一致性Hash算法原理</h4>\r\n<p>简单来说，一致性哈希将整个哈希值空间组织成一个虚拟的圆环，如假设某哈希函数H的值空间为0-2<sup>32-1（即哈希值是一个32位无符号整形），整个哈希空间环如下：整个空间按顺时针方向组织。0和2</sup>32-1在零点中方向重合。</p>\r\n<img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC80LzI2LzE2MmZmZmYwMTlkNDhlZDU?x-oss-process=image/format,png\">\r\n<p>下一步将各个服务器使用Hash进行一次哈希，具体可以选择服务器的ip或主机名作为关键字进行哈希，这样每台机器就能确定其在哈希环上的位置，这里假设将上文中四台服务器使用ip地址哈希后在环空间的位置如下：</p>\r\n<img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC80LzI2LzE2MmZmZmYwMTlmMWNlY2M?x-oss-process=image/format,png\">\r\n<p>接下来使用如下算法定位数据访问到相应服务器：将数据key使用相同的函数Hash计算出哈希值，并确定此数据在环上的位置，从此位置沿环顺时针“行走”，第一台遇到的服务器就是其应该定位到的服务器。</p>\r\n<p>例如我们有Object A、Object B、Object C、Object D四个数据对象，经过哈希计算后，在环空间上的位置如下：</p>\r\n<img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC80LzI2LzE2MmZmZmYwMWRkZTliMmI?x-oss-process=image/format,png\">\r\n<p>根据一致性哈希算法，数据A会被定为到Node A上，B被定为到Node B上，C被定为到Node C上，D被定为到Node D上。</p>\r\n<p><strong>下面分析一致性哈希算法的容错性和可扩展性</strong>。现假设Node C不幸宕机，可以看到此时对象A、B、D不会受到影响，只有C对象被重定位到Node D。一般的，在一致性哈希算法中，如果一台服务器不可用，则受影响的数据仅仅是此服务器到其环空间中前一台服务器（即沿着逆时针方向行走遇到的第一台服务器）之间数据，其它不会受到影响。</p>\r\n<p>下面考虑另外一种情况，如果在系统中增加一台服务器Node X，如下图所示：</p>\r\n<img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC80LzI2LzE2MmZmZmYwMWRhYjkzNmE?x-oss-process=image/format,png\">\r\n<p>此时对象Object A、B、D不受影响，只有对象C需要重定位到新的Node X 。一般的，在一致性哈希算法中，如果增加一台服务器，则受影响的数据仅仅是新服务器到其环空间中前一台服务器（即沿着逆时针方向行走遇到的第一台服务器）之间数据，其它数据也不会受到影响。</p>\r\n<p>综上所述，一致性哈希算法对于节点的增减都只需重定位环空间中的一小部分数据，具有较好的容错性和可扩展性。</p>\r\n<p><strong>Java代码实现</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConsistentHash</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token comment\">/**\r\n     * 节点的复制因子,实际节点个数 * numberOfReplicas = 虚拟节点个数\r\n     */</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> numberOfReplicas<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">/**\r\n     * 存储虚拟节点的hash值到真实节点的映射\r\n     */</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> SortedMap<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">&gt;</span></span> circle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TreeMap</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">ConsistentHash</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> numberOfReplicas<span class=\"token punctuation\">,</span> Collection<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">&gt;</span></span> nodes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>numberOfReplicas <span class=\"token operator\">=</span> numberOfReplicas<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>T node <span class=\"token operator\">:</span> nodes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>T node<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numberOfReplicas<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token comment\">// 对于一个实际机器节点 node, 对应 numberOfReplicas 个虚拟节点</span>\r\n            <span class=\"token comment\">/*\r\n             * 不同的虚拟节点(i不同)有不同的hash值,但都对应同一个实际机器node\r\n             * 虚拟node一般是均衡分布在环上的,数据存储在顺时针方向的虚拟node上\r\n             */</span>\r\n            String nodestr <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">int</span> hashcode <span class=\"token operator\">=</span> nodestr<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hashcode:\"</span> <span class=\"token operator\">+</span> hashcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            circle<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>hashcode<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>T node<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numberOfReplicas<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            circle<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n\r\n    <span class=\"token comment\">/**\r\n     * 获得一个最近的顺时针节点,根据给定的key 取Hash\r\n     * 然后再取得顺时针方向上最近的一个虚拟节点对应的实际节点\r\n     * 再从实际节点中取得 数据\r\n     *\r\n     * @param key\r\n     * @return\r\n     */</span>\r\n    <span class=\"token keyword\">public</span> T <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>Object key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>circle<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">return</span> null<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token comment\">// node 用String来表示,获得node在哈希环中的hashCode</span>\r\n        <span class=\"token keyword\">int</span> hash <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hashcode-----&gt;:\"</span> <span class=\"token operator\">+</span> hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//数据映射在两台虚拟机器所在环之间,就需要按顺时针方向寻找机器</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>circle<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            SortedMap<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">&gt;</span></span> tailMap <span class=\"token operator\">=</span> circle<span class=\"token punctuation\">.</span><span class=\"token function\">tailMap</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            hash <span class=\"token operator\">=</span> tailMap<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> circle<span class=\"token punctuation\">.</span><span class=\"token function\">firstKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> tailMap<span class=\"token punctuation\">.</span><span class=\"token function\">firstKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">return</span> circle<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">long</span> <span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">return</span> circle<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">/**\r\n     * 查看表示整个哈希环中各个虚拟节点位置\r\n     */</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">//获得TreeMap中所有的Key</span>\r\n        Set<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">&gt;</span></span> sets <span class=\"token operator\">=</span> circle<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//将获得的Key集合排序</span>\r\n        SortedSet<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">&gt;</span></span> sortedSets <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TreeSet</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>sets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>Integer hashCode <span class=\"token operator\">:</span> sortedSets<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>hashCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----each location 's distance are follows: ----\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">/*\r\n         * 查看相邻两个hashCode的差值\r\n         */</span>\r\n        Iterator<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">&gt;</span></span> it <span class=\"token operator\">=</span> sortedSets<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Iterator<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">&gt;</span></span> it2 <span class=\"token operator\">=</span> sortedSets<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>it2<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            it2<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">long</span> keyPre<span class=\"token punctuation\">,</span> keyAfter<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> it2<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            keyPre <span class=\"token operator\">=</span> it<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            keyAfter <span class=\"token operator\">=</span> it2<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>keyAfter <span class=\"token operator\">-</span> keyPre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        Set<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">&gt;</span></span> nodes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        nodes<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        nodes<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        nodes<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        ConsistentHash<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">&gt;</span></span> consistentHash <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConsistentHash</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        consistentHash<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hash circle size: \"</span> <span class=\"token operator\">+</span> consistentHash<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"location of each node are follows: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        consistentHash<span class=\"token punctuation\">.</span><span class=\"token function\">testBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        String node <span class=\"token operator\">=</span> consistentHash<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"node-----------&gt;:\"</span> <span class=\"token operator\">+</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li><li style=\"color: rgb(153, 153, 153);\">40</li><li style=\"color: rgb(153, 153, 153);\">41</li><li style=\"color: rgb(153, 153, 153);\">42</li><li style=\"color: rgb(153, 153, 153);\">43</li><li style=\"color: rgb(153, 153, 153);\">44</li><li style=\"color: rgb(153, 153, 153);\">45</li><li style=\"color: rgb(153, 153, 153);\">46</li><li style=\"color: rgb(153, 153, 153);\">47</li><li style=\"color: rgb(153, 153, 153);\">48</li><li style=\"color: rgb(153, 153, 153);\">49</li><li style=\"color: rgb(153, 153, 153);\">50</li><li style=\"color: rgb(153, 153, 153);\">51</li><li style=\"color: rgb(153, 153, 153);\">52</li><li style=\"color: rgb(153, 153, 153);\">53</li><li style=\"color: rgb(153, 153, 153);\">54</li><li style=\"color: rgb(153, 153, 153);\">55</li><li style=\"color: rgb(153, 153, 153);\">56</li><li style=\"color: rgb(153, 153, 153);\">57</li><li style=\"color: rgb(153, 153, 153);\">58</li><li style=\"color: rgb(153, 153, 153);\">59</li><li style=\"color: rgb(153, 153, 153);\">60</li><li style=\"color: rgb(153, 153, 153);\">61</li><li style=\"color: rgb(153, 153, 153);\">62</li><li style=\"color: rgb(153, 153, 153);\">63</li><li style=\"color: rgb(153, 153, 153);\">64</li><li style=\"color: rgb(153, 153, 153);\">65</li><li style=\"color: rgb(153, 153, 153);\">66</li><li style=\"color: rgb(153, 153, 153);\">67</li><li style=\"color: rgb(153, 153, 153);\">68</li><li style=\"color: rgb(153, 153, 153);\">69</li><li style=\"color: rgb(153, 153, 153);\">70</li><li style=\"color: rgb(153, 153, 153);\">71</li><li style=\"color: rgb(153, 153, 153);\">72</li><li style=\"color: rgb(153, 153, 153);\">73</li><li style=\"color: rgb(153, 153, 153);\">74</li><li style=\"color: rgb(153, 153, 153);\">75</li><li style=\"color: rgb(153, 153, 153);\">76</li><li style=\"color: rgb(153, 153, 153);\">77</li><li style=\"color: rgb(153, 153, 153);\">78</li><li style=\"color: rgb(153, 153, 153);\">79</li><li style=\"color: rgb(153, 153, 153);\">80</li><li style=\"color: rgb(153, 153, 153);\">81</li><li style=\"color: rgb(153, 153, 153);\">82</li><li style=\"color: rgb(153, 153, 153);\">83</li><li style=\"color: rgb(153, 153, 153);\">84</li><li style=\"color: rgb(153, 153, 153);\">85</li><li style=\"color: rgb(153, 153, 153);\">86</li><li style=\"color: rgb(153, 153, 153);\">87</li><li style=\"color: rgb(153, 153, 153);\">88</li><li style=\"color: rgb(153, 153, 153);\">89</li><li style=\"color: rgb(153, 153, 153);\">90</li><li style=\"color: rgb(153, 153, 153);\">91</li><li style=\"color: rgb(153, 153, 153);\">92</li><li style=\"color: rgb(153, 153, 153);\">93</li><li style=\"color: rgb(153, 153, 153);\">94</li><li style=\"color: rgb(153, 153, 153);\">95</li><li style=\"color: rgb(153, 153, 153);\">96</li><li style=\"color: rgb(153, 153, 153);\">97</li><li style=\"color: rgb(153, 153, 153);\">98</li><li style=\"color: rgb(153, 153, 153);\">99</li><li style=\"color: rgb(153, 153, 153);\">100</li><li style=\"color: rgb(153, 153, 153);\">101</li><li style=\"color: rgb(153, 153, 153);\">102</li><li style=\"color: rgb(153, 153, 153);\">103</li><li style=\"color: rgb(153, 153, 153);\">104</li><li style=\"color: rgb(153, 153, 153);\">105</li><li style=\"color: rgb(153, 153, 153);\">106</li><li style=\"color: rgb(153, 153, 153);\">107</li><li style=\"color: rgb(153, 153, 153);\">108</li><li style=\"color: rgb(153, 153, 153);\">109</li><li style=\"color: rgb(153, 153, 153);\">110</li><li style=\"color: rgb(153, 153, 153);\">111</li><li style=\"color: rgb(153, 153, 153);\">112</li><li style=\"color: rgb(153, 153, 153);\">113</li><li style=\"color: rgb(153, 153, 153);\">114</li></ul></pre>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_ADTA.vue?vue&type=template&id=9c198b56\"\nconst script = {}\nscript.render = render\n\nexport default script","//设置博客目录列表，若新增博客，需要在index.js中新增路由，并在blogs中新增vue文件\r\nimport Interview_ADTA from \"../views/blogs/_study/interview_ADTA\";\r\n\r\nconst blogitems = [\r\n    {\r\n        time: '2020/07/21',\r\n        url: 'Jsonviewblog',\r\n        content: 'vue前端使用json-viewer进行json展示',\r\n        type: 'Vue',\r\n        backgroundImgUrl: require('../assets/java/json-viewer.png')\r\n    },\r\n    {\r\n        time: ' 2020/09/01',\r\n        url: 'Get_map_key_and_value',\r\n        content: 'vue获取map集合中的key、value值',\r\n        type: 'Vue',\r\n        backgroundImgUrl: require('../assets/logo.png')\r\n    },{\r\n        time: ' 2020/10/23',\r\n        url: 'Face_recognition_by_opencv',\r\n        content: 'java+opencv实现人脸识别',\r\n        type: 'Java',\r\n        backgroundImgUrl: require('../assets/java/Face_recognition_by_opencv.webp')\r\n    },\r\n    {\r\n        time: ' 2020/12/28',\r\n        url: 'Image2Text_by_opencv_blog',\r\n        content: 'java利用opencv实现用字符展示视频或图片',\r\n        type: 'Java',\r\n        backgroundImgUrl: require('../assets/vue/Image2Text_by_opencv_blog.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_java_basis',\r\n        content: 'Java基础知识面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_java_container',\r\n        content: 'Java集合容器面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_java_abnormal',\r\n        content: 'Java异常面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_java_concurrent',\r\n        content: '并发编程面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_java_jvm',\r\n        content: 'Java虚拟机(JVM)面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_java_spring',\r\n        content: 'Spring面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_java_springmvc',\r\n        content: 'Spring MVC面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_springboot',\r\n        content: 'SpringBoot面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_java_springcloud',\r\n        content: 'Spring Cloud面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_mysql',\r\n        content: 'MySQL数据库面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_myBatis',\r\n        content: 'MyBatis面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_redis',\r\n        content: 'Redis面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_MQ_RabbitMQ',\r\n        content: '消息中间件MQ与RabbitMQ面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_tomcat',\r\n        content: 'Tomcat面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_linux',\r\n        content: 'Linux面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_dubbo',\r\n        content: 'Dubbo的原理，面试常见问题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_zookeeper',\r\n        content: 'ZooKeeper面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_netty',\r\n        content: 'Netty面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    },\r\n    {\r\n        time: ' 2021/07/29',\r\n        url: 'Interview_ADTA',\r\n        content: '架构设计&分布式&数据结构与算法面试题',\r\n        type: 'Study',\r\n        backgroundImgUrl: require('../assets/study/study.png')\r\n    }\r\n]\r\nexport default blogitems\r\n","import { render } from \"./blogitem.vue?vue&type=template&id=70e73dbc\"\nimport script from \"./blogitem.vue?vue&type=script&lang=js\"\nexport * from \"./blogitem.vue?vue&type=script&lang=js\"\n\nimport \"./blogitem.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","import { render } from \"./index.vue?vue&type=template&id=29d051ae&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=29d051ae&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-29d051ae\"\n\nexport default script","<template>\r\n    <h2>vue前端使用json-viewer进行json展示</h2>\r\n    <article class=\"baidu_pl\" style=\"text-align: left\">\r\n    <div id=\"article_content\" class=\"article_content clearfix\">\r\n    <link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-b5506197d8.css\">\r\n    <div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n    <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n    </svg>\r\n    <p>第一步：$ npm install vue-json-viewer --save 进行下载<br> 第二步：在配置文件中导入，import JsonViewer from ‘vue-json-viewer’，并使用Vue.use(JsonViewer)<br> 第三步：直接使用json-viewer标签<br> 属性说明：</p>\r\n    <div class=\"table-box\"><table><thead><tr><th>属性</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>expand-depth</td><td>展开层数</td><td>1</td></tr><tr><td>value</td><td>数据源json串</td><td>必填json串</td></tr><tr><td>copyable</td><td>复制按钮</td><td>false</td></tr><tr><td>sort</td><td>排序</td><td>false</td></tr></tbody></table></div>\r\n    <p>例如：<code>&lt;json-viewer :value=\"jsonData\" :expand-depth=1 copyable&gt;&lt;/json-viewer&gt;</code></p>\r\n    <p><img src=\"https://img-blog.csdnimg.cn/20200721175737865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsdWVyQ2F0,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\r\n    </div><div><div></div></div>\r\n    <link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n    <link href=\"../../../css/csdn/style-f1c5feb645.css\" rel=\"stylesheet\">\r\n    </div>\r\n    </article>\r\n</template>\r\n","import { render } from \"./jsonviewblog.vue?vue&type=template&id=df256d22\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>java利用opencv实现用字符展示视频或图片</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-b5506197d8.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<p>背景：前段时间看到有人将图片转成符号，感觉挺有意思的，就结合了一下opencv。<br> 代码如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> org<span class=\"token punctuation\">.</span>fxd<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>opencv<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>Mat<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>opencv<span class=\"token punctuation\">.</span>imgproc<span class=\"token punctuation\">.</span>Imgproc<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>opencv<span class=\"token punctuation\">.</span>videoio<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">import</span> javax<span class=\"token punctuation\">.</span>imageio<span class=\"token punctuation\">.</span>ImageIO<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>BufferedImage<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">/**\r\n * 将图片转成text文件输出\r\n * @author Litluecat\r\n */</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Image2Text</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">static</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">//opencv_java410.dll的所在地址，自己换成自己dll的地址</span>\r\n        System<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D:\\\\Sofeware\\\\opencv\\\\build\\\\java\\\\x64\\\\opencv_java410.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">/** 此处设置灰度字符*/</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> cs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> IOException <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">//String imageUrl = \"E:\\\\1.png\";</span>\r\n        <span class=\"token comment\">// 设置JTextArea，用于展示字符</span>\r\n        JTextArea textArea <span class=\"token operator\">=</span> <span class=\"token function\">getJFrame</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"XXTop\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"宋体\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">900</span><span class=\"token punctuation\">,</span> <span class=\"token number\">900</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">// 将图片转成字符</span>\r\n        <span class=\"token comment\">//textArea.setText(image2Text(imageUrl,1).toString());</span>\r\n        <span class=\"token comment\">//将视频转成字符</span>\r\n        <span class=\"token function\">video2TextByOpenCV</span><span class=\"token punctuation\">(</span>textArea<span class=\"token punctuation\">,</span> <span class=\"token string\">\"E:\\\\1.mp4\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">/**\r\n     * 生成JFrame窗口，并返回JTextArea对象\r\n     * @param frameTitle 窗口标题\r\n     * @param fontName 文本框中字体类型\r\n     * @param fontStyle 文本框中字体格式\r\n     * @param fontSize 文本框中字体大小\r\n     * @param JFWideth 窗口宽度\r\n     * @param JFHeight 窗口高度\r\n     * @return\r\n     */</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> JTextArea <span class=\"token function\">getJFrame</span><span class=\"token punctuation\">(</span>String frameTitle<span class=\"token punctuation\">,</span>String fontName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> fontStyle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> fontSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> JFWideth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> JFHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        JFrame frame <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//创建一个窗口对象</span>\r\n        JPanel panel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JPanel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        JTextArea textArea <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JTextArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">// name:字体类型 style:0,表示字形;1,粗体;2,斜体   size:字体大小</span>\r\n        textArea<span class=\"token punctuation\">.</span><span class=\"token function\">setFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Font</span><span class=\"token punctuation\">(</span>fontName<span class=\"token punctuation\">,</span>fontStyle<span class=\"token punctuation\">,</span>fontSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        panel<span class=\"token punctuation\">.</span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">GridLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//当TextArea里的内容过长时生成滚动条</span>\r\n        panel<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">JScrollPane</span><span class=\"token punctuation\">(</span>textArea<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        frame<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>panel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//对窗口设置标题</span>\r\n        frame<span class=\"token punctuation\">.</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span>frameTitle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//设置窗口的大小</span>\r\n        frame<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span>JFWideth<span class=\"token punctuation\">,</span>JFHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//设置窗口界面的关闭按钮真的生效(也可以直接传一个3进去，JFrame.EXIT_ON_CLOSE==3，效果一样)</span>\r\n        frame<span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultCloseOperation</span><span class=\"token punctuation\">(</span>JFrame<span class=\"token punctuation\">.</span>EXIT_ON_CLOSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//设置窗口居中显示</span>\r\n        frame<span class=\"token punctuation\">.</span><span class=\"token function\">setLocationRelativeTo</span><span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//设置窗口置顶显示</span>\r\n        frame<span class=\"token punctuation\">.</span><span class=\"token function\">setAlwaysOnTop</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//设置窗口显示</span>\r\n        frame<span class=\"token punctuation\">.</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> textArea<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">/**\r\n     * OpenCV-4.1.0 从视频文件中读取\r\n     * @param textArea JTextArea文本框对象\r\n     * @param targetImgUrl 视频地址\r\n     * @param img2TextSzie 图片转文本缩小比例\r\n     */</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">video2TextByOpenCV</span><span class=\"token punctuation\">(</span>JTextArea textArea<span class=\"token punctuation\">,</span> String targetImgUrl<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> img2TextSzie<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        VideoCapture capture<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">VideoCapture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//1 读取视频文件的路径</span>\r\n        capture<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>targetImgUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>capture<span class=\"token punctuation\">.</span><span class=\"token function\">isOpened</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取视频文件失败！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        Mat video<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span><span class=\"token function\">isOpened</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token comment\">//2 视频文件的视频写入 Mat video 中</span>\r\n            capture<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\r\n                textArea<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token function\">image2TextByOpenCV</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span>img2TextSzie<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"图片识别异常\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">/**\r\n     *基于openCV实现\r\n     * @param image 待处理Mat图片(视频中的某一帧)\r\n     * @param size 对结果进行缩小，1为不缩小\r\n     */</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> StringBuffer <span class=\"token function\">image2TextByOpenCV</span><span class=\"token punctuation\">(</span>Mat image<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> Exception<span class=\"token punctuation\">{<!-- --></span>\r\n        StringBuffer text <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n        Mat img_mat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//mat表示要要转换的图片[Mat类型],img_mat表示转换后的图片</span>\r\n        Imgproc<span class=\"token punctuation\">.</span><span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> img_mat<span class=\"token punctuation\">,</span> Imgproc<span class=\"token punctuation\">.</span>COLOR_RGB2GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">int</span> rows <span class=\"token operator\">=</span> img_mat<span class=\"token punctuation\">.</span><span class=\"token function\">rows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">int</span> cols <span class=\"token operator\">=</span> img_mat<span class=\"token punctuation\">.</span><span class=\"token function\">cols</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">// 图片转字符串后的数组</span>\r\n        <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> css <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">char</span><span class=\"token punctuation\">[</span>rows<span class=\"token operator\">/</span>size <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>cols<span class=\"token operator\">/</span>size <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x<span class=\"token operator\">&lt;</span>rows<span class=\"token punctuation\">;</span> x<span class=\"token operator\">+=</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y<span class=\"token operator\">&lt;</span>cols<span class=\"token punctuation\">;</span> y<span class=\"token operator\">+=</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token comment\">//获得图片的灰度值  x,y 表示像素点的位置(姑且理解为像素点吧)</span>\r\n                <span class=\"token keyword\">int</span> gray <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> img_mat<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token comment\">// 得到灰度值</span>\r\n                <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>gray <span class=\"token operator\">*</span> cs<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                css<span class=\"token punctuation\">[</span>x<span class=\"token operator\">/</span>size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token operator\">/</span>size<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cs<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        StringBuffer sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">// 开始拼接内容</span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> css<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> css<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>css<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">return</span> sb<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">/**\r\n     * @param imageUrl 图片地址\r\n     * @param size 对结果进行缩小，1为不缩小\r\n     */</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> StringBuffer <span class=\"token function\">image2Text</span><span class=\"token punctuation\">(</span>String imageUrl<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        StringBuffer text <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            BufferedImage image <span class=\"token operator\">=</span> ImageIO<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>imageUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">// 图片转字符串后的数组</span>\r\n            <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> css <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">char</span><span class=\"token punctuation\">[</span>width<span class=\"token operator\">/</span>size <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>height<span class=\"token operator\">/</span>size <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> width<span class=\"token punctuation\">;</span> x<span class=\"token operator\">+=</span>size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> y<span class=\"token operator\">+=</span>size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    <span class=\"token keyword\">int</span> rgb <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getRGB</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    Color c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token comment\">// 得到灰度值</span>\r\n                    <span class=\"token keyword\">int</span> cc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">getRed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">getGreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">getBlue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\r\n                    css<span class=\"token punctuation\">[</span>x<span class=\"token operator\">/</span>size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token operator\">/</span>size<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cs<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>cc <span class=\"token operator\">*</span> cs<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            StringBuffer sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">// 开始拼接内容</span>\r\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> css<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> css<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>css<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n                sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            text <span class=\"token operator\">=</span> sb<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">return</span> text<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li><li style=\"color: rgb(153, 153, 153);\">40</li><li style=\"color: rgb(153, 153, 153);\">41</li><li style=\"color: rgb(153, 153, 153);\">42</li><li style=\"color: rgb(153, 153, 153);\">43</li><li style=\"color: rgb(153, 153, 153);\">44</li><li style=\"color: rgb(153, 153, 153);\">45</li><li style=\"color: rgb(153, 153, 153);\">46</li><li style=\"color: rgb(153, 153, 153);\">47</li><li style=\"color: rgb(153, 153, 153);\">48</li><li style=\"color: rgb(153, 153, 153);\">49</li><li style=\"color: rgb(153, 153, 153);\">50</li><li style=\"color: rgb(153, 153, 153);\">51</li><li style=\"color: rgb(153, 153, 153);\">52</li><li style=\"color: rgb(153, 153, 153);\">53</li><li style=\"color: rgb(153, 153, 153);\">54</li><li style=\"color: rgb(153, 153, 153);\">55</li><li style=\"color: rgb(153, 153, 153);\">56</li><li style=\"color: rgb(153, 153, 153);\">57</li><li style=\"color: rgb(153, 153, 153);\">58</li><li style=\"color: rgb(153, 153, 153);\">59</li><li style=\"color: rgb(153, 153, 153);\">60</li><li style=\"color: rgb(153, 153, 153);\">61</li><li style=\"color: rgb(153, 153, 153);\">62</li><li style=\"color: rgb(153, 153, 153);\">63</li><li style=\"color: rgb(153, 153, 153);\">64</li><li style=\"color: rgb(153, 153, 153);\">65</li><li style=\"color: rgb(153, 153, 153);\">66</li><li style=\"color: rgb(153, 153, 153);\">67</li><li style=\"color: rgb(153, 153, 153);\">68</li><li style=\"color: rgb(153, 153, 153);\">69</li><li style=\"color: rgb(153, 153, 153);\">70</li><li style=\"color: rgb(153, 153, 153);\">71</li><li style=\"color: rgb(153, 153, 153);\">72</li><li style=\"color: rgb(153, 153, 153);\">73</li><li style=\"color: rgb(153, 153, 153);\">74</li><li style=\"color: rgb(153, 153, 153);\">75</li><li style=\"color: rgb(153, 153, 153);\">76</li><li style=\"color: rgb(153, 153, 153);\">77</li><li style=\"color: rgb(153, 153, 153);\">78</li><li style=\"color: rgb(153, 153, 153);\">79</li><li style=\"color: rgb(153, 153, 153);\">80</li><li style=\"color: rgb(153, 153, 153);\">81</li><li style=\"color: rgb(153, 153, 153);\">82</li><li style=\"color: rgb(153, 153, 153);\">83</li><li style=\"color: rgb(153, 153, 153);\">84</li><li style=\"color: rgb(153, 153, 153);\">85</li><li style=\"color: rgb(153, 153, 153);\">86</li><li style=\"color: rgb(153, 153, 153);\">87</li><li style=\"color: rgb(153, 153, 153);\">88</li><li style=\"color: rgb(153, 153, 153);\">89</li><li style=\"color: rgb(153, 153, 153);\">90</li><li style=\"color: rgb(153, 153, 153);\">91</li><li style=\"color: rgb(153, 153, 153);\">92</li><li style=\"color: rgb(153, 153, 153);\">93</li><li style=\"color: rgb(153, 153, 153);\">94</li><li style=\"color: rgb(153, 153, 153);\">95</li><li style=\"color: rgb(153, 153, 153);\">96</li><li style=\"color: rgb(153, 153, 153);\">97</li><li style=\"color: rgb(153, 153, 153);\">98</li><li style=\"color: rgb(153, 153, 153);\">99</li><li style=\"color: rgb(153, 153, 153);\">100</li><li style=\"color: rgb(153, 153, 153);\">101</li><li style=\"color: rgb(153, 153, 153);\">102</li><li style=\"color: rgb(153, 153, 153);\">103</li><li style=\"color: rgb(153, 153, 153);\">104</li><li style=\"color: rgb(153, 153, 153);\">105</li><li style=\"color: rgb(153, 153, 153);\">106</li><li style=\"color: rgb(153, 153, 153);\">107</li><li style=\"color: rgb(153, 153, 153);\">108</li><li style=\"color: rgb(153, 153, 153);\">109</li><li style=\"color: rgb(153, 153, 153);\">110</li><li style=\"color: rgb(153, 153, 153);\">111</li><li style=\"color: rgb(153, 153, 153);\">112</li><li style=\"color: rgb(153, 153, 153);\">113</li><li style=\"color: rgb(153, 153, 153);\">114</li><li style=\"color: rgb(153, 153, 153);\">115</li><li style=\"color: rgb(153, 153, 153);\">116</li><li style=\"color: rgb(153, 153, 153);\">117</li><li style=\"color: rgb(153, 153, 153);\">118</li><li style=\"color: rgb(153, 153, 153);\">119</li><li style=\"color: rgb(153, 153, 153);\">120</li><li style=\"color: rgb(153, 153, 153);\">121</li><li style=\"color: rgb(153, 153, 153);\">122</li><li style=\"color: rgb(153, 153, 153);\">123</li><li style=\"color: rgb(153, 153, 153);\">124</li><li style=\"color: rgb(153, 153, 153);\">125</li><li style=\"color: rgb(153, 153, 153);\">126</li><li style=\"color: rgb(153, 153, 153);\">127</li><li style=\"color: rgb(153, 153, 153);\">128</li><li style=\"color: rgb(153, 153, 153);\">129</li><li style=\"color: rgb(153, 153, 153);\">130</li><li style=\"color: rgb(153, 153, 153);\">131</li><li style=\"color: rgb(153, 153, 153);\">132</li><li style=\"color: rgb(153, 153, 153);\">133</li><li style=\"color: rgb(153, 153, 153);\">134</li><li style=\"color: rgb(153, 153, 153);\">135</li><li style=\"color: rgb(153, 153, 153);\">136</li><li style=\"color: rgb(153, 153, 153);\">137</li><li style=\"color: rgb(153, 153, 153);\">138</li><li style=\"color: rgb(153, 153, 153);\">139</li><li style=\"color: rgb(153, 153, 153);\">140</li><li style=\"color: rgb(153, 153, 153);\">141</li><li style=\"color: rgb(153, 153, 153);\">142</li><li style=\"color: rgb(153, 153, 153);\">143</li><li style=\"color: rgb(153, 153, 153);\">144</li><li style=\"color: rgb(153, 153, 153);\">145</li><li style=\"color: rgb(153, 153, 153);\">146</li><li style=\"color: rgb(153, 153, 153);\">147</li><li style=\"color: rgb(153, 153, 153);\">148</li><li style=\"color: rgb(153, 153, 153);\">149</li><li style=\"color: rgb(153, 153, 153);\">150</li><li style=\"color: rgb(153, 153, 153);\">151</li><li style=\"color: rgb(153, 153, 153);\">152</li><li style=\"color: rgb(153, 153, 153);\">153</li><li style=\"color: rgb(153, 153, 153);\">154</li><li style=\"color: rgb(153, 153, 153);\">155</li><li style=\"color: rgb(153, 153, 153);\">156</li><li style=\"color: rgb(153, 153, 153);\">157</li><li style=\"color: rgb(153, 153, 153);\">158</li><li style=\"color: rgb(153, 153, 153);\">159</li><li style=\"color: rgb(153, 153, 153);\">160</li><li style=\"color: rgb(153, 153, 153);\">161</li><li style=\"color: rgb(153, 153, 153);\">162</li><li style=\"color: rgb(153, 153, 153);\">163</li><li style=\"color: rgb(153, 153, 153);\">164</li><li style=\"color: rgb(153, 153, 153);\">165</li><li style=\"color: rgb(153, 153, 153);\">166</li><li style=\"color: rgb(153, 153, 153);\">167</li><li style=\"color: rgb(153, 153, 153);\">168</li><li style=\"color: rgb(153, 153, 153);\">169</li><li style=\"color: rgb(153, 153, 153);\">170</li><li style=\"color: rgb(153, 153, 153);\">171</li></ul></pre>\r\n<p>效果如下：<br> <img src=\"https://img-blog.csdnimg.cn/20201228195644220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsdWVyQ2F0,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\r\n</div><div><div></div></div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-f1c5feb645.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./Image2Text_by_opencv_blog.vue?vue&type=template&id=9a1e78f4\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n    <h2>vue获取map集合中的key、value值</h2>\r\n    <article class=\"baidu_pl\" style=\"text-align: left\">\r\n    <div id=\"article_content\" class=\"article_content clearfix\">\r\n    <link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-b5506197d8.css\">\r\n    <div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n    <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n    </svg>\r\n    <p>背景：前端接收后端返回的list<map>集合，并将该集合展示在页面。</map></p>\r\n    <pre class=\"prettyprint\"><code class=\"prism language-html has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">//例如：\r\n    let _list = [{\"name\":\"小一\", \"age\":10, \"id\":1},{\"name\":\"小二\", \"age\":15, \"id\":2},{\"name\":\"小三\", \"age\":9, \"id\":3}]\r\n    <div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n    <p>方案一，直接在HTML代码中使用v-for、Object.key、Object.value来渲染页面</p>\r\n    <pre class=\"prettyprint\"><code class=\"prism language-html has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>map in _list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>(_key,index) in Object.key(map)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>index<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>\r\n                    {<!-- -->{_key + \" : \" + Object.value(map)[index]}}\r\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\r\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n    <p>注：如果是使用axios进行异步请求，需要注意的是数据还未返回，界面就已经开始渲染，导致此时的_list=[]，前端界面控制器会出现错误提示，原因是<strong>Object.key(obj)和Object.value(obj)中的obj不能为null或undefined</strong>。</p>\r\n    <p>方案二，在js部分对集合进行处理，使用到Object.entries枚举方法</p>\r\n    <pre class=\"prettyprint\"><code class=\"prism language-javascript has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">\t<span class=\"token keyword\">let</span> newList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">let</span> _length <span class=\"token operator\">=</span>  <span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> _list <span class=\"token operator\">?</span> _list<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span> _length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n            Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span> label<span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>_key <span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> label<span class=\"token punctuation\">;</span>\r\n                newList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>_key <span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_list <span class=\"token operator\">=</span> newList<span class=\"token punctuation\">;</span>\r\n    <div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n    <p>前端html代码稍微发生变化</p>\r\n    <pre class=\"prettyprint\"><code class=\"prism language-html has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>map in _list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\r\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>\r\n                    {<!-- -->{map._key + \" : \" + map._value}}\r\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\r\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n    <p>这样就避免了后端数据未发送到前端时，前端进行渲染，导致Object.key等方法报错的问题。</p>\r\n    </div><div><div></div></div>\r\n    <link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n    <link href=\"../../../css/csdn/style-f1c5feb645.css\" rel=\"stylesheet\">\r\n    </div>\r\n    </article>\r\n</template>\r\n","import { render } from \"./get_map_key_and_value.vue?vue&type=template&id=4cc2119e\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n    <h2>java+opencv实现人脸识别</h2>\r\n    <article class=\"baidu_pl\" style=\"text-align: left\">\r\n    <div id=\"article_content\" class=\"article_content clearfix\">\r\n    <link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-b5506197d8.css\">\r\n    <div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n    <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n    </svg>\r\n    <p>背景：最近需要用到人脸识别，但又不花钱使用现有的第三方人脸识别接口，为此使用opencv结合java进行人脸识别（ps:opencv是开源的，使用它来做人脸识别存在一定的误差，效果一般）。</p>\r\n    <ol><li>安装opencv<br> 官网地址：<a href=\"https://opencv.org/\">https://opencv.org/</a>, 由于官网下载速度是真的慢<br> 为此这边是我下的<a href=\"https://pan.baidu.com/s/1MWTAo92cYa4B2yYu4LNWKg\">百度云盘，opencv4.1.0</a>，提取码1o36。<br> 如果是官网下载，就无脑安装就行了，安装完毕后。</li></ol>\r\n    <p>将图一的两个文件复制到图二中。<br> <img src=\"https://img-blog.csdnimg.cn/2020102318074258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsdWVyQ2F0,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br> <img src=\"https://img-blog.csdnimg.cn/20201023180855524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsdWVyQ2F0,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br> 从我网盘下载的，忽略这些。</p>\r\n    <ol start=\"2\"><li>在项目中引入pom依赖</li></ol>\r\n    <pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> opencv <span class=\"token operator\">+</span> javacv <span class=\"token operator\">+</span> ffmpeg<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\r\n            <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>bytedeco<span class=\"token punctuation\">.</span>javacpp<span class=\"token operator\">-</span>presets<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>ffmpeg<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">4.1</span><span class=\"token operator\">-</span><span class=\"token number\">1.4</span><span class=\"token number\">.4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>bytedeco<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>javacv<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">1.4</span><span class=\"token number\">.4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>mvnrepository<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>artifact<span class=\"token operator\">/</span>org<span class=\"token punctuation\">.</span>bytedeco<span class=\"token punctuation\">.</span>javacpp<span class=\"token operator\">-</span>presets<span class=\"token operator\">/</span>ffmpeg<span class=\"token operator\">-</span>platform <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\r\n            <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>bytedeco<span class=\"token punctuation\">.</span>javacpp<span class=\"token operator\">-</span>presets<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>ffmpeg<span class=\"token operator\">-</span>platform<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">4.1</span><span class=\"token operator\">-</span><span class=\"token number\">1.4</span><span class=\"token number\">.4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\r\n\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 视频摄像头 <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>mvnrepository<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>artifact<span class=\"token operator\">/</span>org<span class=\"token punctuation\">.</span>bytedeco<span class=\"token operator\">/</span>javacv<span class=\"token operator\">-</span>platform <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\r\n            <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>bytedeco<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>javacv<span class=\"token operator\">-</span>platform<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">1.4</span><span class=\"token number\">.4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>mvnrepository<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>artifact<span class=\"token operator\">/</span>org<span class=\"token punctuation\">.</span>bytedeco<span class=\"token punctuation\">.</span>javacpp<span class=\"token operator\">-</span>presets<span class=\"token operator\">/</span>opencv<span class=\"token operator\">-</span>platform <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\r\n            <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>bytedeco<span class=\"token punctuation\">.</span>javacpp<span class=\"token operator\">-</span>presets<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>opencv<span class=\"token operator\">-</span>platform<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\r\n                <span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">4.0</span><span class=\"token number\">.1</span><span class=\"token operator\">-</span><span class=\"token number\">1.4</span><span class=\"token number\">.4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\r\n    <div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li></ul></pre>\r\n    <ol><li> <p>导入库依赖<br> File --&gt; Project Structure，点击Modules，选择需要使用opencv.jar的项目。<br> <img src=\"https://img-blog.csdnimg.cn/20201023181449543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsdWVyQ2F0,size_16,color_FFFFFF,t_70#pic_center\" alt=\"dWVyQ2F0,size_16,color_FFFFFF,t_70#pic_center)\"><br> <img src=\"https://img-blog.csdnimg.cn/20201023181516871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsdWVyQ2F0,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br> 选择直接opencv安装路径<br> <img src=\"https://img-blog.csdnimg.cn/20201023181605495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsdWVyQ2F0,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br> <img src=\"https://img-blog.csdnimg.cn/20201023181718356.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsdWVyQ2F0,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p> </li><li> <p>java代码demo</p> </li></ol>\r\n    <pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> org<span class=\"token punctuation\">.</span>Litluecat<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>StringUtils<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>opencv<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>opencv<span class=\"token punctuation\">.</span>highgui<span class=\"token punctuation\">.</span>HighGui<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>opencv<span class=\"token punctuation\">.</span>highgui<span class=\"token punctuation\">.</span>ImageWindow<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>opencv<span class=\"token punctuation\">.</span>imgcodecs<span class=\"token punctuation\">.</span>Imgcodecs<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>opencv<span class=\"token punctuation\">.</span>imgproc<span class=\"token punctuation\">.</span>Imgproc<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>opencv<span class=\"token punctuation\">.</span>objdetect<span class=\"token punctuation\">.</span>CascadeClassifier<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>opencv<span class=\"token punctuation\">.</span>videoio<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>opencv<span class=\"token punctuation\">.</span>videoio<span class=\"token punctuation\">.</span>VideoWriter<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>opencv<span class=\"token punctuation\">.</span>videoio<span class=\"token punctuation\">.</span>Videoio<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span>Logger<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span>LoggerFactory<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>Arrays<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token comment\">/**\r\n     * 人脸比对工具类\r\n     * @author Litluecat\r\n     * @Title: Opencv 图片人脸识别、实时摄像头人脸识别\r\n    **/</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FaceVideo</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> Logger log <span class=\"token operator\">=</span> LoggerFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span>FaceVideo<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> String endImgUrl <span class=\"token operator\">=</span> <span class=\"token string\">\"C:\\\\Users\\\\lenovo\\\\Desktop\\\\\"</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">/**\r\n         * opencv的人脸识别xml文件路径\r\n         */</span>\r\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> String faceDetectorXML2URL <span class=\"token operator\">=</span> <span class=\"token string\">\"D:\\\\Sofeware\\\\opencv\\\\sources\\\\data\\\\haarcascades\\\\haarcascade_frontalface_alt.xml\"</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">/**\r\n         * opencv的人眼识别xml文件路径\r\n         */</span>\r\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> String eyeDetectorXML2URL <span class=\"token operator\">=</span> <span class=\"token string\">\"D:\\\\Sofeware\\\\opencv\\\\sources\\\\data\\\\haarcascades\\\\haarcascade_eye.xml\"</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">/**\r\n         * 直方图大小，越大精度越高，运行越慢\r\n         */</span>\r\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> Matching_Accuracy <span class=\"token operator\">=</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">/**\r\n         * 初始化人脸探测器\r\n         */</span>\r\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> CascadeClassifier faceDetector<span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">/**\r\n         * 初始化人眼探测器\r\n         */</span>\r\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> CascadeClassifier eyeDetector<span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">static</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            System<span class=\"token punctuation\">.</span><span class=\"token function\">loadLibrary</span><span class=\"token punctuation\">(</span>Core<span class=\"token punctuation\">.</span>NATIVE_LIBRARY_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            faceDetector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CascadeClassifier</span><span class=\"token punctuation\">(</span>faceDetectorXML2URL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            eyeDetector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CascadeClassifier</span><span class=\"token punctuation\">(</span>eyeDetectorXML2URL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始人脸匹配\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">long</span> begin <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">// 1- 从摄像头实时人脸识别，识别成功保存图片到本地</span>\r\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token function\">getVideoFromCamera</span><span class=\"token punctuation\">(</span>endImgUrl <span class=\"token operator\">+</span> <span class=\"token string\">\"2.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token comment\">//仅用于强制抛异常，从而关闭GUI界面</span>\r\n                Thread<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">int</span> err <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\r\n                <span class=\"token comment\">// 2- 比对本地2张图的人脸相似度 （越接近1越相似）</span>\r\n    <span class=\"token comment\">//            double compareHist = FaceVideo.compare_image(endImgUrl + \"test1.png\" , endImgUrl + \"face.png\");</span>\r\n    <span class=\"token comment\">//            log.info(\"匹配度：{}\",compareHist);</span>\r\n    <span class=\"token comment\">//            if (compareHist &gt; 0.72) {<!-- --></span>\r\n    <span class=\"token comment\">//                log.info(\"人脸匹配\");</span>\r\n    <span class=\"token comment\">//            } else {<!-- --></span>\r\n    <span class=\"token comment\">//                log.info(\"人脸不匹配\");</span>\r\n    <span class=\"token comment\">//            }</span>\r\n\r\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始强制关闭\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"人脸匹配结束，总耗时：{}ms\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>begin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                System<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n\r\n        <span class=\"token comment\">/**\r\n         * OpenCV-4.1.1 从摄像头实时读取\r\n         * @param targetImgUrl 比对身份证图片\r\n         * @return: void\r\n         * @date: 2019年8月19日 17:20:13\r\n         */</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getVideoFromCamera</span><span class=\"token punctuation\">(</span>String targetImgUrl<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token comment\">//1 如果要从摄像头获取视频 则要在 VideoCapture 的构造方法写 0</span>\r\n            VideoCapture capture <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VideoCapture</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            Mat video <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">.</span><span class=\"token function\">isOpened</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    <span class=\"token comment\">// 匹配成功3次退出</span>\r\n                    capture<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    HighGui<span class=\"token punctuation\">.</span><span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"实时人脸识别\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getFace</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span> targetImgUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token comment\">//窗口延迟等待100ms，返回退出按键</span>\r\n                    index <span class=\"token operator\">=</span> HighGui<span class=\"token punctuation\">.</span><span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token comment\">//当退出按键为Esc时，退出窗口</span>\r\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">27</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token punctuation\">}</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\r\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"摄像头未开启\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            <span class=\"token comment\">//该窗口销毁不生效，该方法存在问题</span>\r\n            HighGui<span class=\"token punctuation\">.</span><span class=\"token function\">destroyAllWindows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            capture<span class=\"token punctuation\">.</span><span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token comment\">/**\r\n         * OpenCV-4.1.0 人脸识别\r\n         * @param image 待处理Mat图片(视频中的某一帧)\r\n         * @param targetImgUrl 匹配身份证照片地址\r\n         * @return 处理后的图片\r\n         */</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> Mat <span class=\"token function\">getFace</span><span class=\"token punctuation\">(</span>Mat image<span class=\"token punctuation\">,</span> String targetImgUrl<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            MatOfRect face <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MatOfRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            faceDetector<span class=\"token punctuation\">.</span><span class=\"token function\">detectMultiScale</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> face<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            Rect<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> rects<span class=\"token operator\">=</span>face<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"匹配到 \"</span><span class=\"token operator\">+</span>rects<span class=\"token punctuation\">.</span>length<span class=\"token operator\">+</span><span class=\"token string\">\" 个人脸\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>rects <span class=\"token operator\">!=</span> null <span class=\"token operator\">&amp;&amp;</span> rects<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">==</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    <span class=\"token comment\">// 获取匹配成功第3次的照片</span>\r\n                    Imgcodecs<span class=\"token punctuation\">.</span><span class=\"token function\">imwrite</span><span class=\"token punctuation\">(</span>endImgUrl <span class=\"token operator\">+</span> <span class=\"token string\">\"face.png\"</span><span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    FaceVideoThread faceVideoThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FaceVideoThread</span><span class=\"token punctuation\">(</span>targetImgUrl <span class=\"token punctuation\">,</span> endImgUrl <span class=\"token operator\">+</span> <span class=\"token string\">\"face.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>faceVideoThread<span class=\"token punctuation\">,</span><span class=\"token string\">\"人脸比对线程\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            <span class=\"token keyword\">return</span> image<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token comment\">/**\r\n         * 人脸截图\r\n         * @param img\r\n         * @return\r\n         */</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> String <span class=\"token function\">face2Img</span><span class=\"token punctuation\">(</span>String img<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            String faceImg <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n            Mat image0 <span class=\"token operator\">=</span> Imgcodecs<span class=\"token punctuation\">.</span><span class=\"token function\">imread</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            Mat image1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">// 灰度化</span>\r\n            Imgproc<span class=\"token punctuation\">.</span><span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>image0<span class=\"token punctuation\">,</span> image1<span class=\"token punctuation\">,</span> Imgproc<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">// 探测人脸</span>\r\n            MatOfRect faceDetections <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MatOfRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            faceDetector<span class=\"token punctuation\">.</span><span class=\"token function\">detectMultiScale</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">,</span> faceDetections<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">// rect中人脸图片的范围</span>\r\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>Rect rect <span class=\"token operator\">:</span> faceDetections<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                faceImg <span class=\"token operator\">=</span> img<span class=\"token operator\">+</span><span class=\"token string\">\"_.jpg\"</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token comment\">// 进行图片裁剪</span>\r\n                <span class=\"token function\">imageCut</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> faceImg<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>null <span class=\"token operator\">==</span> faceImg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"face2Img未识别出该图像中的人脸，img={}\"</span><span class=\"token punctuation\">,</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            <span class=\"token keyword\">return</span> faceImg<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token comment\">/**\r\n         * 人脸比对\r\n         * @param img_1\r\n         * @param img_2\r\n         * @return\r\n         */</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">double</span> <span class=\"token function\">compare_image</span><span class=\"token punctuation\">(</span>String img_1<span class=\"token punctuation\">,</span> String img_2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            Mat mat_1 <span class=\"token operator\">=</span> <span class=\"token function\">conv_Mat</span><span class=\"token punctuation\">(</span>img_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            Mat mat_2 <span class=\"token operator\">=</span> <span class=\"token function\">conv_Mat</span><span class=\"token punctuation\">(</span>img_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            Mat hist_1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            Mat hist_2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n            <span class=\"token comment\">//颜色范围</span>\r\n            MatOfFloat ranges <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MatOfFloat</span><span class=\"token punctuation\">(</span><span class=\"token number\">0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">//直方图大小， 越大匹配越精确 (越慢)</span>\r\n            MatOfInt histSize <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MatOfInt</span><span class=\"token punctuation\">(</span>Matching_Accuracy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n            Imgproc<span class=\"token punctuation\">.</span><span class=\"token function\">calcHist</span><span class=\"token punctuation\">(</span>Arrays<span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>mat_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MatOfInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> hist_1<span class=\"token punctuation\">,</span> histSize<span class=\"token punctuation\">,</span> ranges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            Imgproc<span class=\"token punctuation\">.</span><span class=\"token function\">calcHist</span><span class=\"token punctuation\">(</span>Arrays<span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>mat_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MatOfInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> hist_2<span class=\"token punctuation\">,</span> histSize<span class=\"token punctuation\">,</span> ranges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n            <span class=\"token comment\">// CORREL 相关系数</span>\r\n            <span class=\"token keyword\">double</span> res <span class=\"token operator\">=</span> Imgproc<span class=\"token punctuation\">.</span><span class=\"token function\">compareHist</span><span class=\"token punctuation\">(</span>hist_1<span class=\"token punctuation\">,</span> hist_2<span class=\"token punctuation\">,</span> Imgproc<span class=\"token punctuation\">.</span>CV_COMP_CORREL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token comment\">/**\r\n         * 灰度化人脸\r\n         * @param img\r\n         * @return\r\n         */</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> Mat <span class=\"token function\">conv_Mat</span><span class=\"token punctuation\">(</span>String img<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>StringUtils<span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token keyword\">return</span> null<span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            Mat image0 <span class=\"token operator\">=</span> Imgcodecs<span class=\"token punctuation\">.</span><span class=\"token function\">imread</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            Mat image1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">//Mat image2 = new Mat();</span>\r\n            <span class=\"token comment\">// 灰度化</span>\r\n            Imgproc<span class=\"token punctuation\">.</span><span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>image0<span class=\"token punctuation\">,</span> image1<span class=\"token punctuation\">,</span> Imgproc<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">//直方均匀</span>\r\n            <span class=\"token comment\">//Imgproc.equalizeHist(image1, image2);</span>\r\n\r\n            <span class=\"token comment\">// 探测人脸</span>\r\n            MatOfRect faceDetections <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MatOfRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            faceDetector<span class=\"token punctuation\">.</span><span class=\"token function\">detectMultiScale</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">,</span> faceDetections<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n            <span class=\"token comment\">//探测人眼</span>\r\n    <span class=\"token comment\">//        MatOfRect eyeDetections = new MatOfRect();</span>\r\n    <span class=\"token comment\">//        eyeDetector.detectMultiScale(image1, eyeDetections);</span>\r\n\r\n            <span class=\"token comment\">// rect中人脸图片的范围</span>\r\n            Mat face <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>Rect rect <span class=\"token operator\">:</span> faceDetections<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n                <span class=\"token comment\">//给图片上画框框 参数1是图片 参数2是矩形 参数3是颜色 参数四是画出来的线条大小</span>\r\n                <span class=\"token comment\">//Imgproc.rectangle(image0,rect,new Scalar(0,0,255),2);</span>\r\n                <span class=\"token comment\">//输出图片</span>\r\n                <span class=\"token comment\">//Imgcodecs.imwrite(img+\"_.jpg\",image0);</span>\r\n\r\n                face <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Mat</span><span class=\"token punctuation\">(</span>image1<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>null <span class=\"token operator\">==</span> face<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"conv_Mat未识别出该图像中的人脸，img={}\"</span><span class=\"token punctuation\">,</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            <span class=\"token keyword\">return</span> face<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li><li style=\"color: rgb(153, 153, 153);\">40</li><li style=\"color: rgb(153, 153, 153);\">41</li><li style=\"color: rgb(153, 153, 153);\">42</li><li style=\"color: rgb(153, 153, 153);\">43</li><li style=\"color: rgb(153, 153, 153);\">44</li><li style=\"color: rgb(153, 153, 153);\">45</li><li style=\"color: rgb(153, 153, 153);\">46</li><li style=\"color: rgb(153, 153, 153);\">47</li><li style=\"color: rgb(153, 153, 153);\">48</li><li style=\"color: rgb(153, 153, 153);\">49</li><li style=\"color: rgb(153, 153, 153);\">50</li><li style=\"color: rgb(153, 153, 153);\">51</li><li style=\"color: rgb(153, 153, 153);\">52</li><li style=\"color: rgb(153, 153, 153);\">53</li><li style=\"color: rgb(153, 153, 153);\">54</li><li style=\"color: rgb(153, 153, 153);\">55</li><li style=\"color: rgb(153, 153, 153);\">56</li><li style=\"color: rgb(153, 153, 153);\">57</li><li style=\"color: rgb(153, 153, 153);\">58</li><li style=\"color: rgb(153, 153, 153);\">59</li><li style=\"color: rgb(153, 153, 153);\">60</li><li style=\"color: rgb(153, 153, 153);\">61</li><li style=\"color: rgb(153, 153, 153);\">62</li><li style=\"color: rgb(153, 153, 153);\">63</li><li style=\"color: rgb(153, 153, 153);\">64</li><li style=\"color: rgb(153, 153, 153);\">65</li><li style=\"color: rgb(153, 153, 153);\">66</li><li style=\"color: rgb(153, 153, 153);\">67</li><li style=\"color: rgb(153, 153, 153);\">68</li><li style=\"color: rgb(153, 153, 153);\">69</li><li style=\"color: rgb(153, 153, 153);\">70</li><li style=\"color: rgb(153, 153, 153);\">71</li><li style=\"color: rgb(153, 153, 153);\">72</li><li style=\"color: rgb(153, 153, 153);\">73</li><li style=\"color: rgb(153, 153, 153);\">74</li><li style=\"color: rgb(153, 153, 153);\">75</li><li style=\"color: rgb(153, 153, 153);\">76</li><li style=\"color: rgb(153, 153, 153);\">77</li><li style=\"color: rgb(153, 153, 153);\">78</li><li style=\"color: rgb(153, 153, 153);\">79</li><li style=\"color: rgb(153, 153, 153);\">80</li><li style=\"color: rgb(153, 153, 153);\">81</li><li style=\"color: rgb(153, 153, 153);\">82</li><li style=\"color: rgb(153, 153, 153);\">83</li><li style=\"color: rgb(153, 153, 153);\">84</li><li style=\"color: rgb(153, 153, 153);\">85</li><li style=\"color: rgb(153, 153, 153);\">86</li><li style=\"color: rgb(153, 153, 153);\">87</li><li style=\"color: rgb(153, 153, 153);\">88</li><li style=\"color: rgb(153, 153, 153);\">89</li><li style=\"color: rgb(153, 153, 153);\">90</li><li style=\"color: rgb(153, 153, 153);\">91</li><li style=\"color: rgb(153, 153, 153);\">92</li><li style=\"color: rgb(153, 153, 153);\">93</li><li style=\"color: rgb(153, 153, 153);\">94</li><li style=\"color: rgb(153, 153, 153);\">95</li><li style=\"color: rgb(153, 153, 153);\">96</li><li style=\"color: rgb(153, 153, 153);\">97</li><li style=\"color: rgb(153, 153, 153);\">98</li><li style=\"color: rgb(153, 153, 153);\">99</li><li style=\"color: rgb(153, 153, 153);\">100</li><li style=\"color: rgb(153, 153, 153);\">101</li><li style=\"color: rgb(153, 153, 153);\">102</li><li style=\"color: rgb(153, 153, 153);\">103</li><li style=\"color: rgb(153, 153, 153);\">104</li><li style=\"color: rgb(153, 153, 153);\">105</li><li style=\"color: rgb(153, 153, 153);\">106</li><li style=\"color: rgb(153, 153, 153);\">107</li><li style=\"color: rgb(153, 153, 153);\">108</li><li style=\"color: rgb(153, 153, 153);\">109</li><li style=\"color: rgb(153, 153, 153);\">110</li><li style=\"color: rgb(153, 153, 153);\">111</li><li style=\"color: rgb(153, 153, 153);\">112</li><li style=\"color: rgb(153, 153, 153);\">113</li><li style=\"color: rgb(153, 153, 153);\">114</li><li style=\"color: rgb(153, 153, 153);\">115</li><li style=\"color: rgb(153, 153, 153);\">116</li><li style=\"color: rgb(153, 153, 153);\">117</li><li style=\"color: rgb(153, 153, 153);\">118</li><li style=\"color: rgb(153, 153, 153);\">119</li><li style=\"color: rgb(153, 153, 153);\">120</li><li style=\"color: rgb(153, 153, 153);\">121</li><li style=\"color: rgb(153, 153, 153);\">122</li><li style=\"color: rgb(153, 153, 153);\">123</li><li style=\"color: rgb(153, 153, 153);\">124</li><li style=\"color: rgb(153, 153, 153);\">125</li><li style=\"color: rgb(153, 153, 153);\">126</li><li style=\"color: rgb(153, 153, 153);\">127</li><li style=\"color: rgb(153, 153, 153);\">128</li><li style=\"color: rgb(153, 153, 153);\">129</li><li style=\"color: rgb(153, 153, 153);\">130</li><li style=\"color: rgb(153, 153, 153);\">131</li><li style=\"color: rgb(153, 153, 153);\">132</li><li style=\"color: rgb(153, 153, 153);\">133</li><li style=\"color: rgb(153, 153, 153);\">134</li><li style=\"color: rgb(153, 153, 153);\">135</li><li style=\"color: rgb(153, 153, 153);\">136</li><li style=\"color: rgb(153, 153, 153);\">137</li><li style=\"color: rgb(153, 153, 153);\">138</li><li style=\"color: rgb(153, 153, 153);\">139</li><li style=\"color: rgb(153, 153, 153);\">140</li><li style=\"color: rgb(153, 153, 153);\">141</li><li style=\"color: rgb(153, 153, 153);\">142</li><li style=\"color: rgb(153, 153, 153);\">143</li><li style=\"color: rgb(153, 153, 153);\">144</li><li style=\"color: rgb(153, 153, 153);\">145</li><li style=\"color: rgb(153, 153, 153);\">146</li><li style=\"color: rgb(153, 153, 153);\">147</li><li style=\"color: rgb(153, 153, 153);\">148</li><li style=\"color: rgb(153, 153, 153);\">149</li><li style=\"color: rgb(153, 153, 153);\">150</li><li style=\"color: rgb(153, 153, 153);\">151</li><li style=\"color: rgb(153, 153, 153);\">152</li><li style=\"color: rgb(153, 153, 153);\">153</li><li style=\"color: rgb(153, 153, 153);\">154</li><li style=\"color: rgb(153, 153, 153);\">155</li><li style=\"color: rgb(153, 153, 153);\">156</li><li style=\"color: rgb(153, 153, 153);\">157</li><li style=\"color: rgb(153, 153, 153);\">158</li><li style=\"color: rgb(153, 153, 153);\">159</li><li style=\"color: rgb(153, 153, 153);\">160</li><li style=\"color: rgb(153, 153, 153);\">161</li><li style=\"color: rgb(153, 153, 153);\">162</li><li style=\"color: rgb(153, 153, 153);\">163</li><li style=\"color: rgb(153, 153, 153);\">164</li><li style=\"color: rgb(153, 153, 153);\">165</li><li style=\"color: rgb(153, 153, 153);\">166</li><li style=\"color: rgb(153, 153, 153);\">167</li><li style=\"color: rgb(153, 153, 153);\">168</li><li style=\"color: rgb(153, 153, 153);\">169</li><li style=\"color: rgb(153, 153, 153);\">170</li><li style=\"color: rgb(153, 153, 153);\">171</li><li style=\"color: rgb(153, 153, 153);\">172</li><li style=\"color: rgb(153, 153, 153);\">173</li><li style=\"color: rgb(153, 153, 153);\">174</li><li style=\"color: rgb(153, 153, 153);\">175</li><li style=\"color: rgb(153, 153, 153);\">176</li><li style=\"color: rgb(153, 153, 153);\">177</li><li style=\"color: rgb(153, 153, 153);\">178</li><li style=\"color: rgb(153, 153, 153);\">179</li><li style=\"color: rgb(153, 153, 153);\">180</li><li style=\"color: rgb(153, 153, 153);\">181</li><li style=\"color: rgb(153, 153, 153);\">182</li><li style=\"color: rgb(153, 153, 153);\">183</li><li style=\"color: rgb(153, 153, 153);\">184</li><li style=\"color: rgb(153, 153, 153);\">185</li><li style=\"color: rgb(153, 153, 153);\">186</li><li style=\"color: rgb(153, 153, 153);\">187</li><li style=\"color: rgb(153, 153, 153);\">188</li><li style=\"color: rgb(153, 153, 153);\">189</li><li style=\"color: rgb(153, 153, 153);\">190</li><li style=\"color: rgb(153, 153, 153);\">191</li><li style=\"color: rgb(153, 153, 153);\">192</li><li style=\"color: rgb(153, 153, 153);\">193</li><li style=\"color: rgb(153, 153, 153);\">194</li><li style=\"color: rgb(153, 153, 153);\">195</li><li style=\"color: rgb(153, 153, 153);\">196</li><li style=\"color: rgb(153, 153, 153);\">197</li><li style=\"color: rgb(153, 153, 153);\">198</li><li style=\"color: rgb(153, 153, 153);\">199</li><li style=\"color: rgb(153, 153, 153);\">200</li><li style=\"color: rgb(153, 153, 153);\">201</li><li style=\"color: rgb(153, 153, 153);\">202</li><li style=\"color: rgb(153, 153, 153);\">203</li><li style=\"color: rgb(153, 153, 153);\">204</li><li style=\"color: rgb(153, 153, 153);\">205</li><li style=\"color: rgb(153, 153, 153);\">206</li><li style=\"color: rgb(153, 153, 153);\">207</li><li style=\"color: rgb(153, 153, 153);\">208</li><li style=\"color: rgb(153, 153, 153);\">209</li><li style=\"color: rgb(153, 153, 153);\">210</li><li style=\"color: rgb(153, 153, 153);\">211</li><li style=\"color: rgb(153, 153, 153);\">212</li><li style=\"color: rgb(153, 153, 153);\">213</li><li style=\"color: rgb(153, 153, 153);\">214</li><li style=\"color: rgb(153, 153, 153);\">215</li><li style=\"color: rgb(153, 153, 153);\">216</li><li style=\"color: rgb(153, 153, 153);\">217</li><li style=\"color: rgb(153, 153, 153);\">218</li><li style=\"color: rgb(153, 153, 153);\">219</li><li style=\"color: rgb(153, 153, 153);\">220</li><li style=\"color: rgb(153, 153, 153);\">221</li><li style=\"color: rgb(153, 153, 153);\">222</li><li style=\"color: rgb(153, 153, 153);\">223</li><li style=\"color: rgb(153, 153, 153);\">224</li><li style=\"color: rgb(153, 153, 153);\">225</li><li style=\"color: rgb(153, 153, 153);\">226</li><li style=\"color: rgb(153, 153, 153);\">227</li><li style=\"color: rgb(153, 153, 153);\">228</li><li style=\"color: rgb(153, 153, 153);\">229</li><li style=\"color: rgb(153, 153, 153);\">230</li><li style=\"color: rgb(153, 153, 153);\">231</li><li style=\"color: rgb(153, 153, 153);\">232</li><li style=\"color: rgb(153, 153, 153);\">233</li></ul></pre>\r\n    <p>这边的人脸识别是另外其线程进行比对，代码如下。</p>\r\n    <pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> org<span class=\"token punctuation\">.</span>Litluecat<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span>Logger<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span>LoggerFactory<span class=\"token punctuation\">;</span>\r\n\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FaceVideoThread</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> Logger log <span class=\"token operator\">=</span> LoggerFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span>FaceVideoThread<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">private</span> String oneImgUrl <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">private</span> String otherImgUrl <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token function\">FaceVideoThread</span><span class=\"token punctuation\">(</span>String oneImgUrl<span class=\"token punctuation\">,</span> String otherImgUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>oneImgUrl <span class=\"token operator\">=</span> oneImgUrl<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>otherImgUrl <span class=\"token operator\">=</span> otherImgUrl<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token annotation punctuation\">@Override</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token keyword\">double</span> compareHist <span class=\"token operator\">=</span> FaceVideo<span class=\"token punctuation\">.</span><span class=\"token function\">compare_image</span><span class=\"token punctuation\">(</span>oneImgUrl <span class=\"token punctuation\">,</span> otherImgUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"匹配度：{}\"</span><span class=\"token punctuation\">,</span>compareHist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>compareHist <span class=\"token operator\">&gt;</span> <span class=\"token number\">0.72</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"人脸匹配\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"人脸不匹配\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li></ul></pre>\r\n    <p>提醒：如果运行异常，请添加你opencv的安装地址-Djava.library.path=D:\\Sofeware\\opencv\\build\\java\\x64;<br> <img src=\"https://img-blog.csdnimg.cn/20201023182419438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsdWVyQ2F0,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\r\n    <p>总结：java+opencv做人脸识别的精度不够，我也是有待学习，如果大家有更好的方式，能将opencv更好的展现出来，并达到更精准的人脸识别，请分享给我，谢谢。</p>\r\n    </div><div><div></div></div>\r\n    <link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n    <link href=\"../../../css/csdn/style-f1c5feb645.css\" rel=\"stylesheet\">\r\n    </div>\r\n    </article>\r\n</template>\r\n","import { render } from \"./Face_recognition_by_opencv.vue?vue&type=template&id=e0a4e53c\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n    <h2>SpringBoot面试题</h2>\r\n    <article class=\"baidu_pl\" style=\"text-align: left\">\r\n    <div id=\"article_content\" class=\"article_content clearfix\">\r\n    <link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n    <div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n    <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n    </svg>\r\n    <p>Spring Boot 是微服务中最好的 Java 框架。为了更好的理解与使用SpringBoot，同时，为了记录平时的点点滴滴，便于日后的面试！</p>\r\n    <h2><a name=\"t0\"></a><a name=\"t0\"></a><a id=\"1SpringBoot_2\"></a>1、什么是SpringBoot？</h2>\r\n    <ul><li>用来简化Spring应用的初始搭建以及开发过程，使用特定的方式来进行配置</li><li>创建独立的Spring引用程序main方法运行</li><li>嵌入的tomcat无需部署war文件</li><li>简化maven配置</li><li>自动配置Spring添加对应的功能starter自动化配置</li></ul>\r\n    <blockquote>\r\n    <p><mark>SpringBoot来简化Spring应用开发，约定大于配置，去繁化简</mark></p>\r\n    </blockquote>\r\n    <h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"2SpringBoot_12\"></a>2、SpringBoot有哪些优缺点？</h2>\r\n    <p><strong>优点</strong></p>\r\n    <ul><li> <p>独立运行</p> <p>Spring Boot 而且内嵌了各种 servlet 容器，Tomcat、Jetty 等，现在不再需要打成war 包部署到容器中，Spring Boot 只要打成一个可执行的 jar 包就能独立运行，所有的依赖包都在一个 jar 包内。</p> </li><li> <p>简化配置</p> <p>spring-boot-starter-web 启动器自动依赖其他组件，简少了 maven 的配置。</p> </li><li> <p>自动配置</p> <p>Spring Boot 能根据当前类路径下的类、jar 包来自动配置 bean，如添加一个 spring</p> <p>boot-starter-web 启动器就能拥有 web 的功能，无需其他配置。</p> </li><li> <p>无代码生成和XML配置</p> <p>Spring Boot 配置过程中无代码生成，也无需 XML 配置文件就能完成所有配置工作，这一切都是借助于条件注解完成的，这也是 Spring4.x 的核心功能之一。</p> </li><li> <p>应用监控</p> <p>Spring Boot 提供一系列端点可以监控服务及应用，做健康检测。</p> </li></ul>\r\n    <p><strong>缺点</strong></p>\r\n    <p>Spring Boot <mark>虽然上手很容易</mark>，但如果你不了解其核心技术及流程，所以一旦遇到问题就很棘手，而且现在的解决方案也不是很多，需要一个完善的过程。</p>\r\n    <h2><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"3SpringBootSpring_MVCSpring_42\"></a>3、SpringBoot、Spring MVC和Spring有什么区别？</h2>\r\n    <p><strong>Spring</strong></p>\r\n    <p>Spring最重要的特征是依赖注入。所有Spring Modules不是依赖注入就是IOC控制反转。</p>\r\n    <p>当我们恰当的使用DI或者是IOC的时候，可以开发松耦合应用。</p>\r\n    <p><strong>Spring MVC</strong></p>\r\n    <p>Spring MVC提供了一种分离式的方法来开发Web应用。通过运用像DispatcherServelet，MoudlAndView 和 ViewResolver 等一些简单的概念，开发 Web 应用将会变的非常简单。</p>\r\n    <p><strong>SpringBoot</strong></p>\r\n    <p>Spring和Spring MVC的问题在于需要配置大量的参数。</p>\r\n    <p>SpringBoot通过一个自动配置和启动的项来解决这个问题。</p>\r\n    <h2><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"4Spring_Boot_Starter_60\"></a>4、什么是Spring Boot Starter？</h2>\r\n    <p>启动器是一套方便的依赖描述符，它可以放在自己的程序中。可以一站式的获取你所需要的Spring和相关技术，而不需要依赖描述符的通过示例代码搜索和复制粘贴的负载。</p>\r\n    <p>例如，如果想使用Spring和JPA访问数据库，只需要项目中包含spring-boot-starter-data-jpa 依赖项，你就可以正产是用。</p>\r\n    <h2><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"5springbootmavenplugin_66\"></a>5、为什么需要spring-boot-maven-plugin？</h2>\r\n    <p>spring-boot-maven-plugin提供了一些像jar一样打包或者运行应用程序的命令。</p>\r\n    <blockquote>\r\n    <ol><li>spring-boot:run 运行SpringBoot应用程序；</li><li>spring-boot:repackage 重新打包你的jar包或者是war包使其可执行</li><li>spring-boot:start和spring-boot:stop管理Spring Boot应用程序的生命周期</li><li>spring-boot:build-info生成执行器可以使用的构造信息</li></ol>\r\n    </blockquote>\r\n    <h2><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"6YAML_75\"></a>6、什么是YAML？</h2>\r\n    <p>YAML是一种人类可读的数据序列化语言。它通常用于配置文件。<br> 与属性文件相比，如果我们想要在配置文件中添加复杂的属性，YAML文件就更加结构化，而且更少混淆。可以看出YAML具有分层配置数据。</p>\r\n    <h2><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"7SpringBoot_80\"></a>7、SpringBoot自动配置的原理</h2>\r\n    <p>在Spring程序main方法中，添加@SpringBootApplication或者@EnableAutoConfiguration会自动去maven中读取每个starter中的spring.gfactories文件，改文件里配置了所有需要被创建的Spring容器中的bean</p>\r\n    <h2><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"8RequestMappingGetMapping_84\"></a>8、RequestMapping和GetMapping的不同之处在哪里？</h2>\r\n    <p>RequestMapping具有类属性的，可以进行GET、POST、PUT或者其他的注释中具有的请求方法。</p>\r\n    <p>GetMapping是Get请求方法中的一个特例，它只是RequestMapping的一个延伸，目的是为了提高清晰度。</p>\r\n    <p>##9、spring-boot-starter-parent有什么作用？</p>\r\n    <p>我们知道，新建一个SpringBoot项目，默认都是有parent的，这个parent就是spring-boot-starter-parent，spring-boot-starter-parent主要有如下作用：</p>\r\n    <ul><li>定义了Java编译版本为1.8</li><li>使用UTF-8格式编码</li><li>继承自spring-boor-dependencies，这里面定义了依赖的版本，也正是因为继承了这个依赖，所以我们在写依赖时才不需要写版本号</li><li>执行打包操作的配置</li><li>自动化的资源过滤</li><li>自动化的插件配置</li><li>针对application.peoperties和application.yuml的资源过滤，包括通过profile定义的不同环境的配置文件，例如application-dev.properties和application-dev.yuml。</li></ul>\r\n    <h2><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"10SpringBoot_jarjar_102\"></a>10、SpringBoot 打成jar和普通的jar有什么区别？</h2>\r\n    <p>Spring Boot 项目最终打包成的 jar 是可执行 jar ，这种 jar 可以直接通过<code>java -jar xxx.jar</code>命令来运行，这种 jar 不可以作为普通的 jar 被其他项目依赖，即使依赖了也无法使用其中的类。</p>\r\n    <p>Spring Boot 的 jar 无法被其他项目依赖，主要还是他和普通 jar 的结构不同。普通的 jar 包，解压后直接就是包名，包里就是我们的代码，而 Spring Boot 打包成的可执行 jar 解压后，在 <code>\\BOOT-INF\\classes</code>目录下才是我们的代码，因此无法被直接引用。如果非要引用，可以在 pom.xml 文件中增加配置，将 Spring Boot 项目打包成两个 jar ，一个可执行，一个可引用。</p>\r\n    <h2><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"11SpringBoot_108\"></a>11、运行SpringBoot有几种方式？</h2>\r\n    <ul><li>打包用命令或者放到容器中运行</li><li>用Maven或Gradle插件运行</li><li>直接执行main方法运行</li></ul>\r\n    <h2><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"12Spring_Boot_114\"></a>12、开启Spring Boot特性有哪几种方式？</h2>\r\n    <ul><li>继承spring-boot-starter-parent项目</li><li>导入spring-boot-dependencies项目依赖</li></ul>\r\n    <h2><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"13Spring_Data_119\"></a>13、什么是Spring Data？</h2>\r\n    <p>Spring Data 是 Spring 的一个子项目。用于简化数据库访问，支持NoSQL 和 关系数据存储。其主要目标是使数据库的访问变得方便快捷。Spring Data 具有如下特点：</p>\r\n    <p><strong>SpringData 项目支持 NoSQL 存储：</strong></p>\r\n    <ul><li>MongoDB （文档数据库）</li><li>Neo4j（图形数据库）</li><li>Redis（键/值存储）</li><li>Hbase（列族数据库）</li></ul>\r\n    <p><strong>SpringData 项目所支持的关系数据存储技术：</strong></p>\r\n    <ul><li>JDBC</li><li>JPA</li></ul>\r\n    <p>Spring Data Jpa <strong>致力于减少数据访问层 (DAO) 的开发量</strong>. 开发者唯一要做的，就是声明持久层的接口，其他都交给 Spring Data JPA 来帮你完成！Spring Data JPA 通过规范方法的名字，根据符合规范的名字来确定方法需要实现什么样的逻辑。</p>\r\n    <h2><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"14SwaggerSpring_Boot_137\"></a>14、什么是Swagger？你用Spring Boot实现了吗？</h2>\r\n    <p>Swagger 广泛用于<mark>可视化 API</mark>，使用 Swagger UI 为前端开发人员提供在线沙箱。Swagger 是用于生成 RESTful Web 服务的可视化表示的工具，规范和完整框架实现。它使文档能够以与服务器相同的速度更新。当通过 Swagger 正确定义时，消费者可以使用最少量的实现逻辑来理解远程服务并与其进行交互。因此，Swagger消除了调用服务时的猜测。</p>\r\n    <h2><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"15_141\"></a>15、前后端分离，如何维护接口文档？</h2>\r\n    <p>前后端分离开发日益流行，大部分情况下，我们都是通过 Spring Boot 做前后端分离开发，前后端分离一定会有接口文档，不然会前后端会深深陷入到扯皮中。一个比较笨的方法就是使用 word 或者 md 来维护接口文档，但是效率太低，接口一变，所有人手上的文档都得变。在 Spring Boot 中，这个问题常见的解决方案是 Swagger ，使用 Swagger 我们可以快速生成一个接口文档网站，接口一旦发生变化，文档就会自动更新，所有开发工程师访问这一个在线网站就可以获取到最新的接口文档，非常方便。</p>\r\n    <h2><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"16Spring_Boot_145\"></a>16、如何使用Spring Boot实现异常处理？</h2>\r\n    <p>Spring提供了一种使用ControllerAdvice处理异常的非常有用的方法。通过实现一个ControlerAdvice类，来处理控制类抛出的所有异常。</p>\r\n    <h2><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"17FreeMarker_149\"></a>17、什么是FreeMarker模板？</h2>\r\n    <p>FreeMarker 是一个基于 Java 的模板引擎，最初专注于使用 MVC 软件架构进行动态网页生成。使用 Freemarker 的主要优点是表示层和业务层的完全分离。程序员可以处理应用程序代码，而设计人员可以处理 html 页面设计。最后使用freemarker 可以将这些结合起来，给出最终的输出页面。</p>\r\n    <h2><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"18Spring_Boot_153\"></a>18、如何实现Spring Boot应用程序的安全性？</h2>\r\n    <p>为了实现Spring Boot的安全性，使用spring-boot-starter-security依赖项，并且必须添加安全配置。它只需要很少代码。配置类将必须扩展WebSecurityConfigurerAdapter并覆盖其方法。</p>\r\n    <p>##19、比较一下Spring Security和Shiro各自的优缺点？</p>\r\n    <p>由于Spring Boot官方提供了大量的非常方便的开箱即用的Starter，包括Spring Security的Starter，使得在SpringBoot中使用Spring Security变得更加容易，甚至只需要添加一个一来就可以保护所有接口，所以如果是SpringBoot项目，一般选择Spring Security。<mark>当然这只是一个建议的组合，单纯从技术上来说，无论怎么组合，都是没有问题的。</mark></p>\r\n    <p><strong>Shiro和Spring Security相比，主要有如下特点：</strong></p>\r\n    <ul><li>Spring Security是一个重量级的安全管理框架；Shiro则是一个轻量级的安全管理框架；</li><li>Spring Security概念复杂，配置繁琐；Shiro概念简单、配置简单；</li><li>Spring Security功能强大；Shiro功能简单</li></ul>\r\n    <h2><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"20Spring_Boot_167\"></a>20、Spring Boot中如何解决跨域问题？</h2>\r\n    <p>跨域可以在前端通过JSONP来解决，但是JSONP只可以发送GET请求，无法发送其他类型的请求，在RESTful风格的应用中，就显得非常鸡肋，因此推荐在后端通过（CORS，Cross-origin resource sharing）来解决跨域问题。这种解决方案并非Spring Boot特有的，在传统的SSM框架中，就可以通过CORS来解决跨域问题，只不过之前我们是在XML文件中配置CORS，现在可以通过实现WebMvcConfigurer接口然后重写addCorsMappings方法解决跨域问题。</p>\r\n    <pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token annotation punctuation\">@Configuration</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CorsConfig</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">WebMvcConfigurer</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n        <span class=\"token annotation punctuation\">@Override</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addCorsMappings</span><span class=\"token punctuation\">(</span>CorsRegistry registry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            registry<span class=\"token punctuation\">.</span><span class=\"token function\">addMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">allowedOrigins</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">allowCredentials</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">allowedMethods</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"PUT\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"DELETE\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"OPTIONS\"</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">maxAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">3600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li></ul></pre>\r\n    <p><mark>项目中前后端分离部署，所以需要解决跨域的问题。</mark><br> 我们使用cookie存放用户登录的信息，在spring拦截器进行权限控制，当权限不符合时，直接返回给用户固定的json结果。<br> 当用户登录以后，正常使用；当用户退出登录状态时或者token过期时，由于拦截器和跨域的顺序有问题，出现了跨域的现象。<br> 我们知道<code>一个http请求，先走filter，到达servlet后才进行拦截器的处理</code>，如果我们把cors放在filter里，就可以优先于权限拦截器执行。</p>\r\n    <pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token annotation punctuation\">@Configuration</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CorsConfig</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n        <span class=\"token annotation punctuation\">@Bean</span>\r\n        <span class=\"token keyword\">public</span> CorsFilter <span class=\"token function\">corsFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            CorsConfiguration corsConfiguration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CorsConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            corsConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">addAllowedOrigin</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            corsConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">addAllowedHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            corsConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">addAllowedMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            corsConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowCredentials</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            UrlBasedCorsConfigurationSource urlBasedCorsConfigurationSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UrlBasedCorsConfigurationSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            urlBasedCorsConfigurationSource<span class=\"token punctuation\">.</span><span class=\"token function\">registerCorsConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">,</span> corsConfiguration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CorsFilter</span><span class=\"token punctuation\">(</span>urlBasedCorsConfigurationSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n    <div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li></ul></pre>\r\n    <h2><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"21CSRF_212\"></a>21、什么是CSRF攻击？</h2>\r\n    <p>CSRF 代表跨站请求伪造。这是一种攻击，迫使最终用户在当前通过身份验证的Web 应用程序上执行不需要的操作。CSRF 攻击专门针对状态改变请求，而不是数据窃取，因为攻击者无法查看对伪造请求的响应。</p>\r\n    <h2><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"22Spring_Boot_216\"></a>22、Spring Boot的核心注解是哪些？他主由哪几个注解组成的？</h2>\r\n    <p>启动类上面的注解是@SpringBootApplication，他也是SpringBoot的核心注解，主要组合包含了以下3个注解：</p>\r\n    <ul><li>@SpringBootConfiguration：组合了@Configuration注解，实现配置文件的功能；</li><li>@EnableAutoConfiguration：打开自动配置的功能，也可以关闭某个自动配置的选项，如关闭数据源自动配置的功能：@SpringBootApplication(exclude={DataSourceAutoConfiguration.class})；</li><li>@ComponentScan：Spring组件扫描。</li></ul>\r\n    <h2><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"23SpringBoot_224\"></a>23、SpringBoot的核心配置文件有哪几个？他们的区别是什么？</h2>\r\n    <p>SpringBoot的核心配置文件是<code>application和bootstrap</code>配置文件。</p>\r\n    <p>application配置文件这个容易理解，主要用于Spring Boot项目的自动化配置。</p>\r\n    <p>bootstrap配置文件有以下几个应用场景：</p>\r\n    <ul><li>使用Spring Cloud Config配置中心时，这时需要在bootstrap配置文件中添加连接到配置中心的配置属性来加载外部配置中心的配置信息；</li><li>一些固定的不能被覆盖的属性；</li><li>一些加密/解密的场景</li></ul>\r\n    <h2><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"24SpringBoot_236\"></a>24、SpringBoot有哪几种读取配置的方式？</h2>\r\n    <p>Spring Boot 可 以 通 过 <strong>@PropertySource,@Value,@Environment, @ConfigurationProperties</strong> 来绑定变量。</p>\r\n    <h2><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"25Spring_Boot__240\"></a>25、Spring Boot 支持哪些日志框架？推荐和默认的日志框架是哪个？</h2>\r\n    <p>Spring Boot 支持 Java Util Logging, Log4j2, Lockback 作为日志框架，如果你使用Starters 启动器，Spring Boot 将使用 Logback 作为默认日志框架。</p>\r\n    <h2><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"26SpringBoot_244\"></a>26、保护SpringBoot应用有哪些方法？</h2>\r\n    <ul><li>在生产中使用HTTPS</li><li>使用Snyk检查你的依赖关系</li><li>升级到最新版本</li><li>启用CSRF保护</li><li>使用内容安全策略防止XSS攻击</li></ul>\r\n    <h2><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"27SpringBoot_2X1X_252\"></a>27、SpringBoot 2.X有哪些新特性？与1.X有什么区别？</h2>\r\n    <blockquote>\r\n    <ul><li>配置变更</li><li>JDK版本升级</li><li>第三方类库升级</li><li>响应式Spring编程支持</li><li>HTTP/2支持</li><li>配置属性绑定</li><li>更多改进与加强</li></ul>\r\n    </blockquote>\r\n    </div><div><div></div></div>\r\n    <link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n    <link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n    </div>\r\n    </article>\r\n</template>\r\n","import { render } from \"./interview_springboot.vue?vue&type=template&id=4142a701\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>MySQL数据库面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"_33\"></a>数据库基础知识</h2>\r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"_35\"></a>为什么要使用数据库</h3>\r\n<p><strong>数据保存在内存</strong></p>\r\n<p>优点： 存取速度快</p>\r\n<p>缺点： 数据不能永久保存</p>\r\n<p><strong>数据保存在文件</strong></p>\r\n<p>优点： 数据永久保存</p>\r\n<p>缺点：1）速度比内存操作慢，频繁的IO操作。2）查询数据不方便</p>\r\n<p><strong>数据保存在数据库</strong></p>\r\n<p>1）数据永久保存</p>\r\n<p>2）使用SQL语句，查询方便效率高。</p>\r\n<p>3）管理数据方便</p>\r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"SQL_59\"></a>什么是SQL？</h3>\r\n<p>结构化查询语言(Structured Query Language)简称SQL，是一种数据库查询语言。</p>\r\n<p>作用：用于存取数据、查询、更新和管理关系数据库系统。</p>\r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"MySQL_67\"></a>什么是MySQL?</h3>\r\n<p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。在Java企业级开发中非常常用，因为 MySQL 是开源免费的，并且方便扩展。</p>\r\n<h3><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"_73\"></a>数据库三大范式是什么</h3>\r\n<p>第一范式：每个列都不可以再拆分。</p>\r\n<p>第二范式：在第一范式的基础上，非主键列完全依赖于主键，而不能是依赖于主键的一部分。</p>\r\n<p>第三范式：在第二范式的基础上，非主键列只依赖于主键，不依赖于其他非主键。</p>\r\n<p>在设计数据库结构的时候，要尽量遵守三范式，如果不遵守，必须有足够的理由。比如性能。事实上我们经常会为了性能而妥协数据库的设计。</p>\r\n<h3><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"mysql_85\"></a>mysql有关权限的表都有哪几个</h3>\r\n<p>MySQL服务器通过权限表来控制用户对数据库的访问，权限表存放在mysql数据库里，由mysql_install_db脚本初始化。这些权限表分别user，db，table_priv，columns_priv和host。下面分别介绍一下这些表的结构和内容：</p>\r\n<ul><li>user权限表：记录允许连接到服务器的用户帐号信息，里面的权限是全局级的。</li><li>db权限表：记录各个帐号在各个数据库上的操作权限。</li><li>table_priv权限表：记录数据表级的操作权限。</li><li>columns_priv权限表：记录数据列级的操作权限。</li><li>host权限表：配合db权限表对给定主机上数据库级操作权限作更细致的控制。这个权限表不受GRANT和REVOKE语句的影响。</li></ul>\r\n<h3><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"MySQLbinlog_97\"></a>MySQL的binlog有有几种录入格式？分别有什么区别？</h3>\r\n<p>有三种格式，statement，row和mixed。</p>\r\n<ul><li>statement模式下，每一条会修改数据的sql都会记录在binlog中。不需要记录每一行的变化，减少了binlog日志量，节约了IO，提高性能。由于sql的执行是有上下文的，因此在保存的时候需要保存相关的信息，同时还有一些使用了函数之类的语句无法被记录复制。</li><li>row级别下，不记录sql语句上下文相关信息，仅保存哪条记录被修改。记录单元为每一行的改动，基本是可以全部记下来但是由于很多操作，会导致大量行的改动(比如alter table)，因此这种模式的文件保存的信息太多，日志量太大。</li><li>mixed，一种折中的方案，普通操作使用statement记录，当无法使用statement的时候使用row。</li></ul>\r\n<p>此外，新版的MySQL中对row级别也做了一些优化，当表结构发生变化的时候，会记录语句而不是逐行记录。</p>\r\n<h2><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"_111\"></a>数据类型</h2>\r\n<h3><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"mysql_113\"></a>mysql有哪些数据类型</h3>\r\n<div class=\"table-box\"><table><thead><tr><th><strong>分类</strong></th><th><strong>类型名称</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><strong>整数类型</strong></td><td>tinyInt</td><td>很小的整数(8位二进制)</td></tr><tr><td></td><td>smallint</td><td>小的整数(16位二进制)</td></tr><tr><td></td><td>mediumint</td><td>中等大小的整数(24位二进制)</td></tr><tr><td></td><td>int(integer)</td><td>普通大小的整数(32位二进制)</td></tr><tr><td><strong>小数类型</strong></td><td>float</td><td>单精度浮点数</td></tr><tr><td></td><td>double</td><td>双精度浮点数</td></tr><tr><td></td><td>decimal(m,d)</td><td>压缩严格的定点数</td></tr><tr><td><strong>日期类型</strong></td><td>year</td><td>YYYY 1901~2155</td></tr><tr><td></td><td>time</td><td>HH:MM:SS -838:59:59~838:59:59</td></tr><tr><td></td><td>date</td><td>YYYY-MM-DD 1000-01-01~9999-12-3</td></tr><tr><td></td><td>datetime</td><td>YYYY-MM-DD HH:MM:SS 1000-01-01 00:00:00~ 9999-12-31 23:59:59</td></tr><tr><td></td><td>timestamp</td><td>YYYY-MM-DD HH:MM:SS 1970<sub>01</sub>01 00:00:01 UTC~2038-01-19 03:14:07UTC</td></tr><tr><td><strong>文本、二进制类型</strong></td><td>CHAR(M)</td><td>M为0~255之间的整数</td></tr><tr><td></td><td>VARCHAR(M)</td><td>M为0~65535之间的整数</td></tr><tr><td></td><td>TINYBLOB</td><td>允许长度0~255字节</td></tr><tr><td></td><td>BLOB</td><td>允许长度0~65535字节</td></tr><tr><td></td><td>MEDIUMBLOB</td><td>允许长度0~167772150字节</td></tr><tr><td></td><td>LONGBLOB</td><td>允许长度0~4294967295字节</td></tr><tr><td></td><td>TINYTEXT</td><td>允许长度0~255字节</td></tr><tr><td></td><td>TEXT</td><td>允许长度0~65535字节</td></tr><tr><td></td><td>MEDIUMTEXT</td><td>允许长度0~167772150字节</td></tr><tr><td></td><td>LONGTEXT</td><td>允许长度0~4294967295字节</td></tr><tr><td></td><td>VARBINARY(M)</td><td>允许长度0~M个字节的变长字节字符串</td></tr><tr><td></td><td>BINARY(M)</td><td>允许长度0~M个字节的定长字节字符串</td></tr></tbody></table></div>\r\n<ul><li> <p><code>1、整数类型</code>，包括TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT，分别表示1字节、2字节、3字节、4字节、8字节整数。任何整数类型都可以加上UNSIGNED属性，表示数据是无符号的，即非负整数。<br> <code>长度</code>：整数类型可以被指定长度，例如：INT(11)表示长度为11的INT类型。长度在大多数场景是没有意义的，它不会限制值的合法范围，只会影响显示字符的个数，而且需要和UNSIGNED ZEROFILL属性配合使用才有意义。<br> <code>例子</code>，假定类型设定为INT(5)，属性为UNSIGNED ZEROFILL，如果用户插入的数据为12的话，那么数据库实际存储数据为00012。</p> </li><li> <p><code>2、实数类型</code>，包括FLOAT、DOUBLE、DECIMAL。<br> DECIMAL可以用于存储比BIGINT还大的整型，能存储精确的小数。<br> 而FLOAT和DOUBLE是有取值范围的，并支持使用标准的浮点进行近似计算。<br> 计算时FLOAT和DOUBLE相比DECIMAL效率更高一些，DECIMAL你可以理解成是用字符串进行处理。</p> </li><li> <p><code>3、字符串类型</code>，包括VARCHAR、CHAR、TEXT、BLOB<br> VARCHAR用于存储可变长字符串，它比定长类型更节省空间。<br> VARCHAR使用额外1或2个字节存储字符串长度。列长度小于255字节时，使用1字节表示，否则使用2字节表示。<br> VARCHAR存储的内容超出设置的长度时，内容会被截断。<br> CHAR是定长的，根据定义的字符串长度分配足够的空间。<br> CHAR会根据需要使用空格进行填充方便比较。<br> CHAR适合存储很短的字符串，或者所有值都接近同一个长度。<br> CHAR存储的内容超出设置的长度时，内容同样会被截断。</p> <p><strong>使用策略：</strong><br> 对于经常变更的数据来说，CHAR比VARCHAR更好，因为CHAR不容易产生碎片。<br> 对于非常短的列，CHAR比VARCHAR在存储空间上更有效率。<br> 使用时要注意只分配需要的空间，更长的列排序时会消耗更多内存。<br> 尽量避免使用TEXT/BLOB类型，查询时会使用临时表，导致严重的性能开销。</p> </li><li> <p><code>4、枚举类型（ENUM）</code>，把不重复的数据存储为一个预定义的集合。<br> 有时可以使用ENUM代替常用的字符串类型。<br> ENUM存储非常紧凑，会把列表值压缩到一个或两个字节。<br> ENUM在内部存储时，其实存的是整数。<br> 尽量避免使用数字作为ENUM枚举的常量，因为容易混乱。<br> 排序是按照内部存储的整数</p> </li><li> <p><code>5、日期和时间类型</code>，尽量使用timestamp，空间效率高于datetime，<br> 用整数保存时间戳通常不方便处理。<br> 如果需要存储微妙，可以使用bigint存储。<br> 看到这里，这道真题是不是就比较容易回答了。</p> </li></ul>\r\n<h2><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"_180\"></a>引擎</h2>\r\n<h3><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"MySQLMyISAMInnoDB_182\"></a>MySQL存储引擎MyISAM与InnoDB区别</h3>\r\n<p>存储引擎Storage engine：MySQL中的数据、索引以及其他对象是如何存储的，是一套文件系统的实现。</p>\r\n<p>常用的存储引擎有以下：</p>\r\n<ul><li><strong>Innodb引擎</strong>：Innodb引擎提供了对数据库ACID事务的支持。并且还提供了行级锁和外键的约束。它的设计的目标就是处理大数据容量的数据库系统。</li><li><strong>MyIASM引擎</strong>(原本Mysql的默认引擎)：不提供事务的支持，也不支持行级锁和外键。</li><li><strong>MEMORY引擎</strong>：所有的数据都在内存中，数据的处理速度快，但是安全性不高。</li></ul>\r\n<p><strong>MyISAM与InnoDB区别</strong></p>\r\n<div class=\"table-box\"><table><thead><tr><th></th><th>MyISAM</th><th>Innodb</th></tr></thead><tbody><tr><td>存储结构</td><td>每张表被存放在三个文件：frm-表格定义、MYD(MYData)-数据文件、MYI(MYIndex)-索引文件</td><td>所有的表都保存在同一个数据文件中（也可能是多个文件，或者是独立的表空间文件），InnoDB表的大小只受限于操作系统文件的大小，一般为2GB</td></tr><tr><td>存储空间</td><td>MyISAM可被压缩，存储空间较小</td><td>InnoDB的表需要更多的内存和存储，它会在主内存中建立其专用的缓冲池用于高速缓冲数据和索引</td></tr><tr><td>可移植性、备份及恢复</td><td>由于MyISAM的数据是以文件的形式存储，所以在跨平台的数据转移中会很方便。在备份和恢复时可单独针对某个表进行操作</td><td>免费的方案可以是拷贝数据文件、备份 binlog，或者用 mysqldump，在数据量达到几十G的时候就相对痛苦了</td></tr><tr><td>文件格式</td><td>数据和索引是分别存储的，数据<code>.MYD</code>，索引<code>.MYI</code></td><td>数据和索引是集中存储的，<code>.ibd</code></td></tr><tr><td>记录存储顺序</td><td>按记录插入顺序保存</td><td>按主键大小有序插入</td></tr><tr><td>外键</td><td>不支持</td><td>支持</td></tr><tr><td>事务</td><td>不支持</td><td>支持</td></tr><tr><td>锁支持（锁是避免资源争用的一个机制，MySQL锁对用户几乎是透明的）</td><td>表级锁定</td><td>行级锁定、表级锁定，锁定力度小并发能力高</td></tr><tr><td>SELECT</td><td>MyISAM更优</td><td></td></tr><tr><td>INSERT、UPDATE、DELETE</td><td></td><td>InnoDB更优</td></tr><tr><td>select count(*)</td><td>myisam更快，因为myisam内部维护了一个计数器，可以直接调取。</td><td></td></tr><tr><td>索引的实现方式</td><td>B+树索引，myisam 是堆表</td><td>B+树索引，Innodb 是索引组织表</td></tr><tr><td>哈希索引</td><td>不支持</td><td>支持</td></tr><tr><td>全文索引</td><td>支持</td><td>不支持</td></tr></tbody></table></div>\r\n<h3><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"MyISAMInnoDB_213\"></a>MyISAM索引与InnoDB索引的区别？</h3>\r\n<ul><li>InnoDB索引是聚簇索引，MyISAM索引是非聚簇索引。</li><li>InnoDB的主键索引的叶子节点存储着行数据，因此主键索引非常高效。</li><li>MyISAM索引的叶子节点存储的是行数据地址，需要再寻址一次才能得到数据。</li><li>InnoDB非主键索引的叶子节点存储的是主键和其他带索引的列数据，因此查询时做到覆盖索引会非常高效。</li></ul>\r\n<h3><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"InnoDB4_222\"></a>InnoDB引擎的4大特性</h3>\r\n<ul><li> <p>插入缓冲（insert buffer)</p> </li><li> <p>二次写(double write)</p> </li><li> <p>自适应哈希索引(ahi)</p> </li><li> <p>预读(read ahead)</p> </li></ul>\r\n<h3><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"_234\"></a>存储引擎选择</h3>\r\n<p>如果没有特别的需求，使用默认的<code>Innodb</code>即可。</p>\r\n<p>MyISAM：以读写插入为主的应用程序，比如博客系统、新闻门户网站。</p>\r\n<p>Innodb：更新（删除）操作频率也高，或者要保证数据的完整性；并发量高，支持事务和外键。比如OA自动化办公系统。</p>\r\n<h2><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"_246\"></a>索引</h2>\r\n<h3><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"_248\"></a>什么是索引？</h3>\r\n<p>索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。</p>\r\n<p>索引是一种数据结构。数据库索引，是数据库管理系统中一个排序的数据结构，以协助快速查询、更新数据库表中数据。索引的实现通常使用B树及其变种B+树。</p>\r\n<p>更通俗的说，索引就相当于目录。为了方便查找书中的内容，通过对内容建立索引形成目录。索引是一个文件，它是要占据物理空间的。</p>\r\n<h3><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"_258\"></a>索引有哪些优缺点？</h3>\r\n<p>索引的优点</p>\r\n<ul><li>可以大大加快数据的检索速度，这也是创建索引的最主要的原因。</li><li>通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能。</li></ul>\r\n<p>索引的缺点</p>\r\n<ul><li>时间方面：创建索引和维护索引要耗费时间，具体地，当对表中的数据进行增加、删除和修改的时候，索引也要动态的维护，会降低增/改/删的执行效率；</li><li>空间方面：索引需要占物理空间。</li></ul>\r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"_272\"></a>索引使用场景（重点）</h3>\r\n<p>where</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8yLzE5LzE2OTA0NTk2ZTFiNTU4YjI?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>上图中，根据<code>id</code>查询记录，因为<code>id</code>字段仅建立了主键索引，因此此SQL执行可选的索引只有主键索引，如果有多个，最终会选一个较优的作为检索的依据。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">-- 增加一个没有建立索引的字段</span>\r\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> innodb1 <span class=\"token keyword\">add</span> sex <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">-- 按sex检索时可选的索引为null</span>\r\n<span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> innodb1 <span class=\"token keyword\">where</span> sex<span class=\"token operator\">=</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8yLzE5LzE2OTA0NTk2Zjk1YTdmOTk?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<blockquote>\r\n<p>可以尝试在一个字段未建立索引时，根据该字段查询的效率，然后对该字段建立索引（<code>alter table 表名 add index(字段名)</code>），同样的SQL执行的效率，你会发现查询效率会有明显的提升（数据量越大越明显）。</p>\r\n</blockquote>\r\n<p>order by</p>\r\n<p>当我们使用<code>order by</code>将查询结果按照某个字段排序时，如果该字段没有建立索引，那么执行计划会将查询出的所有数据使用外部排序（将数据从硬盘分批读取到内存使用内部排序，最后合并排序结果），这个操作是很影响性能的，因为需要将查询涉及到的所有数据从磁盘中读到内存（如果单条数据过大或者数据量过多都会降低效率），更无论读到内存之后的排序了。</p>\r\n<p>但是如果我们对该字段建立索引<code>alter table 表名 add index(字段名)</code>，那么由于索引本身是有序的，因此直接按照索引的顺序和映射关系逐条取出数据即可。而且如果分页的，那么只用<strong>取出索引表某个范围内的索引对应的数据</strong>，而不用像上述那<strong>取出所有数据</strong>进行排序再返回某个范围内的数据。（从磁盘取数据是最影响性能的）</p>\r\n<p>join</p>\r\n<blockquote>\r\n<p>对<code>join</code>语句匹配关系（<code>on</code>）涉及的字段建立索引能够提高效率</p>\r\n</blockquote>\r\n<p>索引覆盖</p>\r\n<p>如果要查询的字段都建立过索引，那么引擎会直接在索引表中查询而不会访问原始数据（否则只要有一个字段没有建立索引就会做全表扫描），这叫索引覆盖。因此我们需要尽可能的在<code>select</code>后<mark>只写必要的查询字段</mark>，以增加索引覆盖的几率。</p>\r\n<p>这里值得注意的是不要想着为每个字段建立索引，因为优先使用索引的优势就在于其体积小。</p>\r\n<h3><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"_317\"></a>索引有哪几种类型？</h3>\r\n<p><strong>主键索引:</strong> 数据列不允许重复，不允许为NULL，一个表只能有一个主键。</p>\r\n<p><strong>唯一索引:</strong> 数据列不允许重复，允许为NULL值，一个表允许多个列创建唯一索引。</p>\r\n<ul><li> <p>可以通过 <code>ALTER TABLE table_name ADD UNIQUE (column);</code> 创建唯一索引</p> </li><li> <p>可以通过 <code>ALTER TABLE table_name ADD UNIQUE (column1,column2);</code> 创建唯一组合索引</p> </li></ul>\r\n<p><strong>普通索引:</strong> 基本的索引类型，没有唯一性的限制，允许为NULL值。</p>\r\n<ul><li> <p>可以通过<code>ALTER TABLE table_name ADD INDEX index_name (column);</code>创建普通索引</p> </li><li> <p>可以通过<code>ALTER TABLE table_name ADD INDEX index_name(column1, column2, column3);</code>创建组合索引</p> </li></ul>\r\n<p><strong>全文索引：</strong> 是目前搜索引擎使用的一种关键技术。</p>\r\n<ul><li>可以通过<code>ALTER TABLE table_name ADD FULLTEXT (column);</code>创建全文索引</li></ul>\r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"bhash_341\"></a>索引的数据结构（b树，hash）</h3>\r\n<p>索引的数据结构和具体存储引擎的实现有关，在MySQL中使用较多的索引有<strong>Hash索引</strong>，<strong>B+树索引</strong>等，而我们经常使用的InnoDB存储引擎的默认索引实现为：B+树索引。对于哈希索引来说，底层的数据结构就是哈希表，因此在绝大多数需求为单条记录查询的时候，可以选择哈希索引，查询性能最快；其余大部分场景，建议选择BTree索引。</p>\r\n<p>1）B树索引</p>\r\n<p>mysql通过存储引擎取数据，基本上90%的人用的就是InnoDB了，按照实现方式分，InnoDB的索引类型目前只有两种：BTREE（B树）索引和HASH索引。B树索引是Mysql数据库中使用最频繁的索引类型，基本所有存储引擎都支持BTree索引。通常我们说的索引不出意外指的就是（B树）索引（实际是用B+树实现的，因为在查看表索引时，mysql一律打印BTREE，所以简称为B树索引）</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC85LzI0LzE2NjBjMGYxNGRhY2Y2ZjU?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>查询方式：</p>\r\n<p>主键索引区:PI(关联保存的时数据的地址)按主键查询,</p>\r\n<p>普通索引区:si(关联的id的地址,然后再到达上面的地址)。所以按主键查询,速度最快</p>\r\n<p>B+tree性质：</p>\r\n<p>1.）n棵子tree的节点包含n个关键字，不用来保存数据而是保存数据的索引。</p>\r\n<p>2.）所有的叶子结点中包含了全部关键字的信息，及指向含这些关键字记录的指针，且叶子结点本身依关键字的大小自小而大顺序链接。</p>\r\n<p>3.）所有的非终端结点可以看成是索引部分，结点中仅含其子树中的最大（或最小）关键字。</p>\r\n<p>4.）B+ 树中，数据对象的插入和删除仅在叶节点上进行。</p>\r\n<p>5.）B+树有2个头指针，一个是树的根节点，一个是最小关键码的叶节点。</p>\r\n<p>2）哈希索引</p>\r\n<p>简要说下，类似于数据结构中简单实现的HASH表（散列表）一样，当我们在mysql中用哈希索引时，主要就是通过Hash算法（常见的Hash算法有直接定址法、平方取中法、折叠法、除数取余法、随机数法），将数据库字段数据转换成定长的Hash值，与这条数据的行指针一并存入Hash表的对应位置；如果发生Hash碰撞（两个不同关键字的Hash值相同），则在对应Hash键下以链表形式存储。当然这只是简略模拟图。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC85LzI0LzE2NjBjMGYxNThhNzZmOTQ?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<h3><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"_379\"></a>索引的基本原理</h3>\r\n<p>索引用来快速地寻找那些具有特定值的记录。如果没有索引，一般来说执行查询时遍历整张表。</p>\r\n<p>索引的原理很简单，就是把无序的数据变成有序的查询</p>\r\n<ol><li> <p>把创建了索引的列的内容进行排序</p> </li><li> <p>对排序结果生成倒排表</p> </li><li> <p>在倒排表内容上拼上数据地址链</p> </li><li> <p>在查询的时候，先拿到倒排表内容，再取出数据地址链，从而拿到具体数据</p> </li></ol>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"_395\"></a>索引算法有哪些？</h3>\r\n<p>索引算法有 BTree算法和Hash算法</p>\r\n<p><strong>BTree算法</strong></p>\r\n<p>BTree是最常用的mysql数据库索引算法，也是mysql默认的算法。因为它不仅可以被用在=,&gt;,&gt;=,&lt;,&lt;=和between这些比较操作符上，而且还可以用于like操作符，只要它的查询条件是一个不以通配符开头的常量， 例如：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">-- 只要它的查询条件是一个不以通配符开头的常量</span>\r\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">where</span> name <span class=\"token operator\">like</span> <span class=\"token string\">'jack%'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">-- 如果一通配符开头，或者没有使用常量，则不会使用索引，例如： </span>\r\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">where</span> name <span class=\"token operator\">like</span> <span class=\"token string\">'%jack'</span><span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p><strong>Hash算法</strong></p>\r\n<p>Hash Hash索引只能用于对等比较，例如=,&lt;=&gt;（相当于=）操作符。由于是一次定位数据，不像BTree索引需要从根节点到枝节点，最后才能访问到页节点这样多次IO访问，所以检索效率远高于BTree索引。</p>\r\n<h3><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"_416\"></a>索引设计的原则？</h3>\r\n<ol><li>适合索引的列是出现在where子句中的列，或者连接子句中指定的列</li><li>基数较小的类，索引效果较差，没有必要在此列建立索引</li><li>使用短索引，如果对长字符串列进行索引，应该指定一个前缀长度，这样能够节省大量索引空间</li><li>不要过度索引。索引需要额外的磁盘空间，并降低写操作的性能。在修改表内容的时候，索引会进行更新甚至重构，索引列越多，这个时间就会越长。所以只保持需要的索引有利于查询即可。</li></ol>\r\n<h3><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"_425\"></a>创建索引的原则（重中之重）</h3>\r\n<p>索引虽好，但也不是无限制的使用，最好符合一下几个原则</p>\r\n<p>1） 最左前缀匹配原则，组合索引非常重要的原则，mysql会一直向右匹配直到遇到范围查询(&gt;、&lt;、between、like)就停止匹配，比如a = 1 and b = 2 and c &gt; 3 and d = 4 如果建立(a,b,c,d)顺序的索引，d是用不到索引的，如果建立(a,b,d,c)的索引则都可以用到，a,b,d的顺序可以任意调整。</p>\r\n<p>2）较频繁作为查询条件的字段才去创建索引</p>\r\n<p>3）更新频繁字段不适合创建索引</p>\r\n<p>4）若是不能有效区分数据的列不适合做索引列(如性别，男女未知，最多也就三种，区分度实在太低)</p>\r\n<p>5）尽量的扩展索引，不要新建索引。比如表中已经有a的索引，现在要加(a,b)的索引，那么只需要修改原来的索引即可。</p>\r\n<p>6）定义有外键的数据列一定要建立索引。</p>\r\n<p>7）对于那些查询中很少涉及的列，重复值比较多的列不要建立索引。</p>\r\n<p>8）对于定义为text、image和bit的数据类型的列不要建立索引。</p>\r\n<h3><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"_447\"></a>创建索引的三种方式，删除索引</h3>\r\n<p>第一种方式：在执行CREATE TABLE时创建索引</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> user_index2 <span class=\"token punctuation\">(</span>\r\n\tid <span class=\"token keyword\">INT</span> <span class=\"token keyword\">auto_increment</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\r\n\tfirst_name <span class=\"token keyword\">VARCHAR</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n\tlast_name <span class=\"token keyword\">VARCHAR</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n\tid_card <span class=\"token keyword\">VARCHAR</span> <span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n\tinformation <span class=\"token keyword\">text</span><span class=\"token punctuation\">,</span>\r\n\t<span class=\"token keyword\">KEY</span> name <span class=\"token punctuation\">(</span>first_name<span class=\"token punctuation\">,</span> last_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n\tFULLTEXT <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>information<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n\t<span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>id_card<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<p>第二种方式：使用ALTER TABLE命令去增加索引</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> table_name <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">INDEX</span> index_name <span class=\"token punctuation\">(</span>column_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>ALTER TABLE用来创建普通索引、UNIQUE索引或PRIMARY KEY索引。</p>\r\n<p>其中table_name是要增加索引的表名，column_list指出对哪些列进行索引，多列时各列之间用逗号分隔。</p>\r\n<p>索引名index_name可自己命名，缺省时，MySQL将根据第一个索引列赋一个名称。另外，ALTER TABLE允许在单个语句中更改多个表，因此可以在同时创建多个索引。</p>\r\n<p>第三种方式：使用CREATE INDEX命令创建</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">INDEX</span> index_name <span class=\"token keyword\">ON</span> table_name <span class=\"token punctuation\">(</span>column_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>CREATE INDEX可对表增加普通索引或UNIQUE索引。（但是，不能创建PRIMARY KEY索引）</p>\r\n<p>删除索引</p>\r\n<p>根据索引名删除普通索引、唯一索引、全文索引：<code>alter table 表名 drop KEY 索引名</code></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> user_index <span class=\"token keyword\">drop</span> <span class=\"token keyword\">KEY</span> name<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> user_index <span class=\"token keyword\">drop</span> <span class=\"token keyword\">KEY</span> id_card<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> user_index <span class=\"token keyword\">drop</span> <span class=\"token keyword\">KEY</span> information<span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<p>删除主键索引：<code>alter table 表名 drop primary key</code>（因为主键只有一个）。这里值得注意的是，如果主键自增长，那么不能直接执行此操作（自增长依赖于主键索引）：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8yLzE5LzE2OTA0NTk2YjIxZTIwOWM?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>需要取消自增长再行删除：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> user_index\r\n<span class=\"token comment\">-- 重新定义字段</span>\r\n<span class=\"token keyword\">MODIFY</span> id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>但通常不会删除主键，因为设计主键一定与业务逻辑无关。</p>\r\n<h3><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"_513\"></a>创建索引时需要注意什么？</h3>\r\n<ul><li>非空字段：应该指定列为NOT NULL，除非你想存储NULL。在mysql中，含有空值的列很难进行查询优化，因为它们使得索引、索引的统计信息以及比较运算更加复杂。你应该用0、一个特殊的值或者一个空串代替空值；</li><li>取值离散大的字段：（变量各个取值之间的差异程度）的列放到联合索引的前面，可以通过count()函数查看字段的差异值，返回值越大说明字段的唯一值越多字段的离散程度高；</li><li>索引字段越小越好：数据库的数据存储以页为单位一页存储的数据越多一次IO操作获取的数据越大效率越高。</li></ul>\r\n<h3><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"_521\"></a>使用索引查询一定能提高查询的性能吗？为什么</h3>\r\n<p>通常，通过索引查询数据比全表扫描要快。但是我们也必须注意到它的代价。</p>\r\n<ul><li>索引需要空间来存储，也需要定期维护， 每当有记录在表中增减或索引列被修改时，索引本身也会被修改。 这意味着每条记录的INSERT，DELETE，UPDATE将为此多付出4，5 次的磁盘I/O。 因为索引需要额外的存储空间和处理，那些不必要的索引反而会使查询反应时间变慢。使用索引查询不一定能提高查询性能，索引范围查询(INDEX RANGE SCAN)适用于两种情况:</li><li>基于一个范围的检索，一般查询返回结果集小于表中记录数的30%</li><li>基于非唯一性索引的检索</li></ul>\r\n<h3><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"_531\"></a>百万级别或以上的数据如何删除</h3>\r\n<p>关于索引：由于索引需要额外的维护成本，因为索引文件是单独存在的文件,所以当我们对数据的增加,修改,删除,都会产生额外的对索引文件的操作,这些操作需要消耗额外的IO,会降低增/改/删的执行效率。所以，在我们删除数据库百万级别数据的时候，查询MySQL官方手册得知删除数据的速度和创建的索引数量是成正比的。</p>\r\n<ol><li>所以我们想要删除百万数据的时候可以先删除索引（此时大概耗时三分多钟）</li><li>然后删除其中无用数据（此过程需要不到两分钟）</li><li>删除完成后重新创建索引(此时数据较少了)创建索引也非常快，约十分钟左右。</li><li>与之前的直接删除绝对是要快速很多，更别说万一删除中断,一切删除会回滚。那更是坑了。</li></ol>\r\n<h3><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"_542\"></a>前缀索引</h3>\r\n<p>语法：<code>index(field(10))</code>，使用字段值的前10个字符建立索引，默认是使用字段的全部内容建立索引。</p>\r\n<p>前提：前缀的标识度高。比如密码就适合建立前缀索引，因为密码几乎各不相同。</p>\r\n<p><mark>实操的难度</mark>：在于前缀截取的长度。</p>\r\n<p>我们可以利用<code>select count(*)/count(distinct left(password,prefixLen));</code>，通过从调整<code>prefixLen</code>的值（从1自增）查看不同前缀长度的一个平均匹配度，接近1时就可以了（表示一个密码的前<code>prefixLen</code>个字符几乎能确定唯一一条记录）</p>\r\n<h3><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"_554\"></a>什么是最左前缀原则？什么是最左匹配原则</h3>\r\n<ul><li>顾名思义，就是最左优先，在创建多列索引时，要根据业务需求，where子句中使用最频繁的一列放在最左边。</li><li>最左前缀匹配原则，非常重要的原则，mysql会一直向右匹配直到遇到范围查询(&gt;、&lt;、between、like)就停止匹配，比如a = 1 and b = 2 and c &gt; 3 and d = 4 如果建立(a,b,c,d)顺序的索引，d是用不到索引的，如果建立(a,b,d,c)的索引则都可以用到，a,b,d的顺序可以任意调整。</li><li>=和in可以乱序，比如a = 1 and b = 2 and c = 3 建立(a,b,c)索引可以任意顺序，mysql的查询优化器会帮你优化成索引可以识别的形式</li></ul>\r\n<h3><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"BB_562\"></a>B树和B+树的区别</h3>\r\n<ul><li> <p>在B树中，你可以将键和值存放在内部节点和叶子节点；但在B+树中，内部节点都是键，没有值，叶子节点同时存放键和值。</p> </li><li> <p>B+树的叶子节点有一条链相连，而B树的叶子节点各自独立。</p> <p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC85LzIxLzE2NWZiNjgyZTc1OWNmMTI?x-oss-process=image/format,png\" alt=\"img\"></p> </li></ul>\r\n<h3><a name=\"t32\"></a><a name=\"t32\"></a><a id=\"B_572\"></a>使用B树的好处</h3>\r\n<p>B树可以在内部节点同时存储键和值，因此，把频繁访问的数据放在靠近根节点的地方将会大大提高热点数据的查询效率。这种特性使得B树在特定数据重复多次查询的场景中更加高效。</p>\r\n<h3><a name=\"t33\"></a><a name=\"t33\"></a><a id=\"B_578\"></a>使用B+树的好处</h3>\r\n<p>由于B+树的内部节点只存放键，不存放值，因此，一次读取，可以在内存页中获取更多的键，有利于更快地缩小查找范围。 B+树的叶节点由一条链相连，因此，当需要进行一次全数据遍历的时候，B+树只需要使用O(logN)时间找到最小的一个节点，然后通过链进行O(N)的顺序遍历即可。而B树则需要对树的每一层进行遍历，这会需要更多的内存置换次数，因此也就需要花费更多的时间</p>\r\n<h3><a name=\"t34\"></a><a name=\"t34\"></a><a id=\"HashB_584\"></a>Hash索引和B+树所有有什么区别或者说优劣呢?</h3>\r\n<p>首先要知道Hash索引和B+树索引的底层实现原理：</p>\r\n<p>hash索引底层就是hash表，进行查找时，调用一次hash函数就可以获取到相应的键值，之后进行回表查询获得实际数据。B+树底层实现是多路平衡查找树。对于每一次的查询都是从根节点出发，查找到叶子节点方可以获得所查键值，然后根据查询判断是否需要回表查询数据。</p>\r\n<p>那么可以看出他们有以下的不同：</p>\r\n<ul><li>hash索引进行等值查询更快(一般情况下)，但是却无法进行范围查询。</li></ul>\r\n<p>因为在hash索引中经过hash函数建立索引之后，索引的顺序与原顺序无法保持一致，不能支持范围查询。而B+树的的所有节点皆遵循(左节点小于父节点，右节点大于父节点，多叉树也类似)，天然支持范围。</p>\r\n<ul><li>hash索引不支持使用索引进行排序，原理同上。</li><li>hash索引不支持模糊查询以及多列索引的最左前缀匹配。原理也是因为hash函数的不可预测。AAAA和AAAAB的索引没有相关性。</li><li>hash索引任何时候都避免不了回表查询数据，而B+树在符合某些条件(聚簇索引，覆盖索引等)的时候可以只通过索引完成查询。</li><li>hash索引虽然在等值查询上较快，但是不稳定。性能不可预测，当某个键值存在大量重复的时候，发生hash碰撞，此时效率可能极差。而B+树的查询效率比较稳定，对于所有的查询都是从根节点到叶子节点，且树的高度较低。</li></ul>\r\n<p>因此，在大多数情况下，直接选择B+树索引可以获得稳定且较好的查询速度。而不需要使用hash索引。</p>\r\n<h3><a name=\"t35\"></a><a name=\"t35\"></a><a id=\"BB_605\"></a>数据库为什么使用B+树而不是B树</h3>\r\n<ul><li>B树只适合随机检索，而B+树同时支持随机检索和顺序检索；</li><li>B+树空间利用率更高，可减少I/O次数，磁盘读写代价更低。一般来说，索引本身也很大，不可能全部存储在内存中，因此索引往往以索引文件的形式存储的磁盘上。这样的话，索引查找过程中就要产生磁盘I/O消耗。B+树的内部结点并没有指向关键字具体信息的指针，只是作为索引使用，其内部结点比B树小，盘块能容纳的结点中关键字数量更多，一次性读入内存中可以查找的关键字也就越多，相对的，IO读写次数也就降低了。而IO读写次数是影响索引检索效率的最大因素；</li><li>B+树的查询效率更加稳定。B树搜索有可能会在非叶子结点结束，越靠近根节点的记录查找时间越短，只要找到关键字即可确定记录的存在，其性能等价于在关键字全集内做一次二分查找。而在B+树中，顺序检索比较明显，随机检索时，任何关键字的查找都必须走一条从根节点到叶节点的路，所有关键字的查找路径长度相同，导致每一个关键字的查询效率相当。</li><li>B-树在提高了磁盘IO性能的同时并没有解决元素遍历的效率低下的问题。B+树的叶子节点使用指针顺序连接在一起，只要遍历叶子节点就可以实现整棵树的遍历。而且在数据库中基于范围的查询是非常频繁的，而B树不支持这样的操作。</li><li>增删文件（节点）时，效率更高。因为B+树的叶子节点包含所有关键字，并以有序的链表结构存储，这样可很好提高增删效率。</li></ul>\r\n<h3><a name=\"t36\"></a><a name=\"t36\"></a><a id=\"B_615\"></a>B+树在满足聚簇索引和覆盖索引的时候不需要回表查询数据，</h3>\r\n<p>在B+树的索引中，叶子节点可能存储了当前的key值，也可能存储了当前的key值以及整行的数据，这就是聚簇索引和非聚簇索引。 在InnoDB中，只有主键索引是聚簇索引，如果没有主键，则挑选一个唯一键建立聚簇索引。如果没有唯一键，则隐式的生成一个键来建立聚簇索引。</p>\r\n<p>当查询使用聚簇索引时，在对应的叶子节点，可以获取到整行数据，因此不用再次进行回表查询。</p>\r\n<h3><a name=\"t37\"></a><a name=\"t37\"></a><a id=\"_623\"></a>什么是聚簇索引？何时使用聚簇索引与非聚簇索引</h3>\r\n<ul><li>聚簇索引：将数据存储与索引放到了一块，找到索引也就找到了数据</li><li>非聚簇索引：将数据存储于索引分开结构，索引结构的叶子节点指向了数据的对应行，myisam通过key_buffer把索引先缓存到内存中，当需要访问数据时（通过索引访问数据），在内存中直接搜索索引，然后通过索引找到磁盘相应数据，这也就是为什么索引不在key buffer命中时，速度慢的原因</li></ul>\r\n<p>澄清一个概念：innodb中，在聚簇索引之上创建的索引称之为辅助索引，辅助索引访问数据总是需要二次查找，非聚簇索引都是辅助索引，像复合索引、前缀索引、唯一索引，辅助索引叶子节点存储的不再是行的物理位置，而是主键值</p>\r\n<p>何时使用聚簇索引与非聚簇索引</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8xMDE1NDQ5OS1kNTNhNWNlOWNlY2YyMmYzLnBuZw?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<h3><a name=\"t38\"></a><a name=\"t38\"></a><a id=\"_636\"></a>非聚簇索引一定会回表查询吗？</h3>\r\n<p>不一定，这涉及到查询语句所要求的字段是否全部命中了索引，如果全部命中了索引，那么就不必再进行回表查询。</p>\r\n<p>举个简单的例子，假设我们在员工表的年龄上建立了索引，那么当进行<code>select age from employee where age &lt; 20</code>的查询时，在索引的叶子节点上，已经包含了age信息，不会再次进行回表查询。</p>\r\n<h3><a name=\"t39\"></a><a name=\"t39\"></a><a id=\"_644\"></a>联合索引是什么？为什么需要注意联合索引中的顺序？</h3>\r\n<p>MySQL可以使用多个字段同时建立一个索引，叫做联合索引。在联合索引中，如果想要命中索引，需要按照建立索引时的字段顺序挨个使用，否则无法命中索引。</p>\r\n<p>具体原因为:</p>\r\n<p>MySQL使用索引时需要索引有序，假设现在建立了\"name，age，school\"的联合索引，那么索引的排序为: 先按照name排序，如果name相同，则按照age排序，如果age的值也相等，则按照school进行排序。</p>\r\n<p>当进行查询时，此时索引仅仅按照name严格有序，因此必须首先使用name字段进行等值查询，之后对于匹配到的列而言，其按照age字段严格有序，此时可以使用age字段用做索引查找，以此类推。因此在建立联合索引的时候应该注意索引列的顺序，一般情况下，将查询需求频繁或者字段选择性高的列放在前面。此外可以根据特例的查询或者表结构进行单独的调整。</p>\r\n<h2><a name=\"t40\"></a><a name=\"t40\"></a><a id=\"_658\"></a>事务</h2>\r\n<h3><a name=\"t41\"></a><a name=\"t41\"></a><a id=\"_660\"></a>什么是数据库事务？</h3>\r\n<p>事务是一个不可分割的数据库操作序列，也是数据库并发控制的基本单位，其执行的结果必须使数据库从一种一致性状态变到另一种一致性状态。事务是逻辑上的一组操作，要么都执行，要么都不执行。</p>\r\n<p>事务最经典也经常被拿出来说例子就是转账了。</p>\r\n<p>假如小明要给小红转账1000元，这个转账会涉及到两个关键操作就是：将小明的余额减少1000元，将小红的余额增加1000元。万一在这两个操作之间突然出现错误比如银行系统崩溃，导致小明余额减少而小红的余额没有增加，这样就不对了。事务就是保证这两个关键操作要么都成功，要么都要失败。</p>\r\n<h3><a name=\"t42\"></a><a name=\"t42\"></a><a id=\"ACID_670\"></a>事物的四大特性(ACID)介绍一下?</h3>\r\n<p>关系性数据库需要遵循ACID规则，具体内容如下：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC81LzIwLzE2MzdiMDhiOTg2MTk0NTU?x-oss-process=image/format,png\" alt=\"事务的特性\"></p>\r\n<ol><li><strong>原子性：</strong> 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；</li><li><strong>一致性：</strong> 执行事务前后，数据保持一致，多个事务对同一个数据读取的结果是相同的；</li><li><strong>隔离性：</strong> 并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；</li><li><strong>持久性：</strong> 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。</li></ol>\r\n<h3><a name=\"t43\"></a><a name=\"t43\"></a><a id=\"_683\"></a>什么是脏读？幻读？不可重复读？</h3>\r\n<ul><li>脏读(Drity Read)：某个事务已更新一份数据，另一个事务在此时读取了同一份数据，由于某些原因，前一个RollBack了操作，则后一个事务所读取的数据就会是不正确的。</li><li>不可重复读(Non-repeatable read):在一个事务的两次查询之中数据不一致，这可能是两次查询过程中间插入了一个事务更新的原有的数据。</li><li>幻读(Phantom Read):在一个事务的两次查询中数据笔数不一致，例如有一个事务查询了几列(Row)数据，而另一个事务却在此时插入了新的几列数据，先前的事务在接下来的查询中，就会发现有几列数据是它先前所没有的。</li></ul>\r\n<h3><a name=\"t44\"></a><a name=\"t44\"></a><a id=\"MySQL_691\"></a>什么是事务的隔离级别？MySQL的默认隔离级别是什么？</h3>\r\n<p>为了达到事务的四大特性，数据库定义了4种不同的事务隔离级别，由低到高依次为Read uncommitted、Read committed、Repeatable read、Serializable，这四个级别可以逐个解决脏读、不可重复读、幻读这几类问题。</p>\r\n<div class=\"table-box\"><table><thead><tr><th align=\"center\">隔离级别</th><th align=\"center\">脏读</th><th align=\"center\">不可重复读</th><th align=\"center\">幻影读</th></tr></thead><tbody><tr><td align=\"center\">READ-UNCOMMITTED</td><td align=\"center\">√</td><td align=\"center\">√</td><td align=\"center\">√</td></tr><tr><td align=\"center\">READ-COMMITTED</td><td align=\"center\">×</td><td align=\"center\">√</td><td align=\"center\">√</td></tr><tr><td align=\"center\">REPEATABLE-READ</td><td align=\"center\">×</td><td align=\"center\">×</td><td align=\"center\">√</td></tr><tr><td align=\"center\">SERIALIZABLE</td><td align=\"center\">×</td><td align=\"center\">×</td><td align=\"center\">×</td></tr></tbody></table></div>\r\n<p><strong>SQL 标准定义了四个隔离级别：</strong></p>\r\n<ul><li><strong>READ-UNCOMMITTED(读取未提交)：</strong> 最低的隔离级别，允许读取尚未提交的数据变更，<strong>可能会导致脏读、幻读或不可重复读</strong>。</li><li><strong>READ-COMMITTED(读取已提交)：</strong> 允许读取并发事务已经提交的数据，<strong>可以阻止脏读，但是幻读或不可重复读仍有可能发生</strong>。</li><li><strong>REPEATABLE-READ(可重复读)：</strong> 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，<strong>可以阻止脏读和不可重复读，但幻读仍有可能发生</strong>。</li><li><strong>SERIALIZABLE(可串行化)：</strong> 最高的隔离级别，完全服从ACID的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说，<strong>该级别可以防止脏读、不可重复读以及幻读</strong>。</li></ul>\r\n<p>这里需要注意的是：Mysql 默认采用的 REPEATABLE_READ隔离级别 Oracle 默认采用的 READ_COMMITTED隔离级别</p>\r\n<p>事务隔离机制的实现基于锁机制和并发调度。其中并发调度使用的是MVVC（多版本并发控制），通过保存修改的旧版本信息来支持并发一致性读和回滚等特性。</p>\r\n<p>因为隔离级别越低，事务请求的锁越少，所以大部分数据库系统的隔离级别都是<strong>READ-COMMITTED(读取提交内容):</strong>，但是你要知道的是InnoDB 存储引擎默认使用 **REPEATABLE-READ（可重读）**并不会有任何性能损失。</p>\r\n<p>InnoDB 存储引擎在 <strong>分布式事务</strong> 的情况下一般会用到**SERIALIZABLE(可串行化)**隔离级别。</p>\r\n<h2><a name=\"t45\"></a><a name=\"t45\"></a><a id=\"_721\"></a>锁</h2>\r\n<h3><a name=\"t46\"></a><a name=\"t46\"></a><a id=\"MySQL_723\"></a>对MySQL的锁了解吗</h3>\r\n<p>当数据库有并发事务的时候，可能会产生数据的不一致，这时候需要一些机制来保证访问的次序，锁机制就是这样的一个机制。</p>\r\n<p>就像酒店的房间，如果大家随意进出，就会出现多人抢夺同一个房间的情况，而在房间上装上锁，申请到钥匙的人才可以入住并且将房间锁起来，其他人只有等他使用完毕才可以再次使用。</p>\r\n<h3><a name=\"t47\"></a><a name=\"t47\"></a><a id=\"_731\"></a>隔离级别与锁的关系</h3>\r\n<p>在Read Uncommitted级别下，读取数据不需要加共享锁，这样就不会跟被修改的数据上的排他锁冲突</p>\r\n<p>在Read Committed级别下，读操作需要加共享锁，但是在语句执行完以后释放共享锁；</p>\r\n<p>在Repeatable Read级别下，读操作需要加共享锁，但是在事务提交之前并不释放共享锁，也就是必须等待事务执行完毕以后才释放共享锁。</p>\r\n<p>SERIALIZABLE 是限制性最强的隔离级别，因为该级别<strong>锁定整个范围的键</strong>，并一直持有锁，直到事务完成。</p>\r\n<h3><a name=\"t48\"></a><a name=\"t48\"></a><a id=\"InnoDB_743\"></a>按照锁的粒度分数据库锁有哪些？锁机制与InnoDB锁算法</h3>\r\n<p>在关系型数据库中，可以<strong>按照锁的粒度把数据库锁分</strong>为行级锁(INNODB引擎)、表级锁(MYISAM引擎)和页级锁(BDB引擎 )。</p>\r\n<p><strong>MyISAM和InnoDB存储引擎使用的锁：</strong></p>\r\n<ul><li>MyISAM采用表级锁(table-level locking)。</li><li>InnoDB支持行级锁(row-level locking)和表级锁，默认为行级锁</li></ul>\r\n<p>行级锁，表级锁和页级锁对比</p>\r\n<p><strong>行级锁</strong> 行级锁是Mysql中锁定粒度最细的一种锁，表示只针对当前操作的行进行加锁。行级锁能大大减少数据库操作的冲突。其加锁粒度最小，但加锁的开销也最大。行级锁分为共享锁 和 排他锁。</p>\r\n<p>特点：开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最低，并发度也最高。</p>\r\n<p><strong>表级锁</strong> 表级锁是MySQL中锁定粒度最大的一种锁，表示对当前操作的整张表加锁，它实现简单，资源消耗较少，被大部分MySQL引擎支持。最常使用的MYISAM与INNODB都支持表级锁定。表级锁定分为表共享读锁（共享锁）与表独占写锁（排他锁）。</p>\r\n<p>特点：开销小，加锁快；不会出现死锁；锁定粒度大，发出锁冲突的概率最高，并发度最低。</p>\r\n<p><strong>页级锁</strong> 页级锁是MySQL中锁定粒度介于行级锁和表级锁中间的一种锁。表级锁速度快，但冲突多，行级冲突少，但速度慢。所以取了折衷的页级，一次锁定相邻的一组记录。</p>\r\n<p>特点：开销和加锁时间界于表锁和行锁之间；会出现死锁；锁定粒度界于表锁和行锁之间，并发度一般</p>\r\n<h3><a name=\"t49\"></a><a name=\"t49\"></a><a id=\"MySQL_768\"></a>从锁的类别上分MySQL都有哪些锁呢？像上面那样子进行锁定岂不是有点阻碍并发效率了</h3>\r\n<p><strong>从锁的类别上来讲</strong>，有共享锁和排他锁。</p>\r\n<p>共享锁: 又叫做读锁。 当用户要进行数据的读取时，对数据加上共享锁。共享锁可以同时加上多个。</p>\r\n<p>排他锁: 又叫做写锁。 当用户要进行数据的写入时，对数据加上排他锁。排他锁只可以加一个，他和其他的排他锁，共享锁都相斥。</p>\r\n<p>用上面的例子来说就是用户的行为有两种，一种是来看房，多个用户一起看房是可以接受的。 一种是真正的入住一晚，在这期间，无论是想入住的还是想看房的都不可以。</p>\r\n<p>锁的粒度取决于具体的存储引擎，InnoDB实现了行级锁，页级锁，表级锁。</p>\r\n<p>他们的加锁开销从大到小，并发能力也是从大到小。</p>\r\n<h3><a name=\"t50\"></a><a name=\"t50\"></a><a id=\"MySQLInnoDB_784\"></a>MySQL中InnoDB引擎的行锁是怎么实现的？</h3>\r\n<p>答：InnoDB是基于索引来完成行锁</p>\r\n<p>例: select * from tab_with_index where id = 1 for update;</p>\r\n<p>for update 可以根据条件来完成行锁锁定，并且 id 是有索引键的列，如果 id 不是索引键那么InnoDB将完成表锁，并发将无从谈起</p>\r\n<h3><a name=\"t51\"></a><a name=\"t51\"></a><a id=\"InnoDB_794\"></a>InnoDB存储引擎的锁的算法有三种</h3>\r\n<ul><li>Record lock：单个行记录上的锁</li><li>Gap lock：间隙锁，锁定一个范围，不包括记录本身</li><li>Next-key lock：record+gap 锁定一个范围，包含记录本身</li></ul>\r\n<p><strong>相关知识点：</strong></p>\r\n<ol><li>innodb对于行的查询使用next-key lock</li><li>Next-locking keying为了解决Phantom Problem幻读问题</li><li>当查询的索引含有唯一属性时，将next-key lock降级为record key</li><li>Gap锁设计的目的是为了阻止多个事务将记录插入到同一范围内，而这会导致幻读问题的产生</li><li>有两种方式显式关闭gap锁：（除了外键约束和唯一性检查外，其余情况仅使用record lock） A. 将事务隔离级别设置为RC B. 将参数innodb_locks_unsafe_for_binlog设置为1</li></ol>\r\n<h3><a name=\"t52\"></a><a name=\"t52\"></a><a id=\"_810\"></a>什么是死锁？怎么解决？</h3>\r\n<p>死锁是指两个或多个事务在同一资源上相互占用，并请求锁定对方的资源，从而导致恶性循环的现象。</p>\r\n<p>常见的解决死锁的方法</p>\r\n<p>1、如果不同程序会并发存取多个表，尽量约定以相同的顺序访问表，可以大大降低死锁机会。</p>\r\n<p>2、在同一个事务中，尽可能做到一次锁定所需要的所有资源，减少死锁产生概率；</p>\r\n<p>3、对于非常容易产生死锁的业务部分，可以尝试使用升级锁定颗粒度，通过表级锁定来减少死锁产生的概率；</p>\r\n<p>如果业务处理不好可以用分布式事务锁或者使用乐观锁</p>\r\n<h3><a name=\"t53\"></a><a name=\"t53\"></a><a id=\"_826\"></a>数据库的乐观锁和悲观锁是什么？怎么实现的？</h3>\r\n<p>数据库管理系统（DBMS）中的并发控制的任务是确保在多个事务同时存取数据库中同一数据时不破坏事务的隔离性和统一性以及数据库的统一性。乐观并发控制（乐观锁）和悲观并发控制（悲观锁）是并发控制主要采用的技术手段。</p>\r\n<p><strong>悲观锁</strong>：假定会发生并发冲突，屏蔽一切可能违反数据完整性的操作。在查询完数据的时候就把事务锁起来，直到提交事务。实现方式：使用数据库中的锁机制</p>\r\n<p><strong>乐观锁</strong>：假设不会发生并发冲突，只在提交操作时检查是否违反数据完整性。在修改数据的时候把事务锁起来，通过version的方式来进行锁定。实现方式：乐一般会使用版本号机制或CAS算法实现。</p>\r\n<p><strong>两种锁的使用场景</strong></p>\r\n<p>从上面对两种锁的介绍，我们知道两种锁各有优缺点，不可认为一种好于另一种，像<strong>乐观锁适用于写比较少的情况下（多读场景）</strong>，即冲突真的很少发生的时候，这样可以省去了锁的开销，加大了系统的整个吞吐量。</p>\r\n<p>但如果是多写的情况，一般会经常产生冲突，这就会导致上层应用会不断的进行retry，这样反倒是降低了性能，所以<strong>一般多写的场景下用悲观锁就比较合适。</strong></p>\r\n<h2><a name=\"t54\"></a><a name=\"t54\"></a><a id=\"_844\"></a>视图</h2>\r\n<h3><a name=\"t55\"></a><a name=\"t55\"></a><a id=\"_846\"></a>为什么要使用视图？什么是视图？</h3>\r\n<p>为了提高复杂SQL语句的复用性和表操作的安全性，MySQL数据库管理系统提供了视图特性。所谓视图，本质上是一种虚拟表，在物理上是不存在的，其内容与真实的表相似，包含一系列带有名称的列和行数据。但是，视图并不在数据库中以储存的数据值形式存在。行和列数据来自定义视图的查询所引用基本表，并且在具体引用视图时动态生成。</p>\r\n<p>视图使开发者只关心感兴趣的某些特定数据和所负责的特定任务，只能看到视图中所定义的数据，而不是视图所引用表中的数据，从而提高了数据库中数据的安全性。</p>\r\n<h3><a name=\"t56\"></a><a name=\"t56\"></a><a id=\"_854\"></a>视图有哪些特点？</h3>\r\n<p>视图的特点如下:</p>\r\n<ul><li> <p>视图的列可以来自不同的表，是表的抽象和在逻辑意义上建立的新关系。</p> </li><li> <p>视图是由基本表(实表)产生的表(虚表)。</p> </li><li> <p>视图的建立和删除不影响基本表。</p> </li><li> <p>对视图内容的更新(添加，删除和修改)直接影响基本表。</p> </li><li> <p>当视图来自多个基本表时，不允许添加和删除数据。</p> </li></ul>\r\n<p>视图的操作包括创建视图，查看视图，删除视图和修改视图。</p>\r\n<h3><a name=\"t57\"></a><a name=\"t57\"></a><a id=\"_877\"></a>视图的使用场景有哪些？</h3>\r\n<p>视图根本用途：简化sql查询，提高开发效率。如果说还有另外一个用途那就是兼容老的表结构。</p>\r\n<p>下面是视图的常见使用场景：</p>\r\n<ul><li> <p>重用SQL语句；</p> </li><li> <p>简化复杂的SQL操作。在编写查询后，可以方便的重用它而不必知道它的基本查询细节；</p> </li><li> <p>使用表的组成部分而不是整个表；</p> </li><li> <p>保护数据。可以给用户授予表的特定部分的访问权限而不是整个表的访问权限；</p> </li><li> <p>更改数据格式和表示。视图可返回与底层表的表示和格式不同的数据。</p> </li></ul>\r\n<h3><a name=\"t58\"></a><a name=\"t58\"></a><a id=\"_895\"></a>视图的优点</h3>\r\n<ol><li>查询简单化。视图能简化用户的操作</li><li>数据安全性。视图使用户能以多种角度看待同一数据，能够对机密数据提供安全保护</li><li>逻辑数据独立性。视图对重构数据库提供了一定程度的逻辑独立性</li></ol>\r\n<h3><a name=\"t59\"></a><a name=\"t59\"></a><a id=\"_903\"></a>视图的缺点</h3>\r\n<ol><li> <p>性能。数据库必须把视图的查询转化成对基本表的查询，如果这个视图是由一个复杂的多表查询所定义，那么，即使是视图的一个简单查询，数据库也把它变成一个复杂的结合体，需要花费一定的时间。</p> </li><li> <p>修改限制。当用户试图修改视图的某些行时，数据库必须把它转化为对基本表的某些行的修改。事实上，当从视图中插入或者删除时，情况也是这样。对于简单视图来说，这是很方便的，但是，对于比较复杂的视图，可能是不可修改的</p> <p>这些视图有如下特征：1.有UNIQUE等集合操作符的视图。2.有GROUP BY子句的视图。3.有诸如AVG\\SUM\\MAX等聚合函数的视图。 4.使用DISTINCT关键字的视图。5.连接表的视图（其中有些例外）</p> </li></ol>\r\n<h3><a name=\"t60\"></a><a name=\"t60\"></a><a id=\"_913\"></a>什么是游标？</h3>\r\n<p>游标是系统为用户开设的一个数据缓冲区，存放SQL语句的执行结果，每个游标区都有一个名字。用户可以通过游标逐一获取记录并赋给主变量，交由主语言进一步处理。</p>\r\n<h2><a name=\"t61\"></a><a name=\"t61\"></a><a id=\"_921\"></a>存储过程与函数</h2>\r\n<h3><a name=\"t62\"></a><a name=\"t62\"></a><a id=\"_923\"></a>什么是存储过程？有哪些优缺点？</h3>\r\n<p>存储过程是一个预编译的SQL语句，优点是允许模块化的设计，就是说只需要创建一次，以后在该程序中就可以调用多次。如果某次操作需要执行多次SQL，使用存储过程比单纯SQL语句执行要快。</p>\r\n<p><strong>优点</strong></p>\r\n<p>1）存储过程是预编译过的，执行效率高。</p>\r\n<p>2）存储过程的代码直接存放于数据库中，通过存储过程名直接调用，减少网络通讯。</p>\r\n<p>3）安全性高，执行存储过程需要有一定权限的用户。</p>\r\n<p>4）存储过程可以重复使用，减少数据库开发人员的工作量。</p>\r\n<p><strong>缺点</strong></p>\r\n<p>1）调试麻烦，但是用 PL/SQL Developer 调试很方便！弥补这个缺点。</p>\r\n<p>2）移植问题，数据库端代码当然是与数据库相关的。但是如果是做工程型项目，基本不存在移植问题。</p>\r\n<p>3）重新编译问题，因为后端代码是运行前编译的，如果带有引用关系的对象发生改变时，受影响的存储过程、包将需要重新编译（不过也可以设置成运行时刻自动编译）。</p>\r\n<p>4）如果在一个程序系统中大量的使用存储过程，到程序交付使用的时候随着用户需求的增加会导致数据结构的变化，接着就是系统的相关问题了，最后如果用户想维护该系统可以说是很难很难、而且代价是空前的，维护起来更麻烦。</p>\r\n<h2><a name=\"t63\"></a><a name=\"t63\"></a><a id=\"_951\"></a>触发器</h2>\r\n<h3><a name=\"t64\"></a><a name=\"t64\"></a><a id=\"_953\"></a>什么是触发器？触发器的使用场景有哪些？</h3>\r\n<p>触发器是用户定义在关系表上的一类由事件驱动的特殊的存储过程。触发器是指一段代码，当触发某个事件时，自动执行这些代码。</p>\r\n<p>使用场景</p>\r\n<ul><li>可以通过数据库中的相关表实现级联更改。</li><li>实时监控某张表中的某个字段的更改而需要做出相应的处理。</li><li>例如可以生成某些业务的编号。</li><li>注意不要滥用，否则会造成数据库及应用程序的维护困难。</li><li>大家需要牢记以上基础知识点，重点是理解数据类型CHAR和VARCHAR的差异，表存储引擎InnoDB和MyISAM的区别。</li></ul>\r\n<h3><a name=\"t65\"></a><a name=\"t65\"></a><a id=\"MySQL_967\"></a>MySQL中都有哪些触发器？</h3>\r\n<p>在MySQL数据库中有如下六种触发器：</p>\r\n<ul><li>Before Insert</li><li>After Insert</li><li>Before Update</li><li>After Update</li><li>Before Delete</li><li>After Delete</li></ul>\r\n<h2><a name=\"t66\"></a><a name=\"t66\"></a><a id=\"SQL_982\"></a>常用SQL语句</h2>\r\n<h3><a name=\"t67\"></a><a name=\"t67\"></a><a id=\"SQL_984\"></a>SQL语句主要分为哪几类</h3>\r\n<p>数据定义语言DDL（Data Ddefinition Language）CREATE，DROP，ALTER</p>\r\n<p>主要为以上操作 即对逻辑结构等有操作的，其中包括表结构，视图和索引。</p>\r\n<p>数据查询语言DQL（Data Query Language）SELECT</p>\r\n<p>这个较为好理解 即查询操作，以select关键字。各种简单查询，连接查询等 都属于DQL。</p>\r\n<p>数据操纵语言DML（Data Manipulation Language）INSERT，UPDATE，DELETE</p>\r\n<p>主要为以上操作 即对数据进行操作的，对应上面所说的查询操作 DQL与DML共同构建了多数初级程序员常用的增删改查操作。而查询是较为特殊的一种 被划分到DQL中。</p>\r\n<p>数据控制功能DCL（Data Control Language）GRANT，REVOKE，COMMIT，ROLLBACK</p>\r\n<p>主要为以上操作 即对数据库安全性完整性等有操作的，可以简单的理解为权限控制等。</p>\r\n<h3><a name=\"t68\"></a><a name=\"t68\"></a><a id=\"_1010\"></a>超键、候选键、主键、外键分别是什么？</h3>\r\n<ul><li>超键：在关系中能唯一标识元组的属性集称为关系模式的超键。一个属性可以为作为一个超键，多个属性组合在一起也可以作为一个超键。超键包含候选键和主键。</li><li>候选键：是最小超键，即没有冗余元素的超键。</li><li>主键：数据库表中对储存数据对象予以唯一和完整标识的数据列或属性的组合。一个数据列只能有一个主键，且主键的取值不能缺失，即不能为空值（Null）。</li><li>外键：在一个表中存在的另一个表的主键称此表的外键。</li></ul>\r\n<h3><a name=\"t69\"></a><a name=\"t69\"></a><a id=\"SQL__1019\"></a>SQL 约束有哪几种？</h3>\r\n<blockquote>\r\n<p>SQL 约束有哪几种？</p>\r\n</blockquote>\r\n<ul><li>NOT NULL: 用于控制字段的内容一定不能为空（NULL）。</li><li>UNIQUE: 控件字段内容不能重复，一个表允许有多个 Unique 约束。</li><li>PRIMARY KEY: 也是用于控件字段内容不能重复，但它在一个表只允许出现一个。</li><li>FOREIGN KEY: 用于预防破坏表之间连接的动作，也能防止非法数据插入外键列，因为它必须是它指向的那个表中的值之一。</li><li>CHECK: 用于控制字段的值范围。</li></ul>\r\n<h3><a name=\"t70\"></a><a name=\"t70\"></a><a id=\"_1031\"></a>六种关联查询</h3>\r\n<ul><li>交叉连接（CROSS JOIN）</li><li>内连接（INNER JOIN）</li><li>外连接（LEFT JOIN/RIGHT JOIN）</li><li>联合查询（UNION与UNION ALL）</li><li>全连接（FULL JOIN）</li><li>交叉连接（CROSS JOIN）</li></ul>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">SELECT * FROM A,B(,C)或者SELECT * FROM A CROSS JOIN B (CROSS JOIN C)#没有任何关联条件，结果是笛卡尔积，结果集会很大，没有意义，很少使用内连接（INNER JOIN）SELECT * FROM A,B WHERE A.id=B.id或者SELECT * FROM A INNER JOIN B ON A.id=B.id多表中同时符合某种条件的数据记录的集合，INNER JOIN可以缩写为JOIN\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>内连接分为三类</p>\r\n<ul><li>等值连接：ON A.id=B.id</li><li>不等值连接：ON A.id &gt; B.id</li><li>自连接：SELECT * FROM A T1 INNER JOIN A T2 ON T1.id=T2.pid</li></ul>\r\n<p>外连接（LEFT JOIN/RIGHT JOIN）</p>\r\n<ul><li>左外连接：LEFT OUTER JOIN, 以左表为主，先查询出左表，按照ON后的关联条件匹配右表，没有匹配到的用NULL填充，可以简写成LEFT JOIN</li><li>右外连接：RIGHT OUTER JOIN, 以右表为主，先查询出右表，按照ON后的关联条件匹配左表，没有匹配到的用NULL填充，可以简写成RIGHT JOIN</li></ul>\r\n<p>联合查询（UNION与UNION ALL）</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">SELECT * FROM A UNION SELECT * FROM B UNION ...\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<ul><li>就是把多个结果集集中在一起，UNION前的结果为基准，需要注意的是联合查询的列数要相等，相同的记录行会合并</li><li>如果使用UNION ALL，不会合并重复的记录行</li><li>效率 UNION 高于 UNION ALL</li></ul>\r\n<p>全连接（FULL JOIN）</p>\r\n<ul><li>MySQL不支持全连接</li><li>可以使用LEFT JOIN 和UNION和RIGHT JOIN联合使用</li></ul>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">SELECT * FROM A LEFT JOIN B ON A.id=B.id UNIONSELECT * FROM A RIGHT JOIN B ON A.id=B.id\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>表连接面试题</p>\r\n<p>有2张表，1张R、1张S，R表有ABC三列，S表有CD两列，表中各有三条记录。</p>\r\n<p>R表</p>\r\n<div class=\"table-box\"><table><thead><tr><th>A</th><th>B</th><th>C</th></tr></thead><tbody><tr><td>a1</td><td>b1</td><td>c1</td></tr><tr><td>a2</td><td>b2</td><td>c2</td></tr><tr><td>a3</td><td>b3</td><td>c3</td></tr></tbody></table></div>\r\n<p>S表</p>\r\n<div class=\"table-box\"><table><thead><tr><th>C</th><th>D</th></tr></thead><tbody><tr><td>c1</td><td>d1</td></tr><tr><td>c2</td><td>d2</td></tr><tr><td>c4</td><td>d3</td></tr></tbody></table></div>\r\n<ol><li>交叉连接(笛卡尔积):</li></ol>\r\n<p>select r.<code>*</code>,s.<code>*</code> from r,s</p>\r\n<div class=\"table-box\"><table><thead><tr><th>A</th><th>B</th><th>C</th><th>C</th><th>D</th></tr></thead><tbody><tr><td>a1</td><td>b1</td><td>c1</td><td>c1</td><td>d1</td></tr><tr><td>a2</td><td>b2</td><td>c2</td><td>c1</td><td>d1</td></tr><tr><td>a3</td><td>b3</td><td>c3</td><td>c1</td><td>d1</td></tr><tr><td>a1</td><td>b1</td><td>c1</td><td>c2</td><td>d2</td></tr><tr><td>a2</td><td>b2</td><td>c2</td><td>c2</td><td>d2</td></tr><tr><td>a3</td><td>b3</td><td>c3</td><td>c2</td><td>d2</td></tr><tr><td>a1</td><td>b1</td><td>c1</td><td>c4</td><td>d3</td></tr><tr><td>a2</td><td>b2</td><td>c2</td><td>c4</td><td>d3</td></tr><tr><td>a3</td><td>b3</td><td>c3</td><td>c4</td><td>d3</td></tr></tbody></table></div>\r\n<ol start=\"2\"><li> <p>内连接结果：</p> <p>select r.<code>*</code>,s.<code>*</code> from r inner join s on r.c=s.c</p> </li></ol>\r\n<div class=\"table-box\"><table><thead><tr><th>A</th><th>B</th><th>C</th><th>C</th><th>D</th></tr></thead><tbody><tr><td>a1</td><td>b1</td><td>c1</td><td>c1</td><td>d1</td></tr><tr><td>a2</td><td>b2</td><td>c2</td><td>c2</td><td>d2</td></tr></tbody></table></div>\r\n<ol start=\"3\"><li> <p>左连接结果：</p> <p>select r.<code>*</code>,s.<code>*</code> from r left join s on r.c=s.c</p> </li></ol>\r\n<div class=\"table-box\"><table><thead><tr><th>A</th><th>B</th><th>C</th><th>C</th><th>D</th></tr></thead><tbody><tr><td>a1</td><td>b1</td><td>c1</td><td>c1</td><td>d1</td></tr><tr><td>a2</td><td>b2</td><td>c2</td><td>c2</td><td>d2</td></tr><tr><td>a3</td><td>b3</td><td>c3</td><td></td><td></td></tr></tbody></table></div>\r\n<ol start=\"4\"><li> <p>右连接结果：</p> <p>select r.<code>*</code>,s.<code>*</code> from r right join s on r.c=s.c</p> </li></ol>\r\n<div class=\"table-box\"><table><thead><tr><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>A</td><td>B</td><td>C</td><td>C</td><td>D</td></tr><tr><td>a1</td><td>b1</td><td>c1</td><td>c1</td><td>d1</td></tr><tr><td>a2</td><td>b2</td><td>c2</td><td>c2</td><td>d2</td></tr><tr><td></td><td></td><td></td><td>c4</td><td>d3</td></tr></tbody></table></div>\r\n<ol start=\"5\"><li> <p>全表连接的结果（MySql不支持，Oracle支持）：</p> <p>select r.<code>*</code>,s.<code>*</code> from r full join s on r.c=s.c</p> </li></ol>\r\n<div class=\"table-box\"><table><thead><tr><th>A</th><th>B</th><th>C</th><th>C</th><th>D</th></tr></thead><tbody><tr><td>a1</td><td>b1</td><td>c1</td><td>c1</td><td>d1</td></tr><tr><td>a2</td><td>b2</td><td>c2</td><td>c2</td><td>d2</td></tr><tr><td>a3</td><td>b3</td><td>c3</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td>c4</td><td>d3</td></tr></tbody></table></div>\r\n<h3><a name=\"t71\"></a><a name=\"t71\"></a><a id=\"_1156\"></a>什么是子查询</h3>\r\n<ol><li> <p>条件：一条SQL语句的查询结果做为另一条查询语句的条件或查询结果</p> </li><li> <p>嵌套：多条SQL语句嵌套使用，内部的SQL查询语句称为子查询。</p> </li></ol>\r\n<h3><a name=\"t72\"></a><a name=\"t72\"></a><a id=\"_1164\"></a>子查询的三种情况</h3>\r\n<ol><li>子查询是单行单列的情况：结果集是一个值，父查询使用：=、 &lt;、 &gt; 等运算符</li></ol>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">-- 查询工资最高的员工是谁？ </span>\r\n<span class=\"token keyword\">select</span>  <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> employee <span class=\"token keyword\">where</span> salary<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> employee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<ol start=\"2\"><li>子查询是多行单列的情况：结果集类似于一个数组，父查询使用：in 运算符</li></ol>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">-- 查询工资最高的员工是谁？ </span>\r\n<span class=\"token keyword\">select</span>  <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> employee <span class=\"token keyword\">where</span> salary<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> employee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<ol start=\"3\"><li>子查询是多行多列的情况：结果集类似于一张虚拟表，不能用于where条件，用于select子句中做为子表</li></ol>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">-- 1) 查询出2011年以后入职的员工信息</span>\r\n<span class=\"token comment\">-- 2) 查询所有的部门信息，与上面的虚拟表中的信息比对，找出所有部门ID相等的员工。</span>\r\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> dept d<span class=\"token punctuation\">,</span>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> employee <span class=\"token keyword\">where</span> join_date <span class=\"token operator\">&gt;</span> <span class=\"token string\">'2011-1-1'</span><span class=\"token punctuation\">)</span> e <span class=\"token keyword\">where</span> e<span class=\"token punctuation\">.</span>dept_id <span class=\"token operator\">=</span>  d<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">-- 使用表连接：</span>\r\n<span class=\"token keyword\">select</span> d<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">from</span>  dept d <span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> employee e <span class=\"token keyword\">on</span> d<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>dept_id <span class=\"token keyword\">where</span> e<span class=\"token punctuation\">.</span>join_date <span class=\"token operator\">&gt;</span>  <span class=\"token string\">'2011-1-1'</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<h3><a name=\"t73\"></a><a name=\"t73\"></a><a id=\"mysql_in__exists__1193\"></a>mysql中 in 和 exists 区别</h3>\r\n<p>mysql中的in语句是把外表和内表作hash 连接，而exists语句是对外表作loop循环，每次loop循环再对内表进行查询。一直大家都认为exists比in语句的效率要高，这种说法其实是不准确的。这个是要区分环境的。</p>\r\n<ol><li>如果查询的两个表大小相当，那么用in和exists差别不大。</li><li>如果两个表中一个较小，一个是大表，则子查询表大的用exists，子查询表小的用in。</li><li>not in 和not exists：如果查询语句使用了not in，那么内外表都进行全表扫描，没有用到索引；而not extsts的子查询依然能用到表上的索引。所以无论那个表大，用not exists都比not in要快。</li></ol>\r\n<h3><a name=\"t74\"></a><a name=\"t74\"></a><a id=\"varcharchar_1203\"></a>varchar与char的区别</h3>\r\n<p><strong>char的特点</strong></p>\r\n<ul><li> <p>char表示定长字符串，长度是固定的；</p> </li><li> <p>如果插入数据的长度小于char的固定长度时，则用空格填充；</p> </li><li> <p>因为长度固定，所以存取速度要比varchar快很多，甚至能快50%，但正因为其长度固定，所以会占据多余的空间，是空间换时间的做法；</p> </li><li> <p>对于char来说，最多能存放的字符个数为255，和编码无关</p> </li></ul>\r\n<p><strong>varchar的特点</strong></p>\r\n<ul><li> <p>varchar表示可变长字符串，长度是可变的；</p> </li><li> <p>插入的数据是多长，就按照多长来存储；</p> </li><li> <p>varchar在存取方面与char相反，它存取慢，因为长度不固定，但正因如此，不占据多余的空间，是时间换空间的做法；</p> </li><li> <p>对于varchar来说，最多能存放的字符个数为65532</p> </li></ul>\r\n<p>总之，结合性能角度（char更快）和节省磁盘空间角度（varchar更小），具体情况还需具体来设计数据库才是妥当的做法。</p>\r\n<h3><a name=\"t75\"></a><a name=\"t75\"></a><a id=\"varchar5050_1229\"></a>varchar(50)中50的涵义</h3>\r\n<p>最多存放50个字符，varchar(50)和(200)存储hello所占空间一样，但后者在排序时会消耗更多内存，因为order by col采用fixed_length计算col长度(memory引擎也一样)。在早期 MySQL 版本中， 50 代表字节数，现在代表字符数。</p>\r\n<h3><a name=\"t76\"></a><a name=\"t76\"></a><a id=\"int2020_1235\"></a>int(20)中20的涵义</h3>\r\n<p>是指显示字符的长度。20表示最大显示宽度为20，但仍占4字节存储，存储范围不变；</p>\r\n<p>不影响内部存储，只是影响带 zerofill 定义的 int 时，前面补多少个 0，易于报表展示</p>\r\n<h3><a name=\"t77\"></a><a name=\"t77\"></a><a id=\"mysql_1243\"></a>mysql为什么这么设计</h3>\r\n<p>对大多数应用没有意义，只是规定一些工具用来显示字符的个数；int(1)和int(20)存储和计算均一样；</p>\r\n<h3><a name=\"t78\"></a><a name=\"t78\"></a><a id=\"mysqlint10char10varchar10_1249\"></a>mysql中int(10)和char(10)以及varchar(10)的区别</h3>\r\n<ul><li> <p>int(10)的10表示显示的数据的长度，不是存储数据的大小；chart(10)和varchar(10)的10表示存储数据的大小，即表示存储多少个字符。</p> <p>int(10) 10位的数据长度 9999999999，占32个字节，int型4位<br> char(10) 10位固定字符串，不足补空格 最多10个字符<br> varchar(10) 10位可变字符串，不足补空格 最多10个字符</p> </li><li> <p>char(10)表示存储定长的10个字符，不足10个就用空格补齐，占用更多的存储空间</p> </li><li> <p>varchar(10)表示存储10个变长的字符，存储多少个就是多少个，空格也按一个字符存储，这一点是和char(10)的空格不同的，char(10)的空格表示占位不算一个字符</p> </li></ul>\r\n<h3><a name=\"t79\"></a><a name=\"t79\"></a><a id=\"FLOATDOUBLE_1263\"></a>FLOAT和DOUBLE的区别是什么？</h3>\r\n<ul><li>FLOAT类型数据可以存储至多8位十进制数，并在内存中占4字节。</li><li>DOUBLE类型数据可以存储至多18位十进制数，并在内存中占8字节。</li></ul>\r\n<h3><a name=\"t80\"></a><a name=\"t80\"></a><a id=\"dropdeletetruncate_1270\"></a>drop、delete与truncate的区别</h3>\r\n<p>三者都表示删除，但是三者有一些差别：</p>\r\n<div class=\"table-box\"><table><thead><tr><th align=\"center\"></th><th align=\"center\">Delete</th><th align=\"center\">Truncate</th><th align=\"center\">Drop</th></tr></thead><tbody><tr><td align=\"center\">类型</td><td align=\"center\">属于DML</td><td align=\"center\">属于DDL</td><td align=\"center\">属于DDL</td></tr><tr><td align=\"center\">回滚</td><td align=\"center\">可回滚</td><td align=\"center\">不可回滚</td><td align=\"center\">不可回滚</td></tr><tr><td align=\"center\">删除内容</td><td align=\"center\">表结构还在，删除表的全部或者一部分数据行</td><td align=\"center\">表结构还在，删除表中的所有数据</td><td align=\"center\">从数据库中删除表，所有的数据行，索引和权限也会被删除</td></tr><tr><td align=\"center\">删除速度</td><td align=\"center\">删除速度慢，需要逐行删除</td><td align=\"center\">删除速度快</td><td align=\"center\">删除速度最快</td></tr></tbody></table></div>\r\n<p>因此，在不再需要一张表的时候，用drop；在想删除部分数据行时候，用delete；在保留表而删除所有数据的时候用truncate。</p>\r\n<h3><a name=\"t81\"></a><a name=\"t81\"></a><a id=\"UNIONUNION_ALL_1285\"></a>UNION与UNION ALL的区别？</h3>\r\n<ul><li>如果使用UNION ALL，不会合并重复的记录行</li><li>效率 UNION 高于 UNION ALL</li></ul>\r\n<h2><a name=\"t82\"></a><a name=\"t82\"></a><a id=\"SQL_1294\"></a>SQL优化</h2>\r\n<h3><a name=\"t83\"></a><a name=\"t83\"></a><a id=\"SQL_1296\"></a>如何定位及优化SQL语句的性能问题？创建的索引有没有被使用到?或者说怎么才可以知道这条语句运行很慢的原因？</h3>\r\n<p>对于低性能的SQL语句的定位，最重要也是最有效的方法就是使用执行计划，MySQL提供了explain命令来查看语句的执行计划。 我们知道，不管是哪种数据库，或者是哪种数据库引擎，在对一条SQL语句进行执行的过程中都会做很多相关的优化，<strong>对于查询语句，最重要的优化方式就是使用索引</strong>。 而<strong>执行计划，就是显示数据库引擎对于SQL语句的执行的详细情况，其中包含了是否使用索引，使用什么索引，使用的索引的相关信息等</strong>。</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200310171131582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\r\n<p>执行计划包含的信息 <strong>id</strong> 有一组数字组成。表示一个查询中各个子查询的执行顺序;</p>\r\n<ul><li>id相同执行顺序由上至下。</li><li>id不同，id值越大优先级越高，越先被执行。</li><li>id为null时表示一个结果集，不需要使用它查询，常出现在包含union等查询语句中。</li></ul>\r\n<p><strong>select_type</strong> 每个子查询的查询类型，一些常见的查询类型。</p>\r\n<div class=\"table-box\"><table><thead><tr><th>id</th><th>select_type</th><th>description</th></tr></thead><tbody><tr><td>1</td><td>SIMPLE</td><td>不包含任何子查询或union等查询</td></tr><tr><td>2</td><td>PRIMARY</td><td>包含子查询最外层查询就显示为 PRIMARY</td></tr><tr><td>3</td><td>SUBQUERY</td><td>在select或 where字句中包含的查询</td></tr><tr><td>4</td><td>DERIVED</td><td>from字句中包含的查询</td></tr><tr><td>5</td><td>UNION</td><td>出现在union后的查询语句中</td></tr><tr><td>6</td><td>UNION RESULT</td><td>从UNION中获取结果集，例如上文的第三个例子</td></tr></tbody></table></div>\r\n<p><strong>table</strong> 查询的数据表，当从衍生表中查数据时会显示 x 表示对应的执行计划id <strong>partitions</strong> 表分区、表创建的时候可以指定通过那个列进行表分区。 举个例子：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> tmp <span class=\"token punctuation\">(</span>\r\n    id <span class=\"token keyword\">int</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\r\n    name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">engine</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">innodb</span>\r\n<span class=\"token keyword\">partition</span> <span class=\"token keyword\">by</span> <span class=\"token keyword\">key</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> partitions <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p><strong>type</strong>(非常重要，可以看到有没有走索引) 访问类型</p>\r\n<ul><li>ALL 扫描全表数据</li><li>index 遍历索引</li><li>range 索引范围查找</li><li>index_subquery 在子查询中使用 ref</li><li>unique_subquery 在子查询中使用 eq_ref</li><li>ref_or_null 对Null进行索引的优化的 ref</li><li>fulltext 使用全文索引</li><li>ref 使用非唯一索引查找数据</li><li>eq_ref 在join查询中使用PRIMARY KEYorUNIQUE NOT NULL索引关联。</li></ul>\r\n<p><strong>possible_keys</strong> 可能使用的索引，注意不一定会使用。查询涉及到的字段上若存在索引，则该索引将被列出来。当该列为 NULL时就要考虑当前的SQL是否需要优化了。</p>\r\n<p><strong>key</strong> 显示MySQL在查询中实际使用的索引，若没有使用索引，显示为NULL。</p>\r\n<p><strong>TIPS</strong>:查询中若使用了覆盖索引(覆盖索引：索引的数据覆盖了需要查询的所有数据)，则该索引仅出现在key列表中</p>\r\n<p><strong>key_length</strong> 索引长度</p>\r\n<p><strong>ref</strong> 表示上述表的连接匹配条件，即哪些列或常量被用于查找索引列上的值</p>\r\n<p><strong>rows</strong> 返回估算的结果集数目，并不是一个准确的值。</p>\r\n<p><strong>extra</strong> 的信息非常丰富，常见的有：</p>\r\n<ol><li>Using index 使用覆盖索引</li><li>Using where 使用了用where子句来过滤结果集</li><li>Using filesort 使用文件排序，使用非索引列进行排序时出现，非常消耗性能，尽量优化。</li><li>Using temporary 使用了临时表 sql优化的目标可以参考阿里开发手册</li></ol>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">【推荐】SQL性能优化的目标：至少要达到 range 级别，要求是ref级别，如果可以是consts最好。\r\n说明：\r\n1） consts 单表中最多只有一个匹配行（主键或者唯一索引），在优化阶段即可读取到数据。\r\n2） ref 指的是使用普通的索引（normal index）。\r\n3） range 对索引进行范围检索。\r\n反例：explain表的结果，type=index，索引物理文件全扫描，速度非常慢，这个index级别比较range还低，与全表扫描是小巫见大巫。\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<h3><a name=\"t84\"></a><a name=\"t84\"></a><a id=\"SQL_1374\"></a>SQL的生命周期？</h3>\r\n<ol><li> <p>应用服务器与数据库服务器建立一个连接</p> </li><li> <p>数据库进程拿到请求sql</p> </li><li> <p>解析并生成执行计划，执行</p> </li><li> <p>读取数据到内存并进行逻辑处理</p> </li><li> <p>通过步骤一的连接，发送结果到客户端</p> </li><li> <p>关掉连接，释放资源</p> <p><img src=\"https://img-blog.csdnimg.cn/20200310170936478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p> </li></ol>\r\n<h3><a name=\"t85\"></a><a name=\"t85\"></a><a id=\"_1394\"></a>大表数据查询，怎么优化</h3>\r\n<ol><li>优化shema、sql语句+索引；</li><li>第二加缓存，memcached, redis；</li><li>主从复制，读写分离；</li><li>垂直拆分，根据你模块的耦合度，将一个大的系统分为多个小的系统，也就是分布式系统；</li><li>水平切分，针对数据量大的表，这一步最麻烦，最能考验技术水平，要选择一个合理的sharding key, 为了有好的查询效率，表结构也要改动，做一定的冗余，应用也要改，sql中尽量带sharding key，将数据定位到限定的表上去查，而不是扫描全部的表；</li></ol>\r\n<h3><a name=\"t86\"></a><a name=\"t86\"></a><a id=\"_1404\"></a>超大分页怎么处理？</h3>\r\n<p>超大的分页一般从两个方向上来解决.</p>\r\n<ul><li>数据库层面,这也是我们主要集中关注的(虽然收效没那么大),类似于<code>select * from table where age &gt; 20 limit 1000000,10</code>这种查询其实也是有可以优化的余地的. 这条语句需要load1000000数据然后基本上全部丢弃,只取10条当然比较慢. 当时我们可以修改为<code>select * from table where id in (select id from table where age &gt; 20 limit 1000000,10)</code>.这样虽然也load了一百万的数据,但是由于索引覆盖,要查询的所有字段都在索引中,所以速度会很快. 同时如果ID连续的好,我们还可以<code>select * from table where id &gt; 1000000 limit 10</code>,效率也是不错的,优化的可能性有许多种,但是核心思想都一样,就是减少load的数据.</li><li>从需求的角度减少这种请求…主要是不做类似的需求(直接跳转到几百万页之后的具体某一页.只允许逐页查看或者按照给定的路线走,这样可预测,可缓存)以及防止ID泄漏且连续被人恶意攻击.</li></ul>\r\n<p>解决超大分页,其实主要是靠缓存,可预测性的提前查到内容,缓存至redis等k-V数据库中,直接返回即可.</p>\r\n<p>在阿里巴巴《Java开发手册》中,对超大分页的解决办法是类似于上面提到的第一种.</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">【推荐】利用延迟关联或者子查询优化超多分页场景。\r\n\r\n说明：MySQL并不是跳过<span class=\"token keyword\">offset</span>行，而是取<span class=\"token keyword\">offset</span><span class=\"token operator\">+</span>N行，然后返回放弃前<span class=\"token keyword\">offset</span>行，返回N行，那当<span class=\"token keyword\">offset</span>特别大的时候，效率就非常的低下，要么控制返回的总页数，要么对超过特定阈值的页数进行<span class=\"token keyword\">SQL</span>改写。\r\n\r\n正例：先快速定位需要获取的id段，然后再关联：\r\n\r\n<span class=\"token keyword\">SELECT</span> a<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> 表<span class=\"token number\">1</span> a<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> 表<span class=\"token number\">1</span> <span class=\"token keyword\">where</span> 条件 <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span> <span class=\"token punctuation\">)</span> b <span class=\"token keyword\">where</span> a<span class=\"token punctuation\">.</span>id<span class=\"token operator\">=</span>b<span class=\"token punctuation\">.</span>id\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h3><a name=\"t87\"></a><a name=\"t87\"></a><a id=\"mysql__1427\"></a>mysql 分页</h3>\r\n<p>LIMIT 子句可以被用于强制 SELECT 语句返回指定的记录数。LIMIT 接受一个或两个数字参数。参数必须是一个整数常量。如果给定两个参数，第一个参数指定第一个返回记录行的偏移量，第二个参数指定返回记录行的最大数目。初始记录行的偏移量是 0(而不是 1)</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">mysql&gt; SELECT * FROM table LIMIT 5,10; // 检索记录行 6-15\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>为了检索从某一个偏移量到记录集的结束所有的记录行，可以指定第二个参数为 -1：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">mysql&gt; SELECT * FROM table LIMIT 95,-1; // 检索记录行 96-last.\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>如果只给定一个参数，它表示返回最大的记录行数目：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">mysql&gt; SELECT * FROM table LIMIT 5; //检索前 5 个记录行\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>换句话说，LIMIT n 等价于 LIMIT 0,n。</p>\r\n<h3><a name=\"t88\"></a><a name=\"t88\"></a><a id=\"_1451\"></a>慢查询日志</h3>\r\n<blockquote>\r\n<p>用于记录执行时间超过某个临界值的SQL日志，用于快速定位慢查询，为我们的优化做参考。</p>\r\n</blockquote>\r\n<p>开启慢查询日志</p>\r\n<p>配置项：<code>slow_query_log</code></p>\r\n<p>可以使用<code>show variables like ‘slov_query_log’</code>查看是否开启，如果状态值为<code>OFF</code>，可以使用<code>set GLOBAL slow_query_log = on</code>来开启，它会在<code>datadir</code>下产生一个<code>xxx-slow.log</code>的文件。</p>\r\n<p>设置临界时间</p>\r\n<p>配置项：<code>long_query_time</code></p>\r\n<p>查看：<code>show VARIABLES like 'long_query_time'</code>，单位秒</p>\r\n<p>设置：<code>set long_query_time=0.5</code></p>\r\n<p>实操时应该从长时间设置到短的时间，即将最慢的SQL优化掉</p>\r\n<p>查看日志，一旦SQL超过了我们设置的临界时间就会被记录到<code>xxx-slow.log</code>中</p>\r\n<h3><a name=\"t89\"></a><a name=\"t89\"></a><a id=\"sql_1475\"></a>关心过业务系统里面的sql耗时吗？统计过慢查询吗？对慢查询都怎么优化过？</h3>\r\n<p>在业务系统中，除了使用主键进行的查询，其他的我都会在测试库上测试其耗时，慢查询的统计主要由运维在做，会定期将业务中的慢查询反馈给我们。</p>\r\n<p>慢查询的优化首先要搞明白慢的原因是什么？ 是查询条件没有命中索引？是load了不需要的数据列？还是数据量太大？</p>\r\n<p>所以优化也是针对这三个方向来的，</p>\r\n<ul><li>首先分析语句，看看是否load了额外的数据，可能是查询了多余的行并且抛弃掉了，可能是加载了许多结果中并不需要的列，对语句进行分析以及重写。</li><li>分析语句的执行计划，然后获得其使用索引的情况，之后修改语句或者修改索引，使得语句可以尽可能的命中索引。</li><li>如果对语句的优化已经无法进行，可以考虑表中的数据量是否太大，如果是的话可以进行横向或者纵向的分表。</li></ul>\r\n<h3><a name=\"t90\"></a><a name=\"t90\"></a><a id=\"_1489\"></a>为什么要尽量设定一个主键？</h3>\r\n<p>主键是数据库确保数据行在整张表唯一性的保障，即使业务上本张表没有主键，也建议添加一个自增长的ID列作为主键。设定了主键之后，在后续的删改查的时候可能更加快速以及确保操作数据范围安全。</p>\r\n<h3><a name=\"t91\"></a><a name=\"t91\"></a><a id=\"IDUUID_1495\"></a>主键使用自增ID还是UUID？</h3>\r\n<p>推荐使用自增ID，不要使用UUID。</p>\r\n<p>因为在InnoDB存储引擎中，主键索引是作为聚簇索引存在的，也就是说，主键索引的B+树叶子节点上存储了主键索引以及全部的数据(按照顺序)，如果主键索引是自增ID，那么只需要不断向后排列即可，如果是UUID，由于到来的ID与原来的大小不确定，会造成非常多的数据插入，数据移动，然后导致产生很多的内存碎片，进而造成插入性能的下降。</p>\r\n<p>总之，在数据量大一些的情况下，用自增主键性能会好一些。</p>\r\n<p>关于主键是聚簇索引，如果没有主键，InnoDB会选择一个唯一键来作为聚簇索引，如果没有唯一键，会生成一个隐式的主键。</p>\r\n<h3><a name=\"t92\"></a><a name=\"t92\"></a><a id=\"not_null_1507\"></a>字段为什么要求定义为not null？</h3>\r\n<p>null值会占用更多的字节，且会在程序中造成很多与预期不符的情况。</p>\r\n<h3><a name=\"t93\"></a><a name=\"t93\"></a><a id=\"_1513\"></a>如果要存储用户的密码散列，应该使用什么字段进行存储？</h3>\r\n<p>密码散列，盐，用户身份证号等固定长度的字符串应该使用char而不是varchar来存储，这样可以节省空间且提高检索效率。</p>\r\n<h3><a name=\"t94\"></a><a name=\"t94\"></a><a id=\"_1519\"></a>优化查询过程中的数据访问</h3>\r\n<ul><li>访问数据太多导致查询性能下降</li><li>确定应用程序是否在检索大量超过需要的数据，可能是太多行或列</li><li>确认MySQL服务器是否在分析大量不必要的数据行</li><li>避免犯如下SQL语句错误</li><li>查询不需要的数据。解决办法：使用limit解决</li><li>多表关联返回全部列。解决办法：指定列名</li><li>总是返回全部列。解决办法：避免使用SELECT *</li><li>重复查询相同的数据。解决办法：可以缓存数据，下次直接读取缓存</li><li>是否在扫描额外的记录。解决办法：</li><li>使用explain进行分析，如果发现查询需要扫描大量的数据，但只返回少数的行，可以通过如下技巧去优化：</li><li>使用索引覆盖扫描，把所有的列都放到索引中，这样存储引擎不需要回表获取对应行就可以返回结果。</li><li>改变数据库和表的结构，修改数据表范式</li><li>重写SQL语句，让优化器可以以更优的方式执行查询。</li></ul>\r\n<h3><a name=\"t95\"></a><a name=\"t95\"></a><a id=\"_1537\"></a>优化长难的查询语句</h3>\r\n<ul><li>一个复杂查询还是多个简单查询</li><li>MySQL内部每秒能扫描内存中上百万行数据，相比之下，响应数据给客户端就要慢得多</li><li>使用尽可能小的查询是好的，但是有时将一个大的查询分解为多个小的查询是很有必要的。</li><li>切分查询</li><li>将一个大的查询分为多个小的相同的查询</li><li>一次性删除1000万的数据要比一次删除1万，暂停一会的方案更加损耗服务器开销。</li><li>分解关联查询，让缓存的效率更高。</li><li>执行单个查询可以减少锁的竞争。</li><li>在应用层做关联更容易对数据库进行拆分。</li><li>查询效率会有大幅提升。</li><li>较少冗余记录的查询。</li></ul>\r\n<h3><a name=\"t96\"></a><a name=\"t96\"></a><a id=\"_1553\"></a>优化特定类型的查询语句</h3>\r\n<ul><li>count(*)会忽略所有的列，直接统计所有列数，不要使用count(列名)</li><li>MyISAM中，没有任何where条件的count(*)非常快。</li><li>当有where条件时，MyISAM的count统计不一定比其它引擎快。</li><li>可以使用explain查询近似值，用近似值替代count(*)</li><li>增加汇总表</li><li>使用缓存</li></ul>\r\n<h3><a name=\"t97\"></a><a name=\"t97\"></a><a id=\"_1564\"></a>优化关联查询</h3>\r\n<ul><li>确定ON或者USING子句中是否有索引。</li><li>确保GROUP BY和ORDER BY只有一个表中的列，这样MySQL才有可能使用索引。</li></ul>\r\n<h3><a name=\"t98\"></a><a name=\"t98\"></a><a id=\"_1571\"></a>优化子查询</h3>\r\n<ul><li>用关联查询替代</li><li>优化GROUP BY和DISTINCT</li><li>这两种查询据可以使用索引来优化，是最有效的优化方法</li><li>关联查询中，使用标识列分组的效率更高</li><li>如果不需要ORDER BY，进行GROUP BY时加ORDER BY NULL，MySQL不会再进行文件排序。</li><li>WITH ROLLUP超级聚合，可以挪到应用程序处理</li></ul>\r\n<h3><a name=\"t99\"></a><a name=\"t99\"></a><a id=\"LIMIT_1582\"></a>优化LIMIT分页</h3>\r\n<ul><li>LIMIT偏移量大的时候，查询效率较低</li><li>可以记录上次查询的最大ID，下次查询时直接根据该ID来查询</li></ul>\r\n<h3><a name=\"t100\"></a><a name=\"t100\"></a><a id=\"UNION_1589\"></a>优化UNION查询</h3>\r\n<ul><li>UNION ALL的效率高于UNION</li></ul>\r\n<h3><a name=\"t101\"></a><a name=\"t101\"></a><a id=\"WHERE_1595\"></a>优化WHERE子句</h3>\r\n<p>解题方法</p>\r\n<p>对于此类考题，先说明如何定位低效SQL语句，然后根据SQL语句可能低效的原因做排查，先从索引着手，如果索引没有问题，考虑以上几个方面，数据访问的问题，长难查询句的问题还是一些特定类型优化的问题，逐一回答。</p>\r\n<p>SQL语句优化的一些方法？</p>\r\n<ul><li>1.对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。</li><li>2.应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：</li></ul>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> t <span class=\"token keyword\">where</span> num <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span>\r\n<span class=\"token comment\">-- 可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：</span>\r\n<span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> t <span class=\"token keyword\">where</span> num<span class=\"token operator\">=</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<ul><li>3.应尽量避免在 where 子句中使用!=或&lt;&gt;操作符，否则引擎将放弃使用索引而进行全表扫描。</li><li>4.应尽量避免在 where 子句中使用or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：</li></ul>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> t <span class=\"token keyword\">where</span> num<span class=\"token operator\">=</span><span class=\"token number\">10</span> <span class=\"token operator\">or</span> num<span class=\"token operator\">=</span><span class=\"token number\">20</span>\r\n<span class=\"token comment\">-- 可以这样查询：</span>\r\n<span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> t <span class=\"token keyword\">where</span> num<span class=\"token operator\">=</span><span class=\"token number\">10</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">all</span> <span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> t <span class=\"token keyword\">where</span> num<span class=\"token operator\">=</span><span class=\"token number\">20</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<ul><li>5.in 和 not in 也要慎用，否则会导致全表扫描，如：</li></ul>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> t <span class=\"token keyword\">where</span> num <span class=\"token operator\">in</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\">-- 对于连续的数值，能用 between 就不要用 in 了：</span>\r\n<span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> t <span class=\"token keyword\">where</span> num <span class=\"token operator\">between</span> <span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token number\">3</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<ul><li>6.下面的查询也将导致全表扫描：select id from t where name like ‘%李%’若要提高效率，可以考虑全文检索。</li><li>7.如果在 where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然 而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：</li></ul>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> t <span class=\"token keyword\">where</span> num<span class=\"token operator\">=</span><span class=\"token variable\">@num</span>\r\n<span class=\"token comment\">-- 可以改为强制查询使用索引：</span>\r\n<span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> t <span class=\"token keyword\">with</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">index</span><span class=\"token punctuation\">(</span>索引名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">where</span> num<span class=\"token operator\">=</span><span class=\"token variable\">@num</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<ul><li>8.应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：</li></ul>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> t <span class=\"token keyword\">where</span> num<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">=</span><span class=\"token number\">100</span>\r\n<span class=\"token comment\">-- 应改为:</span>\r\n<span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> t <span class=\"token keyword\">where</span> num<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token operator\">*</span><span class=\"token number\">2</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<ul><li>9.应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：</li></ul>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sql has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> t <span class=\"token keyword\">where</span> substring<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>’abc’\r\n<span class=\"token comment\">-- name以abc开头的id应改为:</span>\r\n<span class=\"token keyword\">select</span> id <span class=\"token keyword\">from</span> t <span class=\"token keyword\">where</span> name <span class=\"token operator\">like</span> ‘abc<span class=\"token operator\">%</span>’\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<ul><li>10.不要在 where 子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。</li></ul>\r\n<h2><a name=\"t102\"></a><a name=\"t102\"></a><a id=\"_1660\"></a>数据库优化</h2>\r\n<h3><a name=\"t103\"></a><a name=\"t103\"></a><a id=\"_1662\"></a>为什么要优化</h3>\r\n<ul><li>系统的吞吐量瓶颈往往出现在数据库的访问速度上</li><li>随着应用程序的运行，数据库的中的数据会越来越多，处理时间会相应变慢</li><li>数据是存放在磁盘上的，读写速度无法和内存相比</li></ul>\r\n<p>优化原则：减少系统瓶颈，减少资源占用，增加系统的反应速度。</p>\r\n<h3><a name=\"t104\"></a><a name=\"t104\"></a><a id=\"_1672\"></a>数据库结构优化</h3>\r\n<p>一个好的数据库设计方案对于数据库的性能往往会起到事半功倍的效果。</p>\r\n<p>需要考虑数据冗余、查询和更新的速度、字段的数据类型是否合理等多方面的内容。</p>\r\n<p><strong>将字段很多的表分解成多个表</strong></p>\r\n<p>对于字段较多的表，如果有些字段的使用频率很低，可以将这些字段分离出来形成新表。</p>\r\n<p>因为当一个表的数据量很大时，会由于使用频率低的字段的存在而变慢。</p>\r\n<p><strong>增加中间表</strong></p>\r\n<p>对于需要经常联合查询的表，可以建立中间表以提高查询效率。</p>\r\n<p>通过建立中间表，将需要通过联合查询的数据插入到中间表中，然后将原来的联合查询改为对中间表的查询。</p>\r\n<p><strong>增加冗余字段</strong></p>\r\n<p>设计数据表时应尽量遵循范式理论的规约，尽可能的减少冗余字段，让数据库设计看起来精致、优雅。但是，合理的加入冗余字段可以提高查询速度。</p>\r\n<p>表的规范化程度越高，表和表之间的关系越多，需要连接查询的情况也就越多，性能也就越差。</p>\r\n<p><strong>注意：</strong></p>\r\n<p><strong>冗余字段的值在一个表中修改了，就要想办法在其他表中更新，否则就会导致数据不一致的问题。</strong></p>\r\n<h3><a name=\"t105\"></a><a name=\"t105\"></a><a id=\"MySQLcpu500_1702\"></a>MySQL数据库cpu飙升到500%的话他怎么处理？</h3>\r\n<p>当 cpu 飙升到 500%时，先用操作系统命令 top 命令观察是不是 mysqld 占用导致的，如果不是，找出占用高的进程，并进行相关处理。</p>\r\n<p>如果是 mysqld 造成的， show processlist，看看里面跑的 session 情况，是不是有消耗资源的 sql 在运行。找出消耗高的 sql，看看执行计划是否准确， index 是否缺失，或者实在是数据量太大造成。</p>\r\n<p>一般来说，肯定要 kill 掉这些线程(同时观察 cpu 使用率是否下降)，等进行相应的调整(比如说加索引、改 sql、改内存参数)之后，再重新跑这些 SQL。</p>\r\n<p>也有可能是每个 sql 消耗资源并不多，但是突然之间，有大量的 session 连进来导致 cpu 飙升，这种情况就需要跟应用一起来分析为何连接数会激增，再做出相应的调整，比如说限制连接数等</p>\r\n<h3><a name=\"t106\"></a><a name=\"t106\"></a><a id=\"CRUD_1714\"></a>大表怎么优化？某个表有近千万数据，CRUD比较慢，如何优化？分库分表了是怎么做的？分表分库了有什么问题？有用到中间件么？他们的原理知道么？</h3>\r\n<p>当MySQL单表记录数过大时，数据库的CRUD性能会明显下降，一些常见的优化措施如下：</p>\r\n<ol><li><strong>限定数据的范围：</strong> 务必禁止不带任何限制数据范围条件的查询语句。比如：我们当用户在查询订单历史的时候，我们可以控制在一个月的范围内。；</li><li><strong>读/写分离：</strong> 经典的数据库拆分方案，主库负责写，从库负责读；</li><li><strong>缓存：</strong> 使用MySQL的缓存，另外对重量级、更新少的数据可以考虑使用应用级别的缓存；</li></ol>\r\n<p>还有就是通过分库分表的方式进行优化，主要有垂直分表和水平分表</p>\r\n<ol><li> <p><strong>垂直分区：</strong></p> <p><strong>根据数据库里面数据表的相关性进行拆分。</strong> 例如，用户表中既有用户的登录信息又有用户的基本信息，可以将用户表拆分成两个单独的表，甚至放到单独的库做分库。</p> <p><strong>简单来说垂直拆分是指数据表列的拆分，把一张列比较多的表拆分为多张表。</strong> 如下图所示，这样来说大家应该就更容易理解了。</p> <p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC82LzE2LzE2NDA4NDM1NGJhMmUwZmQ?x-oss-process=image/format,png\" alt=\"img\"></p> <p><strong>垂直拆分的优点：</strong> 可以使得行数据变小，在查询时减少读取的Block数，减少I/O次数。此外，垂直分区可以简化表的结构，易于维护。</p> <p><strong>垂直拆分的缺点：</strong> 主键会出现冗余，需要管理冗余列，并会引起Join操作，可以通过在应用层进行Join来解决。此外，垂直分区会让事务变得更加复杂；</p> <h4><a id=\"_1740\"></a>垂直分表</h4> <p>把主键和一些列放在一个表，然后把主键和另外的列放在另一个表中</p> <p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X2pwZy90dVNhS2M2U2ZQcjh0NFBaVVFJVUszVHl0aWF3T0VRa2dFZnBCTm4xZkNtdEVhMkRaNTlISFNSaWN2SEIzeU43Yk5LY1hkc3NWZGFNb25TOEFKanY5cFdBLzY0MA?x-oss-process=image/format,png\" alt=\"img\"></p> <h5><a id=\"_1746\"></a>适用场景</h5>\r\n<ul><li>1、如果一个表中某些列常用，另外一些列不常用</li><li>2、可以使数据行变小，一个数据页能存储更多数据，查询时减少I/O次数</li></ul> <h5><a id=\"_1751\"></a>缺点</h5>\r\n<ul><li>有些分表的策略基于应用层的逻辑算法，一旦逻辑算法改变，整个分表逻辑都会改变，扩展性较差</li><li>对于应用层来说，逻辑算法增加开发成本</li><li>管理冗余列，查询所有数据需要join操作</li></ul> </li><li> <p><strong>水平分区：</strong></p> <p><strong>保持数据表结构不变，通过某种策略存储数据分片。这样每一片数据分散到不同的表或者库中，达到了分布式的目的。 水平拆分可以支撑非常大的数据量。</strong></p> <p>水平拆分是指数据表行的拆分，表的行数超过200万行时，就会变慢，这时可以把一张的表的数据拆成多张表来存放。举个例子：我们可以将用户信息表拆分成多个用户信息表，这样就可以避免单一表数据量过大对性能造成影响。</p> <p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC82LzE2LzE2NDA4NGI3ZTllNDIzZTM?x-oss-process=image/format,png\" alt=\"数据库水平拆分\"></p> <p>水品拆分可以支持非常大的数据量。需要注意的一点是:分表仅仅是解决了单一表数据过大的问题，但由于表的数据还是在同一台机器上，其实对于提升MySQL并发能力没有什么意义，所以 <strong>水平拆分最好分库</strong> 。</p> <p>水平拆分能够 <strong>支持非常大的数据量存储，应用端改造也少</strong>，但 <strong>分片事务难以解决</strong> ，跨界点Join性能较差，逻辑复杂。</p> <p>《Java工程师修炼之道》的作者推荐 <strong>尽量不要对数据进行分片，因为拆分会带来逻辑、部署、运维的各种复杂度</strong> ，一般的数据表在优化得当的情况下支撑千万以下的数据量是没有太大问题的。如果实在要分片，尽量选择客户端分片架构，这样可以减少一次和中间件的网络I/O。</p> <h4><a id=\"_1781\"></a>水平分表：</h4> <p>表很大，分割后可以降低在查询时需要读的数据和索引的页数，同时也降低了索引的层数，提高查询次数</p> <p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X2pwZy90dVNhS2M2U2ZQcjh0NFBaVVFJVUszVHl0aWF3T0VRa2dkQVpyU1Y3M2liMWZkRENYS2M3QUd6Wmhid3FjS0ZVWkpGWThwMFZkVXRPM3JNYzZ2eDFBdzVBLzY0MA?x-oss-process=image/format,png\" alt=\"img\"></p> <h5><a id=\"_1787\"></a>适用场景</h5>\r\n<ul><li>1、表中的数据本身就有独立性，例如表中分表记录各个地区的数据或者不同时期的数据，特别是有些数据常用，有些不常用。</li><li>2、需要把数据存放在多个介质上。</li></ul> <h5><a id=\"_1792\"></a>水平切分的缺点</h5>\r\n<ul><li>1、给应用增加复杂度，通常查询时需要多个表名，查询所有数据都需UNION操作</li><li>2、在许多数据库应用中，这种复杂度会超过它带来的优点，查询时会增加读一个索引层的磁盘次数</li></ul> <p><strong>下面补充一下数据库分片的两种常见方案：</strong></p>\r\n<ul><li><strong>客户端代理：</strong> <strong>分片逻辑在应用端，封装在jar包中，通过修改或者封装JDBC层来实现。</strong> 当当网的 <strong>Sharding-JDBC</strong> 、阿里的TDDL是两种比较常用的实现。</li><li><strong>中间件代理：</strong> <strong>在应用和数据中间加了一个代理层。分片逻辑统一维护在中间件服务中。</strong> 我们现在谈的 <strong>Mycat</strong> 、360的Atlas、网易的DDB等等都是这种架构的实现。</li></ul> </li></ol>\r\n<p><strong>分库分表后面临的问题</strong></p>\r\n<ul><li> <p><strong>事务支持</strong> 分库分表后，就成了分布式事务了。如果依赖数据库本身的分布式事务管理功能去执行事务，将付出高昂的性能代价； 如果由应用程序去协助控制，形成程序逻辑上的事务，又会造成编程方面的负担。</p> </li><li> <p><strong>跨库join</strong></p> <p>只要是进行切分，跨节点Join的问题是不可避免的。但是良好的设计和切分却可以减少此类情况的发生。解决这一问题的普遍做法是分两次查询实现。在第一次查询的结果集中找出关联数据的id,根据这些id发起第二次请求得到关联数据。 分库分表方案产品</p> </li><li> <p><strong>跨节点的count,order by,group by以及聚合函数问题</strong> 这些是一类问题，因为它们都需要基于全部数据集合进行计算。多数的代理都不会自动处理合并工作。解决方案：与解决跨节点join问题的类似，分别在各个节点上得到结果后在应用程序端进行合并。和join不同的是每个结点的查询可以并行执行，因此很多时候它的速度要比单一大表快很多。但如果结果集很大，对应用程序内存的消耗是一个问题。</p> </li><li> <p><strong>数据迁移，容量规划，扩容等问题</strong> 来自淘宝综合业务平台团队，它利用对2的倍数取余具有向前兼容的特性（如对4取余得1的数对2取余也是1）来分配数据，避免了行级别的数据迁移，但是依然需要进行表级别的迁移，同时对扩容规模和分表数量都有限制。总得来说，这些方案都不是十分的理想，多多少少都存在一些缺点，这也从一个侧面反映出了Sharding扩容的难度。</p> </li><li> <p><strong>ID问题</strong></p> </li><li> <p>一旦数据库被切分到多个物理结点上，我们将不能再依赖数据库自身的主键生成机制。一方面，某个分区数据库自生成的ID无法保证在全局上是唯一的；另一方面，应用程序在插入数据之前需要先获得ID,以便进行SQL路由. 一些常见的主键生成策略</p> </li></ul>\r\n<p><strong>UUID</strong> 使用UUID作主键是最简单的方案，但是缺点也是非常明显的。由于UUID非常的长，除占用大量存储空间外，最主要的问题是在索引上，在建立索引和基于索引进行查询时都存在性能问题。 <strong>Twitter的分布式自增ID算法Snowflake</strong> 在分布式系统中，需要生成全局UID的场合还是比较多的，twitter的snowflake解决了这种需求，实现也还是很简单的，除去配置信息，核心代码就是毫秒级时间41位 机器ID 10位 毫秒内序列12位。</p>\r\n<ul><li> <p>跨分片的排序分页</p> <p>般来讲，分页时需要按照指定字段进行排序。当排序字段就是分片字段的时候，我们通过分片规则可以比较容易定位到指定的分片，而当排序字段非分片字段的时候，情况就会变得比较复杂了。为了最终结果的准确性，我们需要在不同的分片节点中将数据进行排序并返回，并将不同分片返回的结果集进行汇总和再次排序，最后再返回给用户。如下图所示：</p> <p><img src=\"https://img-blog.csdnimg.cn/20200310170753848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p> </li></ul>\r\n<h3><a name=\"t107\"></a><a name=\"t107\"></a><a id=\"MySQL_1832\"></a>MySQL的复制原理以及流程</h3>\r\n<p>主从复制：将主数据库中的DDL和DML操作通过二进制日志（BINLOG）传输到从数据库上，然后将这些日志重新执行（重做）；从而使得从数据库的数据与主数据库保持一致。</p>\r\n<p><strong>主从复制的作用</strong></p>\r\n<ol><li>主数据库出现问题，可以切换到从数据库。</li><li>可以进行数据库层面的读写分离。</li><li>可以在从数据库上进行日常备份。</li></ol>\r\n<p><strong>MySQL主从复制解决的问题</strong></p>\r\n<ul><li>数据分布：随意开始或停止复制，并在不同地理位置分布数据备份</li><li>负载均衡：降低单个服务器的压力</li><li>高可用和故障切换：帮助应用程序避免单点失败</li><li>升级测试：可以用更高版本的MySQL作为从库</li></ul>\r\n<p><strong>MySQL主从复制工作原理</strong></p>\r\n<ul><li>在主库上把数据更高记录到二进制日志</li><li>从库将主库的日志复制到自己的中继日志</li><li>从库读取中继日志的事件，将其重放到从库数据中</li></ul>\r\n<p><strong>基本原理流程，3个线程以及之间的关联</strong></p>\r\n<p><strong>主</strong>：binlog线程——记录下所有改变了数据库数据的语句，放进master上的binlog中；</p>\r\n<p><strong>从</strong>：io线程——在使用start slave 之后，负责从master上拉取 binlog 内容，放进自己的relay log中；</p>\r\n<p><strong>从</strong>：sql执行线程——执行relay log中的语句；</p>\r\n<p><strong>复制过程</strong></p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC85LzIxLzE2NWZiNjgzMjIyMDViMmU?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>Binary log：主数据库的二进制日志</p>\r\n<p>Relay log：从服务器的中继日志</p>\r\n<p>第一步：master在每个事务更新数据完成之前，将该操作记录串行地写入到binlog文件中。</p>\r\n<p>第二步：salve开启一个I/O Thread，该线程在master打开一个普通连接，主要工作是binlog dump process。如果读取的进度已经跟上了master，就进入睡眠状态并等待master产生新的事件。I/O线程最终的目的是将这些事件写入到中继日志中。</p>\r\n<p>第三步：SQL Thread会读取中继日志，并顺序执行该日志中的SQL事件，从而与主数据库中的数据保持一致。</p>\r\n<h3><a name=\"t108\"></a><a name=\"t108\"></a><a id=\"_1879\"></a>读写分离有哪些解决方案？</h3>\r\n<p>读写分离是依赖于主从复制，而主从复制又是为读写分离服务的。因为主从复制要求<code>slave</code>不能写只能读（如果对<code>slave</code>执行写操作，那么<code>show slave status</code>将会呈现<code>Slave_SQL_Running=NO</code>，此时你需要按照前面提到的手动同步一下<code>slave</code>）。</p>\r\n<p><strong>方案一</strong></p>\r\n<p>使用mysql-proxy代理</p>\r\n<p>优点：直接实现读写分离和负载均衡，不用修改代码，master和slave用一样的帐号，mysql官方不建议实际生产中使用</p>\r\n<p>缺点：降低性能， 不支持事务</p>\r\n<p><strong>方案二</strong></p>\r\n<p>使用AbstractRoutingDataSource+aop+annotation在dao层决定数据源。<br> 如果采用了mybatis， 可以将读写分离放在ORM层，比如mybatis可以通过mybatis plugin拦截sql语句，所有的insert/update/delete都访问master库，所有的select 都访问salve库，这样对于dao层都是透明。 plugin实现时可以通过注解或者分析语句是读写方法来选定主从库。不过这样依然有一个问题， 也就是不支持事务， 所以我们还需要重写一下DataSourceTransactionManager， 将read-only的事务扔进读库， 其余的有读有写的扔进写库。</p>\r\n<p><strong>方案三</strong></p>\r\n<p>使用AbstractRoutingDataSource+aop+annotation在service层决定数据源，可以支持事务.</p>\r\n<p>缺点：类内部方法通过this.xx()方式相互调用时，aop不会进行拦截，需进行特殊处理。</p>\r\n<h3><a name=\"t109\"></a><a name=\"t109\"></a><a id=\"mysqldumpxtranbackup_1904\"></a>备份计划，mysqldump以及xtranbackup的实现原理</h3>\r\n<p><strong>(1)备份计划</strong></p>\r\n<p>视库的大小来定，一般来说 100G 内的库，可以考虑使用 mysqldump 来做，因为 mysqldump更加轻巧灵活，备份时间选在业务低峰期，可以每天进行都进行全量备份(mysqldump 备份出来的文件比较小，压缩之后更小)。</p>\r\n<p>100G 以上的库，可以考虑用 xtranbackup 来做，备份速度明显要比 mysqldump 要快。一般是选择一周一个全备，其余每天进行增量备份，备份时间为业务低峰期。</p>\r\n<p><strong>(2)备份恢复时间</strong></p>\r\n<p>物理备份恢复快，逻辑备份恢复慢</p>\r\n<p>这里跟机器，尤其是硬盘的速率有关系，以下列举几个仅供参考</p>\r\n<p>20G的2分钟（mysqldump）</p>\r\n<p>80G的30分钟(mysqldump)</p>\r\n<p>111G的30分钟（mysqldump)</p>\r\n<p>288G的3小时（xtra)</p>\r\n<p>3T的4小时（xtra)</p>\r\n<p>逻辑导入时间一般是备份时间的5倍以上</p>\r\n<p><strong>(3)备份恢复失败如何处理</strong></p>\r\n<p>首先在恢复之前就应该做足准备工作，避免恢复的时候出错。比如说备份之后的有效性检查、权限检查、空间检查等。如果万一报错，再根据报错的提示来进行相应的调整。</p>\r\n<p><strong>(4)mysqldump和xtrabackup实现原理</strong></p>\r\n<p>mysqldump</p>\r\n<p>mysqldump 属于逻辑备份。加入–single-transaction 选项可以进行一致性备份。后台进程会先设置 session 的事务隔离级别为 RR(SET SESSION TRANSACTION ISOLATION LEVELREPEATABLE READ)，之后显式开启一个事务(START TRANSACTION /*!40100 WITH CONSISTENTSNAPSHOT */)，这样就保证了该事务里读到的数据都是事务事务时候的快照。之后再把表的数据读取出来。如果加上–master-data=1 的话，在刚开始的时候还会加一个数据库的读锁(FLUSH TABLES WITH READ LOCK),等开启事务后，再记录下数据库此时 binlog 的位置(showmaster status)，马上解锁，再读取表的数据。等所有的数据都已经导完，就可以结束事务</p>\r\n<p>Xtrabackup:</p>\r\n<p>xtrabackup 属于物理备份，直接拷贝表空间文件，同时不断扫描产生的 redo 日志并保存下来。最后完成 innodb 的备份后，会做一个 flush engine logs 的操作(老版本在有 bug，在5.6 上不做此操作会丢数据)，确保所有的 redo log 都已经落盘(涉及到事务的两阶段提交</p>\r\n<p>概念，因为 xtrabackup 并不拷贝 binlog，所以必须保证所有的 redo log 都落盘，否则可能会丢最后一组提交事务的数据)。这个时间点就是 innodb 完成备份的时间点，数据文件虽然不是一致性的，但是有这段时间的 redo 就可以让数据文件达到一致性(恢复的时候做的事</p>\r\n<p>情)。然后还需要 flush tables with read lock，把 myisam 等其他引擎的表给备份出来，备份完后解锁。这样就做到了完美的热备。</p>\r\n<h3><a name=\"t110\"></a><a name=\"t110\"></a><a id=\"_1950\"></a>数据表损坏的修复方式有哪些？</h3>\r\n<p>使用 myisamchk 来修复，具体步骤：</p>\r\n<ul><li>1）修复前将mysql服务停止。</li><li>2）打开命令行方式，然后进入到mysql的/bin目录。</li><li>3）执行myisamchk –recover 数据库所在路径/*.MYI</li></ul>\r\n<p>使用repair table 或者 OPTIMIZE table命令来修复，REPAIR TABLE table_name 修复表 OPTIMIZE TABLE table_name 优化表 REPAIR TABLE 用于修复被破坏的表。 OPTIMIZE TABLE 用于回收闲置的数据库空间，当表上的数据行被删除时，所占据的磁盘空间并没有立即被回收，使用了OPTIMIZE TABLE命令后这些空间将被回收，并且对磁盘上的数据行进行重排（注意：是磁盘上，而非数据库）</p>\r\n</div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://thinkwon.blog.csdn.net/article/details/104778621&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_mysql.vue?vue&type=template&id=ef582de0\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>Java基础知识面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"Java_37\"></a>Java概述</h2>\r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"_39\"></a>何为编程</h3>\r\n<p>编程就是让计算机为解决某个问题而使用某种程序设计语言编写程序代码，并最终得到结果的过程。</p>\r\n<p>为了使计算机能够理解人的意图，人类就必须要将需解决的问题的思路、方法、和手段通过计算机能够理解的形式告诉计算机，使得计算机能够根据人的指令一步一步去工作，完成某种特定的任务。这种人和计算机之间交流的过程就是编程。</p>\r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"Java_47\"></a>什么是Java</h3>\r\n<p>Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程 。</p>\r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"jdk15_53\"></a>jdk1.5之后的三大版本</h3>\r\n<ul><li>Java SE（J2SE，Java 2 Platform Standard Edition，标准版）<br> Java SE 以前称为 J2SE。它允许开发和部署在桌面、服务器、嵌入式环境和实时环境中使用的 Java 应用程序。Java SE 包含了支持 Java Web 服务开发的类，并为Java EE和Java ME提供基础。</li><li>Java EE（J2EE，Java 2 Platform Enterprise Edition，企业版）<br> Java EE 以前称为 J2EE。企业版本帮助开发和部署可移植、健壮、可伸缩且安全的服务器端Java 应用程序。Java EE 是在 Java SE 的基础上构建的，它提供 Web 服务、组件模型、管理和通信 API，可以用来实现企业级的面向服务体系结构（service-oriented architecture，SOA）和 Web2.0应用程序。2018年2月，Eclipse 宣布正式将 JavaEE 更名为 JakartaEE</li><li>Java ME（J2ME，Java 2 Platform Micro Edition，微型版）<br> Java ME 以前称为 J2ME。Java ME 为在移动设备和嵌入式设备（比如手机、PDA、电视机顶盒和打印机）上运行的应用程序提供一个健壮且灵活的环境。Java ME 包括灵活的用户界面、健壮的安全模型、许多内置的网络协议以及对可以动态下载的连网和离线应用程序的丰富支持。基于 Java ME 规范的应用程序只需编写一次，就可以用于许多设备，而且可以利用每个设备的本机功能。</li></ul>\r\n<h3><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"JVMJREJDK_64\"></a>JVM、JRE和JDK的关系</h3>\r\n<p>JVM<br> Java Virtual Machine是Java虚拟机，Java程序需要运行在虚拟机上，不同的平台有自己的虚拟机，因此Java语言可以实现跨平台。</p>\r\n<p>JRE<br> Java Runtime Environment包括Java虚拟机和Java程序所需的核心类库等。核心类库主要是java.lang包：包含了运行Java程序必不可少的系统类，如基本数据类型、基本数学函数、字符串处理、线程、异常处理类等，系统缺省加载这个包</p>\r\n<p>如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。</p>\r\n<p>JDK<br> Java Development Kit是提供给Java开发人员使用的，其中包含了Java的开发工具，也包括了JRE。所以安装了JDK，就无需再单独安装JRE了。其中的开发工具：编译工具(javac.exe)，打包工具(jar.exe)等</p>\r\n<p>JVM&amp;JRE&amp;JDK关系图</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvdXJXb24vaW1hZ2UvbWFzdGVyL0phdmElRTclQUUlODAlRTQlQkIlOEIvSlZNJkpSRSZKREslRTUlODUlQjMlRTclQjMlQkIlRTUlOUIlQkUucG5n?x-oss-process=image/format,png\" alt=\"\"></p>\r\n<h3><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"_84\"></a>什么是跨平台性？原理是什么</h3>\r\n<p>所谓跨平台性，是指java语言编写的程序，一次编译后，可以在多个系统平台上运行。</p>\r\n<p>实现原理：Java程序是通过java虚拟机在系统平台上运行的，只要该系统可以安装相应的java虚拟机，该系统就可以运行java程序。</p>\r\n<h3><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"Java_92\"></a>Java语言有哪些特点</h3>\r\n<p>简单易学（Java语言的语法与C语言和C++语言很接近）</p>\r\n<p>面向对象（封装，继承，多态）</p>\r\n<p>平台无关性（Java虚拟机实现平台无关性）</p>\r\n<p>支持网络编程并且很方便（Java语言诞生本身就是为简化网络编程设计的）</p>\r\n<p>支持多线程（多线程机制使应用程序在同一时间并行执行多项任）</p>\r\n<p>健壮性（Java语言的强类型机制、异常处理、垃圾的自动收集等）</p>\r\n<p>安全性</p>\r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"_110\"></a>什么是字节码？采用字节码的最大好处是什么</h3>\r\n<p><strong>字节码</strong>：Java源代码经过虚拟机编译器编译后产生的文件（即扩展为.class的文件），它不面向任何特定的处理器，只面向虚拟机。</p>\r\n<p><strong>采用字节码的好处</strong>：</p>\r\n<p>Java语言通过字节码的方式，在一定程度上解决了传统解释型语言执行效率低的问题，同时又保留了解释型语言可移植的特点。所以Java程序运行时比较高效，而且，由于字节码并不专对一种特定的机器，因此，Java程序无须重新编译便可在多种不同的计算机上运行。</p>\r\n<p><strong>先看下java中的编译器和解释器</strong>：</p>\r\n<p>Java中引入了虚拟机的概念，即在机器和编译程序之间加入了一层抽象的虚拟机器。这台虚拟的机器在任何平台上都提供给编译程序一个的共同的接口。编译程序只需要面向虚拟机，生成虚拟机能够理解的代码，然后由解释器来将虚拟机代码转换为特定系统的机器码执行。在Java中，这种供虚拟机理解的代码叫做字节码（即扩展为.class的文件），它不面向任何特定的处理器，只面向虚拟机。每一种平台的解释器是不同的，但是实现的虚拟机是相同的。Java源程序经过编译器编译后变成字节码，字节码由虚拟机解释执行，虚拟机将每一条要执行的字节码送给解释器，解释器将其翻译成特定机器上的机器码，然后在特定的机器上运行，这就是上面提到的Java的特点的编译与解释并存的解释。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Java源代码<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>编译器<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>jvm可执行的Java字节码<span class=\"token punctuation\">(</span>即虚拟指令<span class=\"token punctuation\">)</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>jvm<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>jvm中解释器<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>机器可执行的二进制机器码<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>程序运行。\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"Java_128\"></a>什么是Java程序的主类？应用程序和小程序的主类有何不同？</h3>\r\n<p>一个程序中可以有多个类，但只能有一个类是主类。在Java应用程序中，这个主类是指包含main()方法的类。而在Java小程序中，这个主类是一个继承自系统类JApplet或Applet的子类。应用程序的主类不一定要求是public类，但小程序的主类要求必须是public类。主类是Java程序执行的入口点。</p>\r\n<h3><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"Java_134\"></a>Java应用程序与小程序之间有那些差别？</h3>\r\n<p>简单说应用程序是从主线程启动(也就是main()方法)。applet小程序没有main方法，主要是嵌在浏览器页面上运行(调用init()线程或者run()来启动)，嵌入浏览器这点跟flash的小游戏类似。</p>\r\n<h3><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"JavaC_140\"></a>Java和C++的区别</h3>\r\n<p>我知道很多人没学过C++，但是面试官就是没事喜欢拿咱们Java和C++比呀！没办法！！！就算没学过C++，也要记下来！</p>\r\n<ul><li>都是面向对象的语言，都支持封装、继承和多态</li><li>Java不提供指针来直接访问内存，程序内存更加安全</li><li>Java的类是单继承的，C++支持多重继承；虽然Java的类不可以多继承，但是接口可以多继承。</li><li>Java有自动内存管理机制，不需要程序员手动释放无用内存</li></ul>\r\n<h3><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"Oracle_JDK__OpenJDK__151\"></a>Oracle JDK 和 OpenJDK 的对比</h3>\r\n<ol><li> <p>Oracle JDK版本将每三年发布一次，而OpenJDK版本每三个月发布一次；</p> </li><li> <p>OpenJDK 是一个参考模型并且是完全开源的，而Oracle JDK是OpenJDK的一个实现，并不是完全开源的；</p> </li><li> <p>Oracle JDK 比 OpenJDK 更稳定。OpenJDK和Oracle JDK的代码几乎相同，但Oracle JDK有更多的类和一些错误修复。因此，如果您想开发企业/商业软件，我建议您选择Oracle JDK，因为它经过了彻底的测试和稳定。某些情况下，有些人提到在使用OpenJDK 可能会遇到了许多应用程序崩溃的问题，但是，只需切换到Oracle JDK就可以解决问题；</p> </li><li> <p>在响应性和JVM性能方面，Oracle JDK与OpenJDK相比提供了更好的性能；</p> </li><li> <p>Oracle JDK不会为即将发布的版本提供长期支持，用户每次都必须通过更新到最新版本获得支持来获取最新版本；</p> </li><li> <p>Oracle JDK根据二进制代码许可协议获得许可，而OpenJDK根据GPL v2许可获得许可。</p> </li></ol>\r\n<h2><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"_167\"></a>基础语法</h2>\r\n<h3><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"_169\"></a>数据类型</h3>\r\n<h4><a id=\"Java_171\"></a>Java有哪些数据类型</h4>\r\n<p><strong>定义</strong>：Java语言是强类型语言，对于每一种数据都定义了明确的具体的数据类型，在内存中分配了不同大小的内存空间。</p>\r\n<p><strong>分类</strong></p>\r\n<ul><li>基本数据类型\r\n<ul><li>数值型\r\n<ul><li>整数类型(byte,short,int,long)</li><li>浮点类型(float,double)</li></ul> </li><li>字符型(char)</li><li>布尔型(boolean)</li></ul> </li><li>引用数据类型\r\n<ul><li>类(class)</li><li>接口(interface)</li><li>数组([])</li></ul> </li></ul>\r\n<p><strong>Java基本数据类型图</strong></p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvdXJXb24vaW1hZ2UvbWFzdGVyL0phdmElRTUlOUYlQkElRTclQTElODAlRTglQUYlQUQlRTYlQjMlOTUvSmF2YSVFNSU5RiVCQSVFNiU5QyVBQyVFNiU5NSVCMCVFNiU4RCVBRSVFNyVCMSVCQiVFNSU5RSU4Qi5wbmc?x-oss-process=image/format,png\" alt=\"\"></p>\r\n<h4><a id=\"switch__byte__long__String__194\"></a>switch 是否能作用在 byte 上，是否能作用在 long 上，是否能作用在 String 上</h4>\r\n<p>在 Java 5 以前，switch(expr)中，expr 只能是 byte、short、char、int。从 Java5 开始，Java 中引入了枚举类型，expr 也可以是 enum 类型，从 Java 7 开始，expr 还可以是字符串（String），但是长整型（long）在目前所有的版本中都是不可以的。</p>\r\n<h4><a id=\"_2__8_200\"></a>用最有效率的方法计算 2 乘以 8</h4>\r\n<p>2 &lt;&lt; 3（左移 3 位相当于乘以 2 的 3 次方，右移 3 位相当于除以 2 的 3 次方）。</p>\r\n<h4><a id=\"Mathround115_Mathround115_206\"></a>Math.round(11.5) 等于多少？Math.round(-11.5)等于多少</h4>\r\n<p>Math.round(11.5)的返回值是 12，Math.round(-11.5)的返回值是-11。四舍五入的原理是在参数上加 0.5 然后进行下取整。</p>\r\n<h4><a id=\"float_f34_212\"></a>float f=3.4;是否正确</h4>\r\n<p>不正确。3.4 是双精度数，将双精度型（double）赋值给浮点型（float）属于下转型（down-casting，也称为窄化）会造成精度损失，因此需要强制类型转换float f =(float)3.4; 或者写成 float f =3.4F;。</p>\r\n<h4><a id=\"short_s1__1_s1__s1__1short_s1__1_s1__1_218\"></a>short s1 = 1; s1 = s1 + 1;有错吗?short s1 = 1; s1 += 1;有错吗</h4>\r\n<p>对于 short s1 = 1; s1 = s1 + 1;由于 1 是 int 类型，因此 s1+1 运算结果也是 int型，需要强制转换类型才能赋值给 short 型。</p>\r\n<p>而 short s1 = 1; s1 += 1;可以正确编译，因为 s1+= 1;相当于 s1 = (short(s1 + 1);其中有隐含的强制类型转换。</p>\r\n<h3><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"_226\"></a>编码</h3>\r\n<h4><a id=\"Java_228\"></a>Java语言采用何种编码方案？有何特点？</h4>\r\n<p>Java语言采用Unicode编码标准，Unicode（标准码），它为每个字符制订了一个唯一的数值，因此在任何的语言，平台，程序都可以放心的使用。</p>\r\n<h3><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"_234\"></a>注释</h3>\r\n<h4><a id=\"Java_236\"></a>什么Java注释</h4>\r\n<p><strong>定义</strong>：用于解释说明程序的文字</p>\r\n<p><strong>分类</strong></p>\r\n<ul><li>单行注释<br> 格式： // 注释文字</li><li>多行注释<br> 格式： /* 注释文字 */</li><li>文档注释<br> 格式：/** 注释文字 */</li></ul>\r\n<p><strong>作用</strong></p>\r\n<p>在程序中，尤其是复杂的程序中，适当地加入注释可以增加程序的可读性，有利于程序的修改、调试和交流。注释的内容在程序编译的时候会被忽视，不会产生目标代码，注释的部分不会对程序的执行结果产生任何影响。</p>\r\n<p>注意事项：多行和文档注释都不能嵌套使用。</p>\r\n<h3><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"_259\"></a>访问修饰符</h3>\r\n<h4><a id=\"_publicprivateprotected_261\"></a>访问修饰符 public,private,protected,以及不写（默认）时的区别</h4>\r\n<p><strong>定义</strong>：Java中，可以使用访问修饰符来保护对类、变量、方法和构造方法的访问。Java 支持 4 种不同的访问权限。</p>\r\n<p><strong>分类</strong></p>\r\n<p>private : 在同一类内可见。使用对象：变量、方法。 注意：不能修饰类（外部类）<br> default (即缺省，什么也不写，不使用任何关键字）: 在同一包内可见，不使用任何修饰符。使用对象：类、接口、变量、方法。<br> protected : 对同一包内的类和所有子类可见。使用对象：变量、方法。 注意：不能修饰类（外部类）。<br> public : 对所有类可见。使用对象：类、接口、变量、方法</p>\r\n<p><strong>访问修饰符图</strong></p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvdXJXb24vaW1hZ2UvbWFzdGVyL0phdmElRTUlOUYlQkElRTclQTElODAlRTglQUYlQUQlRTYlQjMlOTUvSmF2YSVFOCVBRSVCRiVFOSU5NyVBRSVFNCVCRiVBRSVFOSVBNSVCMCVFNyVBQyVBNi5wbmc?x-oss-process=image/format,png\" alt=\"\"></p>\r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"_278\"></a>运算符</h3>\r\n<h4><a id=\"_280\"></a>&amp;和&amp;&amp;的区别</h4>\r\n<p>&amp;运算符有两种用法：(1)按位与；(2)逻辑与。</p>\r\n<p>&amp;&amp;运算符是短路与运算。逻辑与跟短路与的差别是非常巨大的，虽然二者都要求运算符左右两端的布尔值都是true 整个表达式的值才是 true。&amp;&amp;之所以称为短路运算，是因为如果&amp;&amp;左边的表达式的值是 false，右边的表达式会被直接短路掉，不会进行运算。</p>\r\n<p>注意：逻辑或运算符（|）和短路或运算符（||）的差别也是如此。</p>\r\n<h3><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"_290\"></a>关键字</h3>\r\n<h4><a id=\"Java__goto_292\"></a>Java 有没有 goto</h4>\r\n<p>goto 是 Java 中的保留字，在目前版本的 Java 中没有使用。</p>\r\n<h4><a id=\"final__298\"></a>final 有什么用？</h4>\r\n<p>用于修饰类、属性和方法；</p>\r\n<ul><li>被final修饰的类不可以被继承</li><li>被final修饰的方法不可以被重写</li><li>被final修饰的变量不可以被改变，被final修饰不可变的是变量的引用，而不是引用指向的内容，引用指向的内容是可以改变的</li></ul>\r\n<h4><a id=\"final_finally_finalize_308\"></a>final finally finalize区别</h4>\r\n<ul><li>final可以修饰类、变量、方法，修饰类表示该类不能被继承、修饰方法表示该方法不能被重写、修饰变量表<br> 示该变量是一个常量不能被重新赋值。</li><li>finally一般作用在try-catch代码块中，在处理异常的时候，通常我们将一定要执行的代码方法finally代码块<br> 中，表示不管是否出现异常，该代码块都会执行，一般用来存放一些关闭资源的代码。</li><li>finalize是一个方法，属于Object类的一个方法，而Object类是所有类的父类，该方法一般由垃圾回收器来调<br> 用，当我们调用System.gc() 方法的时候，由垃圾回收器调用finalize()，回收垃圾，一个对象是否可回收的<br> 最后判断。</li></ul>\r\n<h4><a id=\"this_320\"></a>this关键字的用法</h4>\r\n<p>this是自身的一个对象，代表对象本身，可以理解为：指向对象本身的一个指针。</p>\r\n<p>this的用法在java中大体可以分为3种：</p>\r\n<p>1.普通的直接引用，this相当于是指向当前对象本身。</p>\r\n<p>2.形参与成员名字重名，用this来区分：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span>String name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>3.引用本类的构造函数</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">private</span> String name<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span>String name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span>String name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li></ul></pre>\r\n<h4><a id=\"super_359\"></a>super关键字的用法</h4>\r\n<p>super可以理解为是指向自己超（父）类对象的一个指针，而这个超类指的是离自己最近的一个父类。</p>\r\n<p>super也有三种用法：</p>\r\n<p>1.普通的直接引用</p>\r\n<p>与this类似，super相当于是指向当前对象的父类的引用，这样就可以用super.xxx来引用父类的成员。</p>\r\n<p>2.子类中的成员变量或方法与父类中的成员变量或方法同名时，用super进行区分</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">protected</span> String name<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span>String name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">private</span> String name<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">Student</span><span class=\"token punctuation\">(</span>String name<span class=\"token punctuation\">,</span> String name1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name1<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//Child</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//Father</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n       Student s1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Father\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Child\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n       s1<span class=\"token punctuation\">.</span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li></ul></pre>\r\n<p>3.引用父类构造函数</p>\r\n<p>3、引用父类构造函数</p>\r\n<ul><li>super（参数）：调用父类中的某一个构造函数（应该为构造函数中的第一条语句）。</li><li>this（参数）：调用本类中另一种形式的构造函数（应该为构造函数中的第一条语句）。</li></ul>\r\n<h4><a id=\"thissuper_414\"></a>this与super的区别</h4>\r\n<ul><li>super:　它引用当前对象的直接父类中的成员（用来访问直接父类中被隐藏的父类中成员数据或函数，基类与派生类中有相同成员定义时如：super.变量名 super.成员函数据名（实参）</li><li>this：它代表当前对象名（在程序中易产生二义性之处，应使用this来指明当前对象；如果函数的形参与类中的成员数据同名，这时需用this来指明成员变量名）</li><li>super()和this()类似,区别是，super()在子类中调用父类的构造方法，this()在本类内调用本类的其它构造方法。</li><li>super()和this()均需放在构造方法内第一行。</li><li>尽管可以用this调用一个构造器，但却不能调用两个。</li><li>this和super不能同时出现在一个构造函数里面，因为this必然会调用其它的构造函数，其它的构造函数必然也会有super语句的存在，所以在同一个构造函数里面有相同的语句，就失去了语句的意义，编译器也不会通过。</li><li>this()和super()都指的是对象，所以，均不可以在static环境中使用。包括：static变量,static方法，static语句块。</li><li>从本质上讲，this是一个指向本对象的指针, 然而super是一个Java关键字。</li></ul>\r\n<h4><a id=\"static_427\"></a>static存在的主要意义</h4>\r\n<p>static的主要意义是在于创建独立于具体对象的域变量或者方法。<strong>以致于即使没有创建对象，也能使用属性和调用方法</strong>！</p>\r\n<p>static关键字还有一个比较关键的作用就是 <strong>用来形成静态代码块以优化程序性能</strong>。static块可以置于类中的任何地方，类中可以有多个static块。在类初次被加载的时候，会按照static块的顺序来执行每个static块，并且只会执行一次。</p>\r\n<p>为什么说static块可以用来优化程序性能，是因为它的特性:只会在类加载的时候执行一次。因此，很多时候会将一些只需要进行一次的初始化操作都放在static代码块中进行。</p>\r\n<h4><a id=\"static_437\"></a>static的独特之处</h4>\r\n<p>1、被static修饰的变量或者方法是独立于该类的任何对象，也就是说，这些变量和方法<strong>不属于任何一个实例对象，而是被类的实例对象所共享</strong>。</p>\r\n<blockquote>\r\n<p>怎么理解 “被类的实例对象所共享” 这句话呢？就是说，一个类的静态成员，它是属于大伙的【大伙指的是这个类的多个对象实例，我们都知道一个类可以创建多个实例！】，所有的类对象共享的，不像成员变量是自个的【自个指的是这个类的单个实例对象】…我觉得我已经讲的很通俗了，你明白了咩？</p>\r\n</blockquote>\r\n<p>2、在该类被第一次加载的时候，就会去加载被static修饰的部分，而且只在类第一次使用时加载并进行初始化，注意这是第一次用就要初始化，后面根据需要是可以再次赋值的。</p>\r\n<p>3、static变量值在类加载的时候分配空间，以后创建类对象的时候不会重新分配。赋值的话，是可以任意赋值的！</p>\r\n<p>4、被static修饰的变量或者方法是优先于对象存在的，也就是说当一个类加载完毕之后，即便没有创建对象，也可以去访问。</p>\r\n<h4><a id=\"static_451\"></a>static应用场景</h4>\r\n<p>因为static是被类的实例对象所共享，因此如果<strong>某个成员变量是被所有对象所共享的，那么这个成员变量就应该定义为静态变量</strong>。</p>\r\n<p>因此比较常见的static应用场景有：</p>\r\n<blockquote>\r\n<p>1、修饰成员变量 2、修饰成员方法 3、静态代码块 4、修饰类【只能修饰内部类也就是静态内部类】 5、静态导包</p>\r\n</blockquote>\r\n<h4><a id=\"static_461\"></a>static注意事项</h4>\r\n<p>1、静态只能访问静态。 2、非静态既可以访问非静态的，也可以访问静态的。</p>\r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"_467\"></a>流程控制语句</h3>\r\n<h4><a id=\"break_continue_return__469\"></a>break ,continue ,return 的区别及作用</h4>\r\n<p>break 跳出总上一层循环，不再执行循环(结束当前的循环体)</p>\r\n<p>continue 跳出本次循环，继续执行下次循环(结束正在执行的循环 进入下一个循环条件)</p>\r\n<p>return 程序返回，不再执行下面的代码(结束当前的方法 直接返回)</p>\r\n<h4><a id=\"_Java__479\"></a>在 Java 中，如何跳出当前的多重嵌套循环</h4>\r\n<p>在Java中，要想跳出多重循环，可以在外面的循环语句前定义一个标号，然后在里层循环体的代码中使用带有标号的break 语句，即可跳出外层循环。例如：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    ok<span class=\"token operator\">:</span>\r\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i=\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\",j=\"</span> <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token keyword\">break</span> ok<span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li></ul></pre>\r\n<h2><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"_502\"></a>面向对象</h2>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"_504\"></a>面向对象概述</h3>\r\n<h4><a id=\"_506\"></a>面向对象和面向过程的区别</h4>\r\n<p><strong>面向过程</strong>：</p>\r\n<p>优点：性能比面向对象高，因为类调用时需要实例化，开销比较大，比较消耗资源;比如单片机、嵌入式开发、Linux/Unix等一般采用面向过程开发，性能是最重要的因素。</p>\r\n<p>缺点：没有面向对象易维护、易复用、易扩展</p>\r\n<p><strong>面向对象</strong>：</p>\r\n<p>优点：易维护、易复用、易扩展，由于面向对象有封装、继承、多态性的特性，可以设计出低耦合的系统，使系统更加灵活、更加易于维护</p>\r\n<p>缺点：性能比面向过程低</p>\r\n<p><strong>面向过程是具体化的，流程化的，解决一个问题，你需要一步一步的分析，一步一步的实现。</strong></p>\r\n<p><strong>面向对象是模型化的，你只需抽象出一个类，这是一个封闭的盒子，在这里你拥有数据也拥有解决问题的方法。需要什么功能直接使用就可以了，不必去一步一步的实现，至于这个功能是如何实现的，管我们什么事？我们会用就可以了。</strong></p>\r\n<p>面向对象的底层其实还是面向过程，把面向过程抽象成类，然后封装，方便我们使用的就是面向对象了。</p>\r\n<h3><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"_530\"></a>面向对象三大特性</h3>\r\n<h4><a id=\"_532\"></a>面向对象的特征有哪些方面</h4>\r\n<p><strong>面向对象的特征主要有以下几个方面</strong>：</p>\r\n<p><strong>抽象</strong>：抽象是将一类对象的共同特征总结出来构造类的过程，包括数据抽象和行为抽象两方面。抽象只关注对象有哪些属性和行为，并不关注这些行为的细节是什么。</p>\r\n<p>封装</p>\r\n<p>封装把一个对象的属性私有化，同时提供一些可以被外界访问的属性的方法，如果属性不想被外界访问，我们大可不必提供方法给外界访问。但是如果一个类没有提供给外界访问的方法，那么这个类也没有什么意义了。</p>\r\n<p>继承</p>\r\n<p>继承是使用已存在的类的定义作为基础建立新类的技术，新类的定义可以增加新的数据或新的功能，也可以用父类的功能，但不能选择性地继承父类。通过使用继承我们能够非常方便地复用以前的代码。</p>\r\n<p>关于继承如下 3 点请记住：</p>\r\n<ol><li> <p>子类拥有父类非 private 的属性和方法。</p> </li><li> <p>子类可以拥有自己属性和方法，即子类可以对父类进行扩展。</p> </li><li> <p>子类可以用自己的方式实现父类的方法。（以后介绍）。</p> </li></ol>\r\n<p>多态</p>\r\n<p>所谓多态就是指程序中定义的引用变量所指向的具体类型和通过该引用变量发出的方法调用在编程时并不确定，而是在程序运行期间才确定，即一个引用变量到底会指向哪个类的实例对象，该引用变量发出的方法调用到底是哪个类中实现的方法，必须在由程序运行期间才能决定。</p>\r\n<p>在Java中有两种形式可以实现多态：继承（多个子类对同一方法的重写）和接口（实现接口并覆盖接口中同一方法）。</p>\r\n<p>其中Java 面向对象编程三大特性：封装 继承 多态</p>\r\n<p><strong>封装</strong>：隐藏对象的属性和实现细节，仅对外提供公共访问方式，将变化隔离，便于使用，提高复用性和安全性。</p>\r\n<p><strong>继承</strong>：继承是使用已存在的类的定义作为基础建立新类的技术，新类的定义可以增加新的数据或新的功能，也可以用父类的功能，但不能选择性地继承父类。通过使用继承可以提高代码复用性。继承是多态的前提。</p>\r\n<p><strong>关于继承如下 3 点请记住</strong>：</p>\r\n<ol><li> <p>子类拥有父类非 private 的属性和方法。</p> </li><li> <p>子类可以拥有自己属性和方法，即子类可以对父类进行扩展。</p> </li><li> <p>子类可以用自己的方式实现父类的方法。</p> </li></ol>\r\n<p><strong>多态性</strong>：父类或接口定义的引用变量可以指向子类或具体实现类的实例对象。提高了程序的拓展性。</p>\r\n<p>在Java中有两种形式可以实现多态：继承（多个子类对同一方法的重写）和接口（实现接口并覆盖接口中同一方法）。</p>\r\n<p>方法重载（overload）实现的是编译时的多态性（也称为前绑定），而方法重写（override）实现的是运行时的多态性（也称为后绑定）。</p>\r\n<p>一个引用变量到底会指向哪个类的实例对象，该引用变量发出的方法调用到底是哪个类中实现的方法，必须在由程序运行期间才能决定。运行时的多态是面向对象最精髓的东西，要实现多态需要做两件事：</p>\r\n<ul><li>方法重写（子类继承父类并重写父类中已有的或抽象的方法）；</li><li>对象造型（用父类型引用子类型对象，这样同样的引用调用同样的方法就会根据子类对象的不同而表现出不同的行为）。</li></ul>\r\n<h4><a id=\"Java_595\"></a>什么是多态机制？Java语言是如何实现多态的？</h4>\r\n<p>所谓多态就是指程序中定义的引用变量所指向的具体类型和通过该引用变量发出的方法调用在编程时并不确定，而是在程序运行期间才确定，即一个引用变量倒底会指向哪个类的实例对象，该引用变量发出的方法调用到底是哪个类中实现的方法，必须在由程序运行期间才能决定。因为在程序运行时才确定具体的类，这样，不用修改源程序代码，就可以让引用变量绑定到各种不同的类实现上，从而导致该引用调用的具体方法随之改变，即不修改程序代码就可以改变程序运行时所绑定的具体代码，让程序可以选择多个运行状态，这就是多态性。</p>\r\n<p>多态分为编译时多态和运行时多态。其中编辑时多态是静态的，主要是指方法的重载，它是根据参数列表的不同来区分不同的函数，通过编辑之后会变成两个不同的函数，在运行时谈不上多态。而运行时多态是动态的，它是通过动态绑定来实现的，也就是我们所说的多态性。</p>\r\n<p><strong>多态的实现</strong></p>\r\n<p>Java实现多态有三个必要条件：继承、重写、向上转型。</p>\r\n<p>继承：在多态中必须存在有继承关系的子类和父类。</p>\r\n<p>重写：子类对父类中某些方法进行重新定义，在调用这些方法时就会调用子类的方法。</p>\r\n<p>向上转型：在多态中需要将子类的引用赋给父类对象，只有这样该引用才能够具备技能调用父类的方法和子类的方法。</p>\r\n<p>只有满足了上述三个条件，我们才能够在同一个继承结构中使用统一的逻辑实现代码处理不同的对象，从而达到执行不同的行为。</p>\r\n<p>对于Java而言，它多态的实现机制遵循一个原则：当超类对象引用变量引用子类对象时，被引用对象的类型而不是引用变量的类型决定了调用谁的成员方法，但是这个被调用的方法必须是在超类中定义过的，也就是说被子类覆盖的方法。</p>\r\n<h4><a id=\"_621\"></a>面向对象五大基本原则是什么（可选）</h4>\r\n<ul><li>单一职责原则SRP(Single Responsibility Principle)<br> 类的功能要单一，不能包罗万象，跟杂货铺似的。</li><li>开放封闭原则OCP(Open－Close Principle)<br> 一个模块对于拓展是开放的，对于修改是封闭的，想要增加功能热烈欢迎，想要修改，哼，一万个不乐意。</li><li>里式替换原则LSP(the Liskov Substitution Principle LSP)<br> 子类可以替换父类出现在父类能够出现的任何地方。比如你能代表你爸去你姥姥家干活。哈哈~~</li><li>依赖倒置原则DIP(the Dependency Inversion Principle DIP)<br> 高层次的模块不应该依赖于低层次的模块，他们都应该依赖于抽象。抽象不应该依赖于具体实现，具体实现应该依赖于抽象。就是你出国要说你是中国人，而不能说你是哪个村子的。比如说中国人是抽象的，下面有具体的xx省，xx市，xx县。你要依赖的抽象是中国人，而不是你是xx村的。</li><li>接口分离原则ISP(the Interface Segregation Principle ISP)<br> 设计时采用多个与特定客户类有关的接口比采用一个通用的接口要好。就比如一个手机拥有打电话，看视频，玩游戏等功能，把这几个功能拆分成不同的接口，比在一个接口里要好的多。</li></ul>\r\n<h3><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"_636\"></a>类与接口</h3>\r\n<h4><a id=\"_638\"></a>抽象类和接口的对比</h4>\r\n<p>抽象类是用来捕捉子类的通用特性的。接口是抽象方法的集合。</p>\r\n<p>从设计层面来说，抽象类是对类的抽象，是一种模板设计，接口是行为的抽象，是一种行为的规范。</p>\r\n<p><strong>相同点</strong></p>\r\n<ul><li>接口和抽象类都不能实例化</li><li>都位于继承的顶端，用于被其他实现或继承</li><li>都包含抽象方法，其子类都必须覆写这些抽象方法</li></ul>\r\n<p><strong>不同点</strong></p>\r\n<div class=\"table-box\"><table><thead><tr><th>参数</th><th>抽象类</th><th>接口</th></tr></thead><tbody><tr><td>声明</td><td>抽象类使用abstract关键字声明</td><td>接口使用interface关键字声明</td></tr><tr><td>实现</td><td>子类使用extends关键字来继承抽象类。如果子类不是抽象类的话，它需要提供抽象类中所有声明的方法的实现</td><td>子类使用implements关键字来实现接口。它需要提供接口中所有声明的方法的实现</td></tr><tr><td>构造器</td><td>抽象类可以有构造器</td><td>接口不能有构造器</td></tr><tr><td>访问修饰符</td><td>抽象类中的方法可以是任意访问修饰符</td><td>接口方法默认修饰符是public。并且不允许定义为 private 或者 protected</td></tr><tr><td>多继承</td><td>一个类最多只能继承一个抽象类</td><td>一个类可以实现多个接口</td></tr><tr><td>字段声明</td><td>抽象类的字段声明可以是任意的</td><td>接口的字段默认都是 static 和 final 的</td></tr></tbody></table></div>\r\n<p><strong>备注</strong>：Java8中接口中引入默认方法和静态方法，以此来减少抽象类和接口之间的差异。</p>\r\n<p>现在，我们可以为接口提供默认实现的方法了，并且不用强制子类来实现它。</p>\r\n<p>接口和抽象类各有优缺点，在接口和抽象类的选择上，必须遵守这样一个原则：</p>\r\n<ul><li>行为模型应该总是通过接口而不是抽象类定义，所以通常是优先选用接口，尽量少用抽象类。</li><li>选择抽象类的时候通常是如下情况：需要定义子类的行为，又要为子类提供通用的功能。</li></ul>\r\n<h4><a id=\"_674\"></a>普通类和抽象类有哪些区别？</h4>\r\n<ul><li>普通类不能包含抽象方法，抽象类可以包含抽象方法。</li><li>抽象类不能直接实例化，普通类可以直接实例化。</li></ul>\r\n<h4><a id=\"_final__681\"></a>抽象类能使用 final 修饰吗？</h4>\r\n<p>不能，定义抽象类就是让其他类继承的，如果定义为 final 该类就不能被继承，这样彼此就会产生矛盾，所以 final 不能修饰抽象类</p>\r\n<h4><a id=\"_687\"></a>创建一个对象用什么关键字？对象实例与对象引用有何不同？</h4>\r\n<p>new关键字，new创建对象实例（对象实例在堆内存中），对象引用指向对象实例（对象引用存放在栈内存中）。一个对象引用可以指向0个或1个对象（一根绳子可以不系气球，也可以系一个气球）;一个对象可以有n个引用指向它（可以用n条绳子系住一个气球）</p>\r\n<h3><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"_693\"></a>变量与方法</h3>\r\n<h4><a id=\"_695\"></a>成员变量与局部变量的区别有哪些</h4>\r\n<p>变量：在程序执行的过程中，在某个范围内其值可以发生改变的量。从本质上讲，变量其实是内存中的一小块区域</p>\r\n<p>成员变量：方法外部，类内部定义的变量</p>\r\n<p>局部变量：类的方法中的变量。</p>\r\n<p>成员变量和局部变量的区别</p>\r\n<p><strong>作用域</strong></p>\r\n<p>成员变量：针对整个类有效。<br> 局部变量：只在某个范围内有效。(一般指的就是方法,语句体内)</p>\r\n<p><strong>存储位置</strong></p>\r\n<p>成员变量：随着对象的创建而存在，随着对象的消失而消失，存储在堆内存中。<br> 局部变量：在方法被调用，或者语句被执行的时候存在，存储在栈内存中。当方法调用完，或者语句结束后，就自动释放。</p>\r\n<p><strong>生命周期</strong></p>\r\n<p>成员变量：随着对象的创建而存在，随着对象的消失而消失<br> 局部变量：当方法调用完，或者语句结束后，就自动释放。</p>\r\n<p><strong>初始值</strong></p>\r\n<p>成员变量：有默认初始值。</p>\r\n<p>局部变量：没有默认初始值，使用前必须赋值。</p>\r\n<p>使用原则</p>\r\n<p>在使用变量时需要遵循的原则为：就近原则<br> 首先在局部范围找，有就使用；接着在成员位置找。</p>\r\n<h4><a id=\"Java_735\"></a>在Java中定义一个不做事且没有参数的构造方法的作用</h4>\r\n<p>Java程序在执行子类的构造方法之前，如果没有用super()来调用父类特定的构造方法，则会调用父类中“没有参数的构造方法”。因此，如果父类中只定义了有参数的构造方法，而在子类的构造方法中又没有用super()来调用父类中特定的构造方法，则编译时将发生错误，因为Java程序在父类中找不到没有参数的构造方法可供执行。解决办法是在父类里加上一个不做事且没有参数的构造方法。</p>\r\n<h4><a id=\"_741\"></a>在调用子类构造方法之前会先调用父类没有参数的构造方法，其目的是？</h4>\r\n<p>帮助子类做初始化工作。</p>\r\n<h4><a id=\"_747\"></a>一个类的构造方法的作用是什么？若一个类没有声明构造方法，改程序能正确执行吗？为什么？</h4>\r\n<p>主要作用是完成对类对象的初始化工作。可以执行。因为一个类即使没有声明构造方法也会有默认的不带参数的构造方法。</p>\r\n<h4><a id=\"_753\"></a>构造方法有哪些特性？</h4>\r\n<p>名字与类名相同；</p>\r\n<p>没有返回值，但不能用void声明构造函数；</p>\r\n<p>生成类的对象时自动执行，无需调用。</p>\r\n<h4><a id=\"_763\"></a>静态变量和实例变量区别</h4>\r\n<p>静态变量： 静态变量由于不属于任何实例对象，属于类的，所以在内存中只会有一份，在类的加载过程中，JVM只为静态变量分配一次内存空间。</p>\r\n<p>实例变量： 每次创建对象，都会为每个对象分配成员变量内存空间，实例变量是属于实例对象的，在内存中，创建几次对象，就有几份成员变量。</p>\r\n<h4><a id=\"_771\"></a>静态变量与普通变量区别</h4>\r\n<p>static变量也称作静态变量，静态变量和非静态变量的区别是：静态变量被所有的对象所共享，在内存中只有一个副本，它当且仅当在类初次加载时会被初始化。而非静态变量是对象所拥有的，在创建对象的时候被初始化，存在多个副本，各个对象拥有的副本互不影响。</p>\r\n<p>还有一点就是static成员变量的初始化顺序按照定义的顺序进行初始化。</p>\r\n<h4><a id=\"_779\"></a>静态方法和实例方法有何不同？</h4>\r\n<p>静态方法和实例方法的区别主要体现在两个方面：</p>\r\n<ol><li>在外部调用静态方法时，可以使用\"类名.方法名\"的方式，也可以使用\"对象名.方法名\"的方式。而实例方法只有后面这种方式。也就是说，调用静态方法可以无需创建对象。</li><li>静态方法在访问本类的成员时，只允许访问静态成员（即静态成员变量和静态方法），而不允许访问实例成员变量和实例方法；实例方法则无此限制</li></ol>\r\n<h4><a id=\"_788\"></a>在一个静态方法内调用一个非静态成员为什么是非法的？</h4>\r\n<p>由于静态方法可以不通过对象进行调用，因此在静态方法里，不能调用其他非静态变量，也不可以访问非静态变量成员。</p>\r\n<h4><a id=\"_794\"></a>什么是方法的返回值？返回值的作用是什么？</h4>\r\n<p>方法的返回值是指我们获取到的某个方法体中的代码执行后产生的结果！（前提是该方法可能产生结果）。返回值的作用:接收出结果，使得它可以用于其他的操作！</p>\r\n<h3><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"_800\"></a>内部类</h3>\r\n<h4><a id=\"_802\"></a>什么是内部类？</h4>\r\n<p>在Java中，可以将一个类的定义放在另外一个类的定义内部，这就是<strong>内部类</strong>。内部类本身就是类的一个属性，与其他属性定义方式一致。</p>\r\n<h4><a id=\"_808\"></a>内部类的分类有哪些</h4>\r\n<p>内部类可以分为四种：<strong>成员内部类、局部内部类、匿名内部类和静态内部类</strong>。</p>\r\n<h5><a id=\"_812\"></a>静态内部类</h5>\r\n<p>定义在类内部的静态类，就是静态内部类。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Outer</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> radius <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StaticInner</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"visit outer static  variable:\"</span> <span class=\"token operator\">+</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<p>静态内部类可以访问外部类所有的静态变量，而不可访问外部类的非静态变量；静态内部类的创建方式，<code>new 外部类.静态内部类()</code>，如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Outer<span class=\"token punctuation\">.</span>StaticInner inner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Outer<span class=\"token punctuation\">.</span>StaticInner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\ninner<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<h5><a id=\"_836\"></a>成员内部类</h5>\r\n<p>定义在类内部，成员位置上的非静态类，就是成员内部类。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Outer</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span>  <span class=\"token keyword\">int</span> radius <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\r\n\r\n     <span class=\"token keyword\">class</span> <span class=\"token class-name\">Inner</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"visit outer static  variable:\"</span> <span class=\"token operator\">+</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"visit outer   variable:\"</span> <span class=\"token operator\">+</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li></ul></pre>\r\n<p>成员内部类可以访问外部类所有的变量和方法，包括静态和非静态，私有和公有。成员内部类依赖于外部类的实例，它的创建方式<code>外部类实例.new 内部类()</code>，如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Outer outer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nOuter<span class=\"token punctuation\">.</span>Inner inner <span class=\"token operator\">=</span> outer<span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\ninner<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<h5><a id=\"_863\"></a>局部内部类</h5>\r\n<p>定义在方法中的内部类，就是局部内部类。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Outer</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span>  <span class=\"token keyword\">int</span> out_a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> STATIC_b <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testFunctionClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">int</span> inner_c <span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">class</span> <span class=\"token class-name\">Inner</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>out_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>STATIC_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>inner_c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        Inner  inner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        inner<span class=\"token punctuation\">.</span><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testStaticFunctionClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">int</span> d <span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">class</span> <span class=\"token class-name\">Inner</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token comment\">// System.out.println(out_a); 编译错误，定义在静态方法中的局部类不可以访问外部类的实例变量</span>\r\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>STATIC_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        Inner  inner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        inner<span class=\"token punctuation\">.</span><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li></ul></pre>\r\n<p>定义在实例方法中的局部类可以访问外部类的所有变量和方法，定义在静态方法中的局部类只能访问外部类的静态变量和方法。局部内部类的创建方式，在对应方法内，<code>new 内部类()</code>，如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"> <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testStaticFunctionClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Inner</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token punctuation\">}</span>\r\n    Inner  inner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n <span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<h5><a id=\"_910\"></a>匿名内部类</h5>\r\n<p>匿名内部类就是没有名字的内部类，日常开发中使用的比较多。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Outer</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Service</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"匿名内部类\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n <span class=\"token punctuation\">}</span>\r\n <span class=\"token comment\">//匿名内部类必须继承或实现一个已有的接口 </span>\r\n <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Service</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li></ul></pre>\r\n<p>除了没有名字，匿名内部类还有以下特点：</p>\r\n<ul><li>匿名内部类必须继承一个抽象类或者实现一个接口。</li><li>匿名内部类不能定义任何静态成员和静态方法。</li><li>当所在的方法的形参需要被匿名内部类使用时，必须声明为 final。</li><li>匿名内部类不能是抽象的，它必须要实现继承的类或者实现的接口的所有抽象方法。</li></ul>\r\n<p>匿名内部类创建方式：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">new</span> 类<span class=\"token operator\">/</span>接口<span class=\"token punctuation\">{<!-- --></span>\r\n  <span class=\"token comment\">//匿名内部类实现部分</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<h4><a id=\"_950\"></a>内部类的优点</h4>\r\n<p>我们为什么要使用内部类呢？因为它有以下优点：</p>\r\n<ul><li>一个内部类对象可以访问创建它的外部类对象的内容，包括私有数据！</li><li>内部类不为同一包的其他类所见，具有很好的封装性；</li><li>内部类有效实现了“多重继承”，优化 java 单继承的缺陷。</li><li>匿名内部类可以很方便的定义回调。</li></ul>\r\n<h4><a id=\"_961\"></a>内部类有哪些应用场景</h4>\r\n<ol><li>一些多算法场合</li><li>解决一些非面向对象的语句块。</li><li>适当使用内部类，使得代码更加灵活和富有扩展性。</li><li>当某个类除了它的外部类，不再被其他的类使用时。</li></ol>\r\n<h4><a id=\"final_970\"></a>局部内部类和匿名内部类访问局部变量的时候，为什么变量必须要加上final？</h4>\r\n<p>局部内部类和匿名内部类访问局部变量的时候，为什么变量必须要加上final呢？它内部原理是什么呢？</p>\r\n<p>先看这段代码：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Outer</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">void</span> <span class=\"token function\">outMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">class</span> <span class=\"token class-name\">Inner</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">void</span> <span class=\"token function\">innerMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li></ul></pre>\r\n<p>以上例子，为什么要加final呢？是因为<strong>生命周期不一致</strong>， 局部变量直接存储在栈中，当方法执行结束后，非final的局部变量就被销毁。而局部内部类对局部变量的引用依然存在，如果局部内部类要调用局部变量时，就会出错。加了final，可以确保局部内部类使用的变量与外层的局部变量区分开，解决了这个问题。</p>\r\n<h4><a id=\"_995\"></a>内部类相关，看程序说出运行结果</h4>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Outer</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Inner</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"局部变量：\"</span> <span class=\"token operator\">+</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"内部类变量：\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"外部类变量：\"</span> <span class=\"token operator\">+</span> Outer<span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        Outer<span class=\"token punctuation\">.</span>Inner in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        in<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li></ul></pre>\r\n<p>运行结果：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">局部变量：<span class=\"token number\">14</span>\r\n内部类变量：<span class=\"token number\">13</span>\r\n外部类变量：<span class=\"token number\">12</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<h3><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"_1029\"></a>重写与重载</h3>\r\n<h4><a id=\"constructoroverride_1031\"></a>构造器（constructor）是否可被重写（override）</h4>\r\n<p>构造器不能被继承，因此不能被重写，但可以被重载。</p>\r\n<h4><a id=\"OverloadOverride_1037\"></a>重载（Overload）和重写（Override）的区别。重载的方法能否根据返回类型进行区分？</h4>\r\n<p>方法的重载和重写都是实现多态的方式，区别在于前者实现的是编译时的多态性，而后者实现的是运行时的多态性。</p>\r\n<p>重载：发生在同一个类中，方法名相同参数列表不同（参数类型不同、个数不同、顺序不同），与方法返回值和访问修饰符无关，即重载的方法不能根据返回类型进行区分</p>\r\n<p>重写：发生在父子类中，方法名、参数列表必须相同，返回值小于等于父类，抛出的异常小于等于父类，访问修饰符大于等于父类（里氏代换原则）；如果父类方法访问修饰符为private则子类中就不是重写。</p>\r\n<h3><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"_1047\"></a>对象相等判断</h3>\r\n<h4><a id=\"__equals__1049\"></a>== 和 equals 的区别是什么</h4>\r\n<p><strong>==</strong> : 它的作用是判断两个对象的地址是不是相等。即，判断两个对象是不是同一个对象。(基本数据类型 == 比较的是值，引用数据类型 == 比较的是内存地址)</p>\r\n<p><strong>equals()</strong> : 它的作用也是判断两个对象是否相等。但它一般有两种使用情况：</p>\r\n<p>情况1：类没有覆盖 equals() 方法。则通过 equals() 比较该类的两个对象时，等价于通过“==”比较这两个对象。</p>\r\n<p>情况2：类覆盖了 equals() 方法。一般，我们都覆盖 equals() 方法来两个对象的内容相等；若它们的内容相等，则返回 true (即，认为这两个对象相等)。</p>\r\n<p><strong>举个例子：</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">test1</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        String a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ab\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// a 为一个引用</span>\r\n        String b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ab\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// b为另一个引用,对象的内容一样</span>\r\n        String aa <span class=\"token operator\">=</span> <span class=\"token string\">\"ab\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 放在常量池中</span>\r\n        String bb <span class=\"token operator\">=</span> <span class=\"token string\">\"ab\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 从常量池中查找</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aa <span class=\"token operator\">==</span> bb<span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aa==bb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// false，非同一对象</span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a==b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aEQb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">42</span> <span class=\"token operator\">==</span> <span class=\"token number\">42.0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">// true</span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li></ul></pre>\r\n<p><strong>说明：</strong></p>\r\n<ul><li>String中的equals方法是被重写过的，因为object的equals方法是比较的对象的内存地址，而String的equals方法比较的是对象的值。</li><li>当创建String类型的对象时，虚拟机会在常量池中查找有没有已经存在的值和要创建的值相同的对象，如果有就把它赋给当前引用。如果没有就在常量池中重新创建一个String对象。</li></ul>\r\n<h4><a id=\"hashCode__equals__1088\"></a>hashCode 与 equals (重要)</h4>\r\n<p>HashSet如何检查重复</p>\r\n<p>两个对象的 hashCode() 相同，则 equals() 也一定为 true，对吗？</p>\r\n<p>hashCode和equals方法的关系</p>\r\n<p>面试官可能会问你：“你重写过 hashcode 和 equals 么，为什么重写equals时必须重写hashCode方法？”</p>\r\n<p><strong>hashCode()介绍</strong></p>\r\n<p>hashCode() 的作用是获取哈希码，也称为散列码；它实际上是返回一个int整数。这个哈希码的作用是确定该对象在哈希表中的索引位置。hashCode() 定义在JDK的Object.java中，这就意味着Java中的任何类都包含有hashCode()函数。</p>\r\n<p>散列表存储的是键值对(key-value)，它的特点是：能根据“键”快速的检索出对应的“值”。这其中就利用到了散列码！（可以快速找到所需要的对象）</p>\r\n<p><strong>为什么要有 hashCode</strong></p>\r\n<p><strong>我们以“HashSet 如何检查重复”为例子来说明为什么要有 hashCode</strong>：</p>\r\n<p>当你把对象加入 HashSet 时，HashSet 会先计算对象的 hashcode 值来判断对象加入的位置，同时也会与其他已经加入的对象的 hashcode 值作比较，如果没有相符的hashcode，HashSet会假设对象没有重复出现。但是如果发现有相同 hashcode 值的对象，这时会调用 equals()方法来检查 hashcode 相等的对象是否真的相同。如果两者相同，HashSet 就不会让其加入操作成功。如果不同的话，就会重新散列到其他位置。（摘自我的Java启蒙书《Head first java》第二版）。这样我们就大大减少了 equals 的次数，相应就大大提高了执行速度。</p>\r\n<p><strong>hashCode()与equals()的相关规定</strong></p>\r\n<p>如果两个对象相等，则hashcode一定也是相同的</p>\r\n<p>两个对象相等，对两个对象分别调用equals方法都返回true</p>\r\n<p>两个对象有相同的hashcode值，它们也不一定是相等的</p>\r\n<p><strong>因此，equals 方法被覆盖过，则 hashCode 方法也必须被覆盖</strong></p>\r\n<p>hashCode() 的默认行为是对堆上的对象产生独特值。如果没有重写 hashCode()，则该 class 的两个对象无论如何都不会相等（即使这两个对象指向相同的数据）</p>\r\n<h4><a id=\"_1128\"></a>对象的相等与指向他们的引用相等，两者有什么不同？</h4>\r\n<p>对象的相等 比的是内存中存放的内容是否相等而 引用相等 比较的是他们指向的内存地址是否相等。</p>\r\n<h3><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"_1134\"></a>值传递</h3>\r\n<h4><a id=\"_1136\"></a>当一个对象被当作参数传递到一个方法后，此方法可改变这个对象的属性，并可返回变化后的结果，那么这里到底是值传递还是引用传递</h4>\r\n<p>是值传递。Java 语言的方法调用只支持参数的值传递。当一个对象实例作为一个参数被传递到方法中时，参数的值就是对该对象的引用。对象的属性可以在被调用过程中被改变，但对对象引用的改变是不会影响到调用者的</p>\r\n<h4><a id=\"_Java__1142\"></a>为什么 Java 中只有值传递</h4>\r\n<p>首先回顾一下在程序设计语言中有关将参数传递给方法（或函数）的一些专业术语。<strong>按值调用(call by value)表示方法接收的是调用者提供的值，而按引用调用（call by reference)表示方法接收的是调用者提供的变量地址。一个方法可以修改传递引用所对应的变量值，而不能修改传递值调用所对应的变量值。</strong> 它用来描述各种程序设计语言（不只是Java)中方法参数传递方式。</p>\r\n<p><strong>Java程序设计语言总是采用按值调用。也就是说，方法得到的是所有参数值的一个拷贝，也就是说，方法不能修改传递给它的任何参数变量的内容。</strong></p>\r\n<p><strong>下面通过 3 个例子来给大家说明</strong></p>\r\n<p>example 1</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num1 = \"</span> <span class=\"token operator\">+</span> num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num2 = \"</span> <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\r\n    a <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\r\n    b <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\r\n\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a = \"</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b = \"</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li></ul></pre>\r\n<p><strong>结果</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">a <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\r\nb <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\r\nnum1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\r\nnum2 <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p><strong>解析</strong>：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8xNDAyMzk3Mi00ZWQyZjQ0NTlmN2MyYzkwLmpwZw?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>在swap方法中，a、b的值进行交换，并不会影响到 num1、num2。因为，a、b中的值，只是从 num1、num2 的复制过来的。也就是说，a、b相当于num1、num2 的副本，副本的内容无论怎么修改，都不会影响到原件本身。</p>\r\n<p><strong>通过上面例子，我们已经知道了一个方法不能修改一个基本数据类型的参数，而对象引用作为参数就不一样，请看 example2.</strong></p>\r\n<p>example 2</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\">change</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// 将数组的第一个元素变为0</span>\r\n        array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li></ul></pre>\r\n<p><strong>结果</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-undefined has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">1\r\n0\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<p><strong>解析</strong>：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8xNDAyMzk3Mi1kYWI5Mzg5ZWRmMjIxNmIzLmpwZw?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>array 被初始化 arr 的拷贝也就是一个对象的引用，也就是说 array 和 arr 指向的时同一个数组对象。 因此，外部对引用对象的改变会反映到所对应的对象上。</p>\r\n<p><strong>通过 example2 我们已经看到，实现一个改变对象参数状态的方法并不是一件难事。理由很简单，方法得到的是对象引用的拷贝，对象引用及其他的拷贝同时引用同一个对象。</strong></p>\r\n<p><strong>很多程序设计语言（特别是，C++和Pascal)提供了两种参数传递的方式：值调用和引用调用。有些程序员（甚至本书的作者）认为Java程序设计语言对对象采用的是引用调用，实际上，这种理解是不对的。由于这种误解具有一定的普遍性，所以下面给出一个反例来详细地阐述一下这个问题。</strong></p>\r\n<p>example 3</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// TODO Auto-generated method stub</span>\r\n        Student s1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小张\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Student s2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小李\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Test<span class=\"token punctuation\">.</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s1:\"</span> <span class=\"token operator\">+</span> s1<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s2:\"</span> <span class=\"token operator\">+</span> s2<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>Student x<span class=\"token punctuation\">,</span> Student y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        Student temp <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\r\n        x <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\r\n        y <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x:\"</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"y:\"</span> <span class=\"token operator\">+</span> y<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li></ul></pre>\r\n<p><strong>结果</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-undefined has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">x:小李\r\ny:小张\r\ns1:小张\r\ns2:小李\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p><strong>解析</strong>：</p>\r\n<p>交换之前：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8xNDAyMzk3Mi03MmIwYzFmYjlmM2IwNzc2LmpwZw?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>交换之后：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8xNDAyMzk3Mi0zYWUzNzY4NGNiMzg2Njc4LmpwZw?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>通过上面两张图可以很清晰的看出： <strong>方法并没有改变存储在变量 s1 和 s2 中的对象引用。swap方法的参数x和y被初始化为两个对象引用的拷贝，这个方法交换的是这两个拷贝</strong></p>\r\n<p><strong>总结</strong></p>\r\n<p>Java程序设计语言对对象采用的不是引用调用，实际上，对象引用是按值传递的。</p>\r\n<p>下面再总结一下Java中方法参数的使用情况：</p>\r\n<ul><li>一个方法不能修改一个基本数据类型的参数（即数值型或布尔型》</li><li>一个方法可以改变一个对象参数的状态。</li><li>一个方法不能让对象参数引用一个新的对象。</li></ul>\r\n<h4><a id=\"_1288\"></a>值传递和引用传递有什么区别</h4>\r\n<p>值传递：指的是在方法调用时，传递的参数是按值的拷贝传递，传递的是值的拷贝，也就是说传递后就互不相关了。</p>\r\n<p>引用传递：指的是在方法调用时，传递的参数是按引用进行传递，其实传递的引用的地址，也就是变量所对应的内存空间的地址。传递的是值的引用，也就是说传递前和传递后都指向同一个引用（也就是同一个内存空间）。</p>\r\n<h3><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"Java_1296\"></a>Java包</h3>\r\n<h4><a id=\"JDK__1298\"></a>JDK 中常用的包有哪些</h4>\r\n<ul><li>java.lang：这个是系统的基础类；</li><li>java.io：这里面是所有输入输出有关的类，比如文件操作等；</li><li>java.nio：为了完善 io 包中的功能，提高 io 包中性能而写的一个新包；</li><li>java.net：这里面是与网络有关的类；</li><li>java.util：这个是系统辅助类，特别是集合类；</li><li>java.sql：这个是数据库操作的类。</li></ul>\r\n<h4><a id=\"import_javajavax_1309\"></a>import java和javax有什么区别</h4>\r\n<p>刚开始的时候 JavaAPI 所必需的包是 java 开头的包，javax 当时只是扩展 API 包来说使用。然而随着时间的推移，javax 逐渐的扩展成为 Java API 的组成部分。但是，将扩展从 javax 包移动到 java 包将是太麻烦了，最终会破坏一堆现有的代码。因此，最终决定 javax 包将成为标准API的一部分。</p>\r\n<p>所以，实际上java和javax没有区别。这都是一个名字。</p>\r\n<h2><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"IO_1319\"></a>IO流</h2>\r\n<h3><a name=\"t32\"></a><a name=\"t32\"></a><a id=\"java__IO__1321\"></a>java 中 IO 流分为几种?</h3>\r\n<ul><li>按照流的流向分，可以分为输入流和输出流；</li><li>按照操作单元划分，可以划分为字节流和字符流；</li><li>按照流的角色划分为节点流和处理流。</li></ul>\r\n<p>Java Io流共涉及40多个类，这些类看上去很杂乱，但实际上很有规则，而且彼此之间存在非常紧密的联系， Java I0流的40多个类都是从如下4个抽象类基类中派生出来的。</p>\r\n<ul><li>InputStream/Reader: 所有的输入流的基类，前者是字节输入流，后者是字符输入流。</li><li>OutputStream/Writer: 所有输出流的基类，前者是字节输出流，后者是字符输出流。</li></ul>\r\n<p>按操作方式分类结构图：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9teS1ibG9nLXRvLXVzZS5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vMjAxOS02L0lPLSVFNiU5MyU4RCVFNCVCRCU5QyVFNiU5NiVCOSVFNSVCQyU4RiVFNSU4OCU4NiVFNyVCMSVCQi5wbmc?x-oss-process=image/format,png\" alt=\"IO-操作方式分类\"></p>\r\n<p>按操作对象分类结构图：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9teS1ibG9nLXRvLXVzZS5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vMjAxOS02L0lPLSVFNiU5MyU4RCVFNCVCRCU5QyVFNSVBRiVCOSVFOCVCMSVBMSVFNSU4OCU4NiVFNyVCMSVCQi5wbmc?x-oss-process=image/format,png\" alt=\"IO-操作对象分类\"></p>\r\n<h3><a name=\"t33\"></a><a name=\"t33\"></a><a id=\"BIONIOAIO__1343\"></a>BIO,NIO,AIO 有什么区别?</h3>\r\n<p>简答</p>\r\n<ul><li>BIO：Block IO 同步阻塞式 IO，就是我们平常使用的传统 IO，它的特点是模式简单使用方便，并发处理能力低。</li><li>NIO：Non IO 同步非阻塞 IO，是传统 IO 的升级，客户端和服务器端通过 Channel（通道）通讯，实现了多路复用。</li><li>AIO：Asynchronous IO 是 NIO 的升级，也叫 NIO2，实现了异步非堵塞 IO ，异步 IO 的操作基于事件和回调机制。</li></ul>\r\n<p>详细回答</p>\r\n<ul><li><strong>BIO (Blocking I/O):</strong> 同步阻塞I/O模式，数据的读取写入必须阻塞在一个线程内等待其完成。在活动连接数不是特别高（小于单机1000）的情况下，这种模型是比较不错的，可以让每一个连接专注于自己的 I/O 并且编程模型简单，也不用过多考虑系统的过载、限流等问题。线程池本身就是一个天然的漏斗，可以缓冲一些系统处理不了的连接或请求。但是，当面对十万甚至百万级连接的时候，传统的 BIO 模型是无能为力的。因此，我们需要一种更高效的 I/O 处理模型来应对更高的并发量。</li><li><strong>NIO (New I/O):</strong> NIO是一种同步非阻塞的I/O模型，在Java 1.4 中引入了NIO框架，对应 java.nio 包，提供了 Channel , Selector，Buffer等抽象。NIO中的N可以理解为Non-blocking，不单纯是New。它支持面向缓冲的，基于通道的I/O操作方法。 NIO提供了与传统BIO模型中的 <code>Socket</code> 和 <code>ServerSocket</code> 相对应的 <code>SocketChannel</code> 和 <code>ServerSocketChannel</code> 两种不同的套接字通道实现,两种通道都支持阻塞和非阻塞两种模式。阻塞模式使用就像传统中的支持一样，比较简单，但是性能和可靠性都不好；非阻塞模式正好与之相反。对于低负载、低并发的应用程序，可以使用同步阻塞I/O来提升开发速率和更好的维护性；对于高负载、高并发的（网络）应用，应使用 NIO 的非阻塞模式来开发</li><li><strong>AIO (Asynchronous I/O):</strong> AIO 也就是 NIO 2。在 Java 7 中引入了 NIO 的改进版 NIO 2,它是异步非阻塞的IO模型。异步 IO 是基于事件和回调机制实现的，也就是应用操作之后会直接返回，不会堵塞在那里，当后台处理完成，操作系统会通知相应的线程进行后续的操作。AIO 是异步IO的缩写，虽然 NIO 在网络操作中，提供了非阻塞的方法，但是 NIO 的 IO 行为还是同步的。对于 NIO 来说，我们的业务线程是在 IO 操作准备好时，得到通知，接着就由这个线程自行进行 IO 操作，IO操作本身是同步的。查阅网上相关资料，我发现就目前来说 AIO 的应用还不是很广泛，Netty 之前也尝试使用过 AIO，不过又放弃了。</li></ul>\r\n<h3><a name=\"t34\"></a><a name=\"t34\"></a><a id=\"Files_1359\"></a>Files的常用方法都有哪些？</h3>\r\n<ul><li>Files. exists()：检测文件路径是否存在。</li><li>Files. createFile()：创建文件。</li><li>Files. createDirectory()：创建文件夹。</li><li>Files. delete()：删除一个文件或目录。</li><li>Files. copy()：复制文件。</li><li>Files. move()：移动文件。</li><li>Files. size()：查看文件个数。</li><li>Files. read()：读取文件。</li><li>Files. write()：写入文件。</li></ul>\r\n<h2><a name=\"t35\"></a><a name=\"t35\"></a><a id=\"_1373\"></a>反射</h2>\r\n<h3><a name=\"t36\"></a><a name=\"t36\"></a><a id=\"_1375\"></a>什么是反射机制？</h3>\r\n<p>JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。</p>\r\n<p>静态编译和动态编译</p>\r\n<ul><li>**静态编译：**在编译时确定类型，绑定对象</li><li>**动态编译：**运行时确定类型，绑定对象</li></ul>\r\n<h3><a name=\"t37\"></a><a name=\"t37\"></a><a id=\"_1386\"></a>反射机制优缺点</h3>\r\n<ul><li><strong>优点：</strong> 运行期类型的判断，动态加载类，提高代码灵活度。</li><li><strong>缺点：</strong> 性能瓶颈：反射相当于一系列解释操作，通知 JVM 要做的事情，性能比直接的java代码要慢很多。</li></ul>\r\n<h3><a name=\"t38\"></a><a name=\"t38\"></a><a id=\"_1393\"></a>反射机制的应用场景有哪些？</h3>\r\n<p>反射是框架设计的灵魂。</p>\r\n<p>在我们平时的项目开发过程中，基本上很少会直接使用到反射机制，但这不能说明反射机制没有用，实际上有很多设计、开发都与反射机制有关，例如模块化的开发，通过反射去调用对应的字节码；动态代理设计模式也采用了反射机制，还有我们日常使用的 Spring／Hibernate 等框架也大量使用到了反射机制。</p>\r\n<p>举例：①我们在使用JDBC连接数据库时使用Class.forName()通过反射加载数据库的驱动程序；②Spring框架也用到很多反射机制，最经典的就是xml的配置模式。Spring 通过 XML 配置模式装载 Bean 的过程：1) 将程序内所有 XML 或 Properties 配置文件加载入内存中; 2)Java类里面解析xml或properties里面的内容，得到对应实体类的字节码字符串以及相关的属性信息; 3)使用反射机制，根据这个字符串获得某个类的Class实例; 4)动态配置实例的属性</p>\r\n<h3><a name=\"t39\"></a><a name=\"t39\"></a><a id=\"Java_1403\"></a>Java获取反射的三种方法</h3>\r\n<p>1.通过new对象实现反射机制 2.通过路径实现反射机制 3.通过类名实现反射机制</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span>\r\n    String name<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">boolean</span> sex<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">float</span> score<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Get</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token comment\">//获取反射机制三种方式</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> ClassNotFoundException <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">//方式一(通过建立对象)</span>\r\n        Student stu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Class <span class=\"token class-name\">classobj1</span> <span class=\"token operator\">=</span> stu<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>classobj1<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//方式二（所在通过路径-相对路径）</span>\r\n        Class <span class=\"token class-name\">classobj2</span> <span class=\"token operator\">=</span> Class<span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fanshe.Student\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>classobj2<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//方式三（通过类名）</span>\r\n        Class <span class=\"token class-name\">classobj3</span> <span class=\"token operator\">=</span> Student<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>classobj3<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li></ul></pre>\r\n<h2><a name=\"t40\"></a><a name=\"t40\"></a><a id=\"_1438\"></a>网络编程</h2>\r\n<p>网络编程的面试题可以查看我的这篇文章<a href=\"https://blog.csdn.net/ThinkWon/article/details/104903925\">重学TCP/IP协议和三次握手四次挥手</a>，内容不仅包括TCP/IP协议和三次握手四次挥手的知识，还包括计算机网络体系结构，HTTP协议，get请求和post请求区别，session和cookie的区别等，欢迎大家阅读。</p>\r\n<h2><a name=\"t41\"></a><a name=\"t41\"></a><a id=\"API_1444\"></a>常用API</h2>\r\n<h3><a name=\"t42\"></a><a name=\"t42\"></a><a id=\"String_1446\"></a>String相关</h3>\r\n<h4><a id=\"_1448\"></a>字符型常量和字符串常量的区别</h4>\r\n<ol><li>形式上: 字符常量是单引号引起的一个字符 字符串常量是双引号引起的若干个字符</li><li>含义上: 字符常量相当于一个整形值(ASCII值),可以参加表达式运算 字符串常量代表一个地址值(该字符串在内存中存放位置)</li><li>占内存大小 字符常量只占两个字节 字符串常量占若干个字节(至少一个字符结束标志)</li></ol>\r\n<h4><a id=\"_1456\"></a>什么是字符串常量池？</h4>\r\n<p>字符串常量池位于堆内存中，专门用来存储字符串常量，可以提高内存的使用率，避免开辟多块空间存储相同的字符串，在创建字符串时 JVM 会首先检查字符串常量池，如果该字符串已经存在池中，则返回它的引用，如果不存在，则实例化一个字符串放到池中，并返回其引用。</p>\r\n<h4><a id=\"String__1462\"></a>String 是最基本的数据类型吗</h4>\r\n<p>不是。Java 中的基本数据类型只有 8 个 ：byte、short、int、long、float、double、char、boolean；除了基本类型（primitive type），剩下的都是引用类型（referencetype），Java 5 以后引入的枚举类型也算是一种比较特殊的引用类型。</p>\r\n<p>这是很基础的东西，但是很多初学者却容易忽视，Java 的 8 种基本数据类型中不包括 String，基本数据类型中用来描述文本数据的是 char，但是它只能表示单个字符，比如 ‘a’,‘好’ 之类的，如果要描述一段文本，就需要用多个 char 类型的变量，也就是一个 char 类型数组，比如“你好” 就是长度为2的数组 char[] chars = {‘你’,‘好’};</p>\r\n<p>但是使用数组过于麻烦，所以就有了 String，String 底层就是一个 char 类型的数组，只是使用的时候开发者不需要直接操作底层数组，用更加简便的方式即可完成对字符串的使用。</p>\r\n<h4><a id=\"String_1472\"></a>String有哪些特性</h4>\r\n<ul><li> <p>不变性：String 是只读字符串，是一个典型的 immutable 对象，对它进行任何操作，其实都是创建一个新的对象，再把引用指向该对象。不变模式的主要作用在于当一个对象需要被多线程共享并频繁访问时，可以保证数据的一致性。</p> </li><li> <p>常量池优化：String 对象创建之后，会在字符串常量池中进行缓存，如果下次创建同样的对象时，会直接返回缓存的引用。</p> </li><li> <p>final：使用 final 来定义 String 类，表示 String 类不能被继承，提高了系统的安全性。</p> </li></ul>\r\n<h4><a id=\"String_1482\"></a>String为什么是不可变的吗？</h4>\r\n<p>简单来说就是String类利用了final修饰的char类型数组存储字符，源码如下图所以：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">/** The value is used for character storage. */</span>\r\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">char</span> value<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<h4><a id=\"String_1493\"></a>String真的是不可变的吗？</h4>\r\n<p>我觉得如果别人问这个问题的话，回答不可变就可以了。 下面只是给大家看两个有代表性的例子：</p>\r\n<p><strong>1) String不可变但不代表引用不可以变</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">String str <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">;</span>\r\nstr <span class=\"token operator\">=</span> str <span class=\"token operator\">+</span> <span class=\"token string\">\" World\"</span><span class=\"token punctuation\">;</span>\r\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str=\"</span> <span class=\"token operator\">+</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<p>结果：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">str<span class=\"token operator\">=</span>Hello World\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>解析：</p>\r\n<p>实际上，原来String的内容是不变的，只是str由原来指向\"Hello\"的内存地址转为指向\"Hello World\"的内存地址而已，也就是说多开辟了一块内存区域给\"Hello World\"字符串。</p>\r\n<p><strong>2) 通过反射是可以修改所谓的“不可变”对象</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">// 创建字符串\"Hello World\"， 并赋给引用s</span>\r\nString s <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">;</span>\r\n\r\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s = \"</span> <span class=\"token operator\">+</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello World</span>\r\n\r\n<span class=\"token comment\">// 获取String类中的value字段</span>\r\nField valueFieldOfString <span class=\"token operator\">=</span> String<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 改变value属性的访问权限</span>\r\nvalueFieldOfString<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 获取s对象上的value属性的值</span>\r\n<span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> valueFieldOfString<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 改变value所引用的数组中的第5个字符</span>\r\nvalue<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'_'</span><span class=\"token punctuation\">;</span>\r\n\r\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s = \"</span> <span class=\"token operator\">+</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello_World</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li></ul></pre>\r\n<p>结果：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">s <span class=\"token operator\">=</span> Hello World\r\ns <span class=\"token operator\">=</span> Hello_World\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<p>解析：</p>\r\n<p>用反射可以访问私有成员， 然后反射出String对象中的value属性， 进而改变通过获得的value引用改变数组的结构。但是一般我们不会这么做，这里只是简单提一下有这个东西。</p>\r\n<h4><a id=\"_String__1551\"></a>是否可以继承 String 类</h4>\r\n<p>String 类是 final 类，不可以被继承。</p>\r\n<h4><a id=\"String_stri_String_strnew_Stringi_1557\"></a>String str=\"i\"与 String str=new String(“i”)一样吗？</h4>\r\n<p>不一样，因为内存的分配方式不一样。String str=\"i\"的方式，java 虚拟机会将其分配到常量池中；而 String str=new String(“i”) 则会被分到堆内存中。</p>\r\n<h4><a id=\"String_s__new_Stringxyz_1563\"></a>String s = new String(“xyz”);创建了几个字符串对象</h4>\r\n<p>两个对象，一个是静态区的\"xyz\"，一个是用new创建在堆上的对象。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">String str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//str1指向静态区</span>\r\nString str2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//str2指向堆上的对象</span>\r\nString str3 <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\r\nString str4 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\r\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>str4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\r\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str1 <span class=\"token operator\">==</span> str3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\r\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str1 <span class=\"token operator\">==</span> str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span>\r\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str2 <span class=\"token operator\">==</span> str4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span>\r\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str2 <span class=\"token operator\">==</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span>\r\nstr2 <span class=\"token operator\">=</span> str1<span class=\"token punctuation\">;</span>\r\nSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str2 <span class=\"token operator\">==</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li></ul></pre>\r\n<h4><a id=\"_1584\"></a>如何将字符串反转？</h4>\r\n<p>使用 StringBuilder 或者 stringBuffer 的 reverse() 方法。</p>\r\n<p>示例代码：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-Java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">// StringBuffer reverse\r\nStringBuffer stringBuffer = new StringBuffer();\r\nstringBuffer. append(\"abcdefg\");\r\nSystem. out. println(stringBuffer. reverse()); // gfedcba\r\n// StringBuilder reverse\r\nStringBuilder stringBuilder = new StringBuilder();\r\nstringBuilder. append(\"abcdefg\");\r\nSystem. out. println(stringBuilder. reverse()); // gfedcba\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<h4><a id=\"_lengthString__length_1603\"></a>数组有没有 length()方法？String 有没有 length()方法</h4>\r\n<p>数组没有 length()方法 ，有 length 的属性。String 有 length()方法。JavaScript中，获得字符串的长度是通过 length 属性得到的，这一点容易和 Java 混淆。</p>\r\n<h4><a id=\"String__1609\"></a>String 类的常用方法都有那些？</h4>\r\n<ul><li>indexOf()：返回指定字符的索引。</li><li>charAt()：返回指定索引处的字符。</li><li>replace()：字符串替换。</li><li>trim()：去除字符串两端空白。</li><li>split()：分割字符串，返回一个分割后的字符串数组。</li><li>getBytes()：返回字符串的 byte 类型数组。</li><li>length()：返回字符串长度。</li><li>toLowerCase()：将字符串转成小写字母。</li><li>toUpperCase()：将字符串转成大写字符。</li><li>substring()：截取字符串。</li><li>equals()：字符串比较。</li></ul>\r\n<h4><a id=\"_HashMap__String__key__1625\"></a>在使用 HashMap 的时候，用 String 做 key 有什么好处？</h4>\r\n<p>HashMap 内部实现是通过 key 的 hashcode 来确定 value 的存储位置，因为字符串是不可变的，所以当创建字符串时，它的 hashcode 被缓存下来，不需要再次计算，所以相比于其他对象更快。</p>\r\n<h4><a id=\"StringStringBufferStringBuilderString_1631\"></a>String和StringBuffer、StringBuilder的区别是什么？String为什么是不可变的</h4>\r\n<p><strong>可变性</strong></p>\r\n<p>String类中使用字符数组保存字符串，private　final　char　value[]，所以string对象是不可变的。StringBuilder与StringBuffer都继承自AbstractStringBuilder类，在AbstractStringBuilder中也是使用字符数组保存字符串，char[] value，这两种对象都是可变的。</p>\r\n<p><strong>线程安全性</strong></p>\r\n<p>String中的对象是不可变的，也就可以理解为常量，线程安全。AbstractStringBuilder是StringBuilder与StringBuffer的公共父类，定义了一些字符串的基本操作，如expandCapacity、append、insert、indexOf等公共方法。StringBuffer对方法加了同步锁或者对调用的方法加了同步锁，所以是线程安全的。StringBuilder并没有对方法进行加同步锁，所以是非线程安全的。</p>\r\n<p><strong>性能</strong></p>\r\n<p>每次对String 类型进行改变的时候，都会生成一个新的String对象，然后将指针指向新的String 对象。StringBuffer每次都会对StringBuffer对象本身进行操作，而不是生成新的对象并改变对象引用。相同情况下使用StirngBuilder 相比使用StringBuffer 仅能获得10%~15% 左右的性能提升，但却要冒多线程不安全的风险。</p>\r\n<p><strong>对于三者使用的总结</strong></p>\r\n<p>如果要操作少量的数据用 = String</p>\r\n<p>单线程操作字符串缓冲区 下操作大量数据 = StringBuilder</p>\r\n<p>多线程操作字符串缓冲区 下操作大量数据 = StringBuffer</p>\r\n<h3><a name=\"t43\"></a><a name=\"t43\"></a><a id=\"Date_1657\"></a>Date相关</h3>\r\n<h3><a name=\"t44\"></a><a name=\"t44\"></a><a id=\"_1661\"></a>包装类相关</h3>\r\n<h4><a id=\"_1663\"></a>自动装箱与拆箱</h4>\r\n<p><strong>装箱</strong>：将基本类型用它们对应的引用类型包装起来；</p>\r\n<p><strong>拆箱</strong>：将包装类型转换为基本数据类型；</p>\r\n<h4><a id=\"int__Integer__1671\"></a>int 和 Integer 有什么区别</h4>\r\n<p>Java 是一个近乎纯洁的面向对象编程语言，但是为了编程的方便还是引入了基本数据类型，但是为了能够将这些基本数据类型当成对象操作，Java 为每一个基本数据类型都引入了对应的包装类型（wrapper class），int 的包装类就是 Integer，从 Java 5 开始引入了自动装箱/拆箱机制，使得二者可以相互转换。</p>\r\n<p>Java 为每个原始类型提供了包装类型：</p>\r\n<p>原始类型: boolean，char，byte，short，int，long，float，double</p>\r\n<p>包装类型：Boolean，Character，Byte，Short，Integer，Long，Float，Double</p>\r\n<h4><a id=\"Integer_a_127__Integer_b__127_1683\"></a>Integer a= 127 与 Integer b = 127相等吗</h4>\r\n<p>对于对象引用类型：==比较的是对象的内存地址。<br> 对于基本数据类型：==比较的是值。</p>\r\n<p>如果整型字面量的值在-128到127之间，那么自动装箱时不会new新的Integer对象，而是直接引用常量池中的Integer对象，超过范围 a1==b1的结果是false</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    Integer a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    Integer b <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 将3自动装箱成Integer类型</span>\r\n    <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false 两个引用没有引用同一对象</span>\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true a自动拆箱成int类型再和c比较</span>\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\r\n\r\n    Integer a1 <span class=\"token operator\">=</span> <span class=\"token number\">128</span><span class=\"token punctuation\">;</span>\r\n    Integer b1 <span class=\"token operator\">=</span> <span class=\"token number\">128</span><span class=\"token punctuation\">;</span>\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">==</span> b1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\r\n\r\n    Integer a2 <span class=\"token operator\">=</span> <span class=\"token number\">127</span><span class=\"token punctuation\">;</span>\r\n    Integer b2 <span class=\"token operator\">=</span> <span class=\"token number\">127</span><span class=\"token punctuation\">;</span>\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a2 <span class=\"token operator\">==</span> b2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li></ul></pre>\r\n<h2><a name=\"t45\"></a><a name=\"t45\"></a><a id=\"_1711\"></a>常用工具类库</h2>\r\n<h2><a name=\"t46\"></a><a name=\"t46\"></a><a id=\"_1715\"></a>单元测试</h2>\r\n<h2><a name=\"t47\"></a><a name=\"t47\"></a><a id=\"_1719\"></a>日志</h2>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_java_basis.vue?vue&type=template&id=b2f173b8\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>Java集合容器面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"_37\"></a>集合容器概述</h2>\r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"_39\"></a>什么是集合</h3>\r\n<p><strong>集合框架</strong>：用于存储数据的容器。</p>\r\n<p>集合框架是为表示和操作集合而规定的一种统一的标准的体系结构。<br> 任何集合框架都包含三大块内容：对外的接口、接口的实现和对集合运算的算法。</p>\r\n<p><strong>接口</strong>：表示集合的抽象数据类型。接口允许我们操作集合时不必关注具体实现，从而达到“多态”。在面向对象编程语言中，接口通常用来形成规范。</p>\r\n<p><strong>实现</strong>：集合接口的具体实现，是重用性很高的数据结构。</p>\r\n<p><strong>算法</strong>：在一个实现了某个集合框架中的接口的对象身上完成某种有用的计算的方法，例如查找、排序等。这些算法通常是多态的，因为相同的方法可以在同一个接口被多个类实现时有不同的表现。事实上，算法是可复用的函数。<br> 它减少了程序设计的辛劳。</p>\r\n<p>集合框架通过提供有用的数据结构和算法使你能集中注意力于你的程序的重要部分上，而不是为了让程序能正常运转而将注意力于低层设计上。<br> 通过这些在无关API之间的简易的互用性，使你免除了为改编对象或转换代码以便联合这些API而去写大量的代码。 它提高了程序速度和质量。</p>\r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"_58\"></a>集合的特点</h3>\r\n<p>集合的特点主要有如下两点：</p>\r\n<ul><li> <p>对象封装数据，对象多了也需要存储。集合用于存储对象。</p> </li><li> <p>对象的个数确定可以使用数组，对象的个数不确定的可以用集合。因为集合是可变长度的。</p> </li></ul>\r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"_68\"></a>集合和数组的区别</h3>\r\n<ul><li> <p>数组是固定长度的；集合可变长度的。</p> </li><li> <p>数组可以存储基本数据类型，也可以存储引用数据类型；集合只能存储引用数据类型。</p> </li><li> <p>数组存储的元素必须是同一个数据类型；集合存储的对象可以是不同数据类型。</p> </li></ul>\r\n<p><strong>数据结构</strong>：就是容器中存储数据的方式。</p>\r\n<p>对于集合容器，有很多种。因为每一个容器的自身特点不同，其实原理在于每个容器的内部数据结构不同。</p>\r\n<p>集合容器在不断向上抽取过程中，出现了集合体系。<strong>在使用一个体系的原则：参阅顶层内容。建立底层对象。</strong></p>\r\n<h3><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"_84\"></a>使用集合框架的好处</h3>\r\n<ol><li>容量自增长；</li><li>提供了高性能的数据结构和算法，使编码更轻松，提高了程序速度和质量；</li><li>允许不同 API 之间的互操作，API之间可以来回传递集合；</li><li>可以方便地扩展或改写集合，提高代码复用性和可操作性。</li><li>通过使用JDK自带的集合类，可以降低代码维护和学习新API成本。</li></ol>\r\n<h3><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"_94\"></a>常用的集合类有哪些？</h3>\r\n<p>Map接口和Collection接口是所有集合框架的父接口：</p>\r\n<ol><li>Collection接口的子接口包括：Set接口和List接口</li><li>Map接口的实现类主要有：HashMap、TreeMap、Hashtable、ConcurrentHashMap以及Properties等</li><li>Set接口的实现类主要有：HashSet、TreeSet、LinkedHashSet等</li><li>List接口的实现类主要有：ArrayList、LinkedList、Stack以及Vector等</li></ol>\r\n<h3><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"ListSetMapListSetMap__Collection_ListMapSet__105\"></a>List，Set，Map三者的区别？List、Set、Map 是否继承自 Collection 接口？List、Map、Set 三个接口存取元素时，各有什么特点？</h3>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWcyMDE4LmNuYmxvZ3MuY29tL290aGVyLzE0MDgxODMvMjAxOTExLzE0MDgxODMtMjAxOTExMTkxODQxNDk1NTktMTU3MTU5NTY2OC5qcGc?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>Java 容器分为 Collection 和 Map 两大类，Collection集合的子接口有Set、List、Queue三种子接口。我们比较常用的是Set、List，Map接口不是collection的子接口。</p>\r\n<p>Collection集合主要有List和Set两大接口</p>\r\n<ul><li>List：一个有序（元素存入集合的顺序和取出的顺序一致）容器，元素可以重复，可以插入多个null元素，元素都有索引。常用的实现类有 ArrayList、LinkedList 和 Vector。</li><li>Set：一个无序（存入和取出顺序有可能不一致）容器，不可以存储重复元素，只允许存入一个null元素，必须保证元素唯一性。Set 接口常用实现类是 HashSet、LinkedHashSet 以及 TreeSet。</li></ul>\r\n<p>Map是一个键值对集合，存储键、值和之间的映射。 Key无序，唯一；value 不要求有序，允许重复。Map没有继承于Collection接口，从Map集合中检索元素时，只要给出键对象，就会返回对应的值对象。</p>\r\n<p>Map 的常用实现类：HashMap、TreeMap、HashTable、LinkedHashMap、ConcurrentHashMap</p>\r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"_122\"></a>集合框架底层数据结构</h3>\r\n<p>Collection</p>\r\n<ol><li>List</li></ol>\r\n<ul><li>Arraylist： Object数组</li><li>Vector： Object数组</li><li>LinkedList： 双向循环链表</li></ul>\r\n<ol start=\"2\"><li>Set</li></ol>\r\n<ul><li>HashSet（无序，唯一）：基于 HashMap 实现的，底层采用 HashMap 来保存元素</li><li>LinkedHashSet： LinkedHashSet 继承与 HashSet，并且其内部是通过 LinkedHashMap 来实现的。有点类似于我们之前说的LinkedHashMap 其内部是基于 Hashmap 实现一样，不过还是有一点点区别的。</li><li>TreeSet（有序，唯一）： 红黑树(自平衡的排序二叉树。)</li></ul>\r\n<p>Map</p>\r\n<ul><li>HashMap： JDK1.8之前HashMap由数组+链表组成的，数组是HashMap的主体，链表则是主要为了解决哈希冲突而存在的（“拉链法”解决冲突）.JDK1.8以后在解决哈希冲突时有了较大的变化，当链表长度大于阈值（默认为8）时，将链表转化为红黑树，以减少搜索时间</li><li>LinkedHashMap：LinkedHashMap 继承自 HashMap，所以它的底层仍然是基于拉链式散列结构即由数组和链表或红黑树组成。另外，LinkedHashMap 在上面结构的基础上，增加了一条双向链表，使得上面的结构可以保持键值对的插入顺序。同时通过对链表进行相应的操作，实现了访问顺序相关逻辑。</li><li>HashTable： 数组+链表组成的，数组是 HashMap 的主体，链表则是主要为了解决哈希冲突而存在的</li><li>TreeMap： 红黑树（自平衡的排序二叉树）</li></ul>\r\n<h3><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"_149\"></a>哪些集合类是线程安全的？</h3>\r\n<ul><li>vector：就比arraylist多了个同步化机制（线程安全），因为效率较低，现在已经不太建议使用。在web应用中，特别是前台页面，往往效率（页面响应速度）是优先考虑的。</li><li>statck：堆栈类，先进后出。</li><li>hashtable：就比hashmap多了个线程安全。</li><li>enumeration：枚举，相当于迭代器。</li></ul>\r\n<h3><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"Java_failfast_158\"></a>Java集合的快速失败机制 “fail-fast”？</h3>\r\n<p>是java集合的一种错误检测机制，当多个线程对集合进行结构上的改变的操作时，有可能会产生 fail-fast 机制。</p>\r\n<p>例如：假设存在两个线程（线程1、线程2），线程1通过Iterator在遍历集合A中的元素，在某个时候线程2修改了集合A的结构（是结构上面的修改，而不是简单的修改集合元素的内容），那么这个时候程序就会抛出 ConcurrentModificationException 异常，从而产生fail-fast机制。</p>\r\n<p>原因：迭代器在遍历时直接访问集合中的内容，并且在遍历过程中使用一个 modCount 变量。集合在被遍历期间如果内容发生变化，就会改变modCount的值。每当迭代器使用hashNext()/next()遍历下一个元素之前，都会检测modCount变量是否为expectedmodCount值，是的话就返回遍历；否则抛出异常，终止遍历。</p>\r\n<p>解决办法：</p>\r\n<ol><li> <p>在遍历过程中，所有涉及到改变modCount值得地方全部加上synchronized。</p> </li><li> <p>使用CopyOnWriteArrayList来替换ArrayList</p> </li></ol>\r\n<h3><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"_174\"></a>怎么确保一个集合不能被修改？</h3>\r\n<p>可以使用 Collections. unmodifiableCollection(Collection c) 方法来创建一个只读集合，这样改变集合的任何操作都会抛出 Java. lang. UnsupportedOperationException 异常。</p>\r\n<p>示例代码如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-Java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">List&lt;String&gt; list = new ArrayList&lt;&gt;();\r\nlist. add(\"x\");\r\nCollection&lt;String&gt; clist = Collections. unmodifiableCollection(list);\r\nclist. add(\"y\"); // 运行时此行报错\r\nSystem. out. println(list. size());\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<h2><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"Collection_192\"></a>Collection接口</h2>\r\n<h3><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"List_194\"></a>List接口</h3>\r\n<h4><a id=\"_Iterator__196\"></a>迭代器 Iterator 是什么？</h4>\r\n<p>Iterator 接口提供遍历任何 Collection 的接口。我们可以从一个 Collection 中使用迭代器方法来获取迭代器实例。迭代器取代了 Java 集合框架中的 Enumeration，迭代器允许调用者在迭代过程中移除元素。</p>\r\n<h4><a id=\"Iterator__202\"></a>Iterator 怎么使用？有什么特点？</h4>\r\n<p>Iterator 使用代码如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-Java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">List&lt;String&gt; list = new ArrayList&lt;&gt;();\r\nIterator&lt;String&gt; it = list. iterator();\r\nwhile(it. hasNext()){\r\n  String obj = it. next();\r\n  System. out. println(obj);\r\n}\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p>Iterator 的特点是只能单向遍历，但是更加安全，因为它可以确保，在当前遍历的集合元素被更改的时候，就会抛出 ConcurrentModificationException 异常。</p>\r\n<h4><a id=\"_Collection__219\"></a>如何边遍历边移除 Collection 中的元素？</h4>\r\n<p>边遍历边修改 Collection 的唯一正确方式是使用 Iterator.remove() 方法，如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Iterator<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">&gt;</span></span> it <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n   <span class=\"token operator\">*</span><span class=\"token comment\">// do something*</span>\r\n   it<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<p>一种最常见的<strong>错误</strong>代码如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>Integer i <span class=\"token operator\">:</span> list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n   list<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<p>运行以上错误代码会报 <strong>ConcurrentModificationException 异常</strong>。这是因为当使用 foreach(for(Integer i : list)) 语句时，会自动生成一个iterator 来遍历该 list，但同时该 list 正在被 Iterator.remove() 修改。Java 一般不允许一个线程在遍历 Collection 时另一个线程修改它。</p>\r\n<h4><a id=\"Iterator__ListIterator__244\"></a>Iterator 和 ListIterator 有什么区别？</h4>\r\n<ul><li>Iterator 可以遍历 Set 和 List 集合，而 ListIterator 只能遍历 List。</li><li>Iterator 只能单向遍历，而 ListIterator 可以双向遍历（向前/后遍历）。</li><li>ListIterator 实现 Iterator 接口，然后添加了一些额外的功能，比如添加一个元素、替换一个元素、获取前面或后面元素的索引位置。</li></ul>\r\n<h4><a id=\"_List_Java__List__252\"></a>遍历一个 List 有哪些不同的方式？每种方法的实现原理是什么？Java 中 List 遍历的最佳实践是什么？</h4>\r\n<p>遍历方式有以下几种：</p>\r\n<ol><li> <p>for 循环遍历，基于计数器。在集合外部维护一个计数器，然后依次读取每一个位置的元素，当读取到最后一个元素后停止。</p> </li><li> <p>迭代器遍历，Iterator。Iterator 是面向对象的一个设计模式，目的是屏蔽不同数据集合的特点，统一遍历集合的接口。Java 在 Collections 中支持了 Iterator 模式。</p> </li><li> <p>foreach 循环遍历。foreach 内部也是采用了 Iterator 的方式实现，使用时不需要显式声明 Iterator 或计数器。优点是代码简洁，不易出错；缺点是只能做简单的遍历，不能在遍历过程中操作数据集合，例如删除、替换。</p> </li></ol>\r\n<p>最佳实践：Java Collections 框架中提供了一个 RandomAccess 接口，用来标记 List 实现是否支持 Random Access。</p>\r\n<ul><li>如果一个数据集合实现了该接口，就意味着它支持 Random Access，按位置读取元素的平均时间复杂度为 O(1)，如ArrayList。</li><li>如果没有实现该接口，表示不支持 Random Access，如LinkedList。</li></ul>\r\n<p>推荐的做法就是，支持 Random Access 的列表可用 for 循环遍历，否则建议用 Iterator 或 foreach 遍历。</p>\r\n<h4><a id=\"_ArrayList__272\"></a>说一下 ArrayList 的优缺点</h4>\r\n<p>ArrayList的优点如下：</p>\r\n<ul><li>ArrayList 底层以数组实现，是一种随机访问模式。ArrayList 实现了 RandomAccess 接口，因此查找的时候非常快。</li><li>ArrayList 在顺序添加一个元素的时候非常方便。</li></ul>\r\n<p>ArrayList 的缺点如下：</p>\r\n<ul><li>删除元素的时候，需要做一次元素复制操作。如果要复制的元素很多，那么就会比较耗费性能。</li><li>插入元素的时候，也需要做一次元素复制操作，缺点同上。</li></ul>\r\n<p>ArrayList 比较适合顺序添加、随机访问的场景。</p>\r\n<h4><a id=\"_List__288\"></a>如何实现数组和 List 之间的转换？</h4>\r\n<ul><li>数组转 List：使用 Arrays. asList(array) 进行转换。</li><li>List 转数组：使用 List 自带的 toArray() 方法。</li></ul>\r\n<p>代码示例：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-Java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">// list to array\r\nList&lt;String&gt; list = new ArrayList&lt;String&gt;();\r\nlist.add(\"123\");\r\nlist.add(\"456\");\r\nlist.toArray();\r\n\r\n// array to list\r\nString[] array = new String[]{\"123\",\"456\"};\r\nArrays.asList(array);\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n<h4><a id=\"ArrayList__LinkedList__309\"></a>ArrayList 和 LinkedList 的区别是什么？</h4>\r\n<ul><li>数据结构实现：ArrayList 是动态数组的数据结构实现，而 LinkedList 是双向链表的数据结构实现。</li><li>随机访问效率：ArrayList 比 LinkedList 在随机访问的时候效率要高，因为 LinkedList 是线性的数据存储方式，所以需要移动指针从前往后依次查找。</li><li>增加和删除效率：在非首尾的增加和删除操作，LinkedList 要比 ArrayList 效率要高，因为 ArrayList 增删操作要影响数组内的其他数据的下标。</li><li>内存空间占用：LinkedList 比 ArrayList 更占内存，因为 LinkedList 的节点除了存储数据，还存储了两个引用，一个指向前一个元素，一个指向后一个元素。</li><li>线程安全：ArrayList 和 LinkedList 都是不同步的，也就是不保证线程安全；</li></ul>\r\n<p>综合来说，在需要频繁读取集合中的元素时，更推荐使用 ArrayList，而在插入和删除操作较多时，更推荐使用 LinkedList。</p>\r\n<p>补充：数据结构基础之双向链表</p>\r\n<p>双向链表也叫双链表，是链表的一种，它的每个数据结点中都有两个指针，分别指向直接后继和直接前驱。所以，从双向链表中的任意一个结点开始，都可以很方便地访问它的前驱结点和后继结点。</p>\r\n<h4><a id=\"ArrayList__Vector__325\"></a>ArrayList 和 Vector 的区别是什么？</h4>\r\n<p>这两个类都实现了 List 接口（List 接口继承了 Collection 接口），他们都是有序集合</p>\r\n<ul><li>线程安全：Vector 使用了 Synchronized 来实现线程同步，是线程安全的，而 ArrayList 是非线程安全的。</li><li>性能：ArrayList 在性能方面要优于 Vector。</li><li>扩容：ArrayList 和 Vector 都会根据实际的需要动态的调整容量，只不过在 Vector 扩容每次会增加 1 倍，而 ArrayList 只会增加 50%。</li></ul>\r\n<p>Vector类的所有方法都是同步的。可以由两个线程安全地访问一个Vector对象、但是一个线程访问Vector的话代码要在同步操作上耗费大量的时间。</p>\r\n<p>Arraylist不是同步的，所以在不需要保证线程安全时时建议使用Arraylist。</p>\r\n<h4><a id=\"ArrayListLinkedListVector_ArrayListVectorLinkedList__339\"></a>插入数据时，ArrayList、LinkedList、Vector谁速度较快？阐述 ArrayList、Vector、LinkedList 的存储性能和特性？</h4>\r\n<p>ArrayList、LinkedList、Vector 底层的实现都是使用数组方式存储数据。数组元素数大于实际存储的数据以便增加和插入元素，它们都允许直接按序号索引元素，但是插入元素要涉及数组元素移动等内存操作，所以索引数据快而插入数据慢。</p>\r\n<p>Vector 中的方法由于加了 synchronized 修饰，因此 <strong>Vector</strong> <strong>是线程安全容器，但性能上较ArrayList差</strong>。</p>\r\n<p>LinkedList 使用双向链表实现存储，按序号索引数据需要进行前向或后向遍历，但插入数据时只需要记录当前项的前后项即可，所以 <strong>LinkedList</strong> <strong>插入速度较快</strong>。</p>\r\n<h4><a id=\"_ArrayList_350\"></a>多线程场景下如何使用 ArrayList？</h4>\r\n<p>ArrayList 不是线程安全的，如果遇到多线程场景，可以通过 Collections 的 synchronizedList 方法将其转换成线程安全的容器后再使用。例如像下面这样：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">&gt;</span></span> synchronizedList <span class=\"token operator\">=</span> Collections<span class=\"token punctuation\">.</span><span class=\"token function\">synchronizedList</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nsynchronizedList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aaa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nsynchronizedList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bbb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> synchronizedList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>synchronizedList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h4><a id=\"_ArrayList__elementData__transient__367\"></a>为什么 ArrayList 的 elementData 加上 transient 修饰？</h4>\r\n<p>ArrayList 中的数组定义如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">transient</span> Object<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> elementData<span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>再看一下 ArrayList 的定义：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>E<span class=\"token punctuation\">&gt;</span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractList</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>E<span class=\"token punctuation\">&gt;</span></span>\r\n     <span class=\"token keyword\">implements</span> <span class=\"token class-name\">List</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>E<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">,</span> RandomAccess<span class=\"token punctuation\">,</span> Cloneable<span class=\"token punctuation\">,</span> java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>Serializable\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<p>可以看到 ArrayList 实现了 Serializable 接口，这意味着 ArrayList 支持序列化。transient 的作用是说不希望 elementData 数组被序列化，重写了 writeObject 实现：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span>java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>ObjectOutputStream s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>IOException<span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token operator\">*</span><span class=\"token comment\">// Write out element count, and any hidden stuff*</span>\r\n        <span class=\"token keyword\">int</span> expectedModCount <span class=\"token operator\">=</span> modCount<span class=\"token punctuation\">;</span>\r\n    s<span class=\"token punctuation\">.</span><span class=\"token function\">defaultWriteObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token operator\">*</span><span class=\"token comment\">// Write out array length*</span>\r\n        s<span class=\"token punctuation\">.</span><span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span>elementData<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token operator\">*</span><span class=\"token comment\">// Write out all elements in the proper order.*</span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n            s<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span>elementData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>modCount <span class=\"token operator\">!=</span> expectedModCount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentModificationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li></ul></pre>\r\n<p>每次序列化时，先调用 defaultWriteObject() 方法序列化 ArrayList 中的非 transient 元素，然后遍历 elementData，只序列化已存入的元素，这样既加快了序列化的速度，又减小了序列化之后的文件大小。</p>\r\n<h4><a id=\"List__Set__405\"></a>List 和 Set 的区别</h4>\r\n<p>List , Set 都是继承自Collection 接口</p>\r\n<p>List 特点：一个有序（元素存入集合的顺序和取出的顺序一致）容器，元素可以重复，可以插入多个null元素，元素都有索引。常用的实现类有 ArrayList、LinkedList 和 Vector。</p>\r\n<p>Set 特点：一个无序（存入和取出顺序有可能不一致）容器，不可以存储重复元素，只允许存入一个null元素，必须保证元素唯一性。Set 接口常用实现类是 HashSet、LinkedHashSet 以及 TreeSet。</p>\r\n<p>另外 List 支持for循环，也就是通过下标来遍历，也可以用迭代器，但是set只能用迭代，因为他无序，无法用下标来取得想要的值。</p>\r\n<p>Set和List对比</p>\r\n<p>Set：检索元素效率低下，删除和插入效率高，插入和删除不会引起元素位置改变。<br> List：和数组类似，List可以动态增长，查找元素效率高，插入删除元素效率低，因为会引起其他元素位置改变</p>\r\n<h3><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"Set_424\"></a>Set接口</h3>\r\n<h4><a id=\"_HashSet__426\"></a>说一下 HashSet 的实现原理？</h4>\r\n<p>HashSet 是基于 HashMap 实现的，HashSet的值存放于HashMap的key上，HashMap的value统一为PRESENT，因此 HashSet 的实现比较简单，相关 HashSet 的操作，基本上都是直接调用底层 HashMap 的相关方法来完成，HashSet 不允许重复的值。</p>\r\n<h4><a id=\"HashSetHashSet_432\"></a>HashSet如何检查重复？HashSet是如何保证数据不可重复的？</h4>\r\n<p>向HashSet 中add ()元素时，判断元素是否存在的依据，不仅要比较hash值，同时还要结合equles 方法比较。<br> HashSet 中的add ()方法会使用HashMap 的put()方法。</p>\r\n<p>HashMap 的 key 是唯一的，由源码可以看出 HashSet 添加进去的值就是作为HashMap 的key，并且在HashMap中如果K/V相同时，会用新的V覆盖掉旧的V，然后返回旧的V。所以不会重复（ HashMap 比较key是否相等是先比较hashcode 再比较equals ）。</p>\r\n<p>以下是HashSet 部分源码：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> Object PRESENT <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">transient</span> HashMap<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>E<span class=\"token punctuation\">,</span>Object<span class=\"token punctuation\">&gt;</span></span> map<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token function\">HashSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>E e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token comment\">// 调用HashMap的put方法,PRESENT是一个至始至终都相同的虚值</span>\r\n\t<span class=\"token keyword\">return</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> PRESENT<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>null<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li></ul></pre>\r\n<p><strong>hashCode（）与equals（）的相关规定</strong>：</p>\r\n<ol><li>如果两个对象相等，则hashcode一定也是相同的</li><li>两个对象相等,对两个equals方法返回true</li><li>两个对象有相同的hashcode值，它们也不一定是相等的</li><li>综上，equals方法被覆盖过，则hashCode方法也必须被覆盖</li><li>hashCode()的默认行为是对堆上的对象产生独特值。如果没有重写hashCode()，则该class的两个对象无论如何都不会相等（即使这两个对象指向相同的数据）。</li></ol>\r\n<p><strong>==与equals的区别</strong></p>\r\n<ol><li>==是判断两个变量或实例是不是指向同一个内存空间 equals是判断两个变量或实例所指向的内存空间的值是不是相同</li><li>==是指对内存地址进行比较 equals()是对字符串的内容进行比较3.==指引用是否相同 equals()指的是值是否相同</li></ol>\r\n<h4><a id=\"HashSetHashMap_472\"></a>HashSet与HashMap的区别</h4>\r\n<div class=\"table-box\"><table><thead><tr><th>HashMap</th><th>HashSet</th></tr></thead><tbody><tr><td>实现了Map接口</td><td>实现Set接口</td></tr><tr><td>存储键值对</td><td>仅存储对象</td></tr><tr><td>调用put（）向map中添加元素</td><td>调用add（）方法向Set中添加元素</td></tr><tr><td>HashMap使用键（Key）计算Hashcode</td><td>HashSet使用成员对象来计算hashcode值，对于两个对象来说hashcode可能相同，所以equals()方法用来判断对象的相等性，如果两个对象不同的话，那么返回false</td></tr><tr><td>HashMap相对于HashSet较快，因为它是使用唯一的键获取对象</td><td>HashSet较HashMap来说比较慢</td></tr></tbody></table></div>\r\n<h3><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"Queue_486\"></a>Queue</h3>\r\n<h4><a id=\"BlockingQueue_488\"></a>BlockingQueue是什么？</h4>\r\n<p>Java.util.concurrent.BlockingQueue是一个队列，在进行检索或移除一个元素的时候，它会等待队列变为非空；当在添加一个元素时，它会等待队列中的可用空间。BlockingQueue接口是Java集合框架的一部分，主要用于实现生产者-消费者模式。我们不需要担心等待生产者有可用的空间，或消费者有可用的对象，因为它都在BlockingQueue的实现类中被处理了。Java提供了集中BlockingQueue的实现，比如ArrayBlockingQueue、LinkedBlockingQueue、PriorityBlockingQueue,、SynchronousQueue等。</p>\r\n<h4><a id=\"_Queue__poll_remove_494\"></a>在 Queue 中 poll()和 remove()有什么区别？</h4>\r\n<ul><li>相同点：都是返回第一个元素，并在队列中删除返回的对象。</li><li>不同点：如果没有元素 poll()会返回 null，而 remove()会直接抛出 NoSuchElementException 异常。</li></ul>\r\n<p>代码示例：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-Java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Queue&lt;String&gt; queue = new LinkedList&lt;String&gt;();\r\nqueue. offer(\"string\"); // add\r\nSystem. out. println(queue. poll());\r\nSystem. out. println(queue. remove());\r\nSystem. out. println(queue. size());\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<h2><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"Map_513\"></a>Map接口</h2>\r\n<h3><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"_HashMap__515\"></a>说一下 HashMap 的实现原理？</h3>\r\n<p>HashMap概述： HashMap是基于哈希表的Map接口的非同步实现。此实现提供所有可选的映射操作，并允许使用null值和null键。此类不保证映射的顺序，特别是它不保证该顺序恒久不变。</p>\r\n<p>HashMap的数据结构： 在Java编程语言中，最基本的结构就是两种，一个是数组，另外一个是模拟指针（引用），所有的数据结构都可以用这两个基本结构来构造的，HashMap也不例外。HashMap实际上是一个“链表散列”的数据结构，即数组和链表的结合体。</p>\r\n<p>HashMap 基于 Hash 算法实现的</p>\r\n<ol><li>当我们往Hashmap中put元素时，利用key的hashCode重新hash计算出当前对象的元素在数组中的下标</li><li>存储时，如果出现hash值相同的key，此时有两种情况。(1)如果key相同，则覆盖原始值；(2)如果key不同（出现冲突），则将当前的key-value放入链表中</li><li>获取时，直接找到hash值对应的下标，在进一步判断key是否相同，从而找到对应值。</li><li>理解了以上过程就不难明白HashMap是如何解决hash冲突的问题，核心就是使用了数组的存储方式，然后将冲突的key的对象放入链表中，一旦发现冲突就在链表中做进一步的对比。</li></ol>\r\n<p>需要注意Jdk 1.8中对HashMap的实现做了优化，当链表中的节点数据超过八个之后，该链表会转为红黑树来提高查询效率，从原来的O(n)到O(logn)</p>\r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"HashMapJDK17JDK18HashMap_532\"></a>HashMap在JDK1.7和JDK1.8中有哪些不同？HashMap的底层实现</h3>\r\n<p>在Java中，保存数据有两种比较简单的数据结构：数组和链表。<strong>数组的特点是：寻址容易，插入和删除困难；链表的特点是：寻址困难，但插入和删除容易；<strong>所以我们将数组和链表结合在一起，发挥两者各自的优势，使用一种叫做</strong>拉链法</strong>的方式可以解决哈希冲突。</p>\r\n<h4><a id=\"JDK18_536\"></a>JDK1.8之前</h4>\r\n<p>JDK1.8之前采用的是拉链法。<strong>拉链法</strong>：将链表和数组相结合。也就是说创建一个链表数组，数组中每一格就是一个链表。若遇到哈希冲突，则将冲突的值加到链表中即可。</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/2019121422243983.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"jdk1.7中HashMap数据结构\"></p>\r\n<h4><a id=\"JDK18_544\"></a>JDK1.8之后</h4>\r\n<p>相比于之前的版本，jdk1.8在解决哈希冲突时有了较大的变化，当链表长度大于阈值（默认为8）时，将链表转化为红黑树，以减少搜索时间。</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20191214222452844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"jdk1.8中HashMap数据结构\"></p>\r\n<h4><a id=\"JDK17_VS_JDK18__552\"></a>JDK1.7 VS JDK1.8 比较</h4>\r\n<p>JDK1.8主要解决或优化了一下问题：</p>\r\n<ol><li>resize 扩容优化</li><li>引入了红黑树，目的是避免单条链表过长而影响查询效率，红黑树算法请参考</li><li>解决了多线程死循环问题，但仍是非线程安全的，多线程时可能会造成数据丢失问题。</li></ol>\r\n<div class=\"table-box\"><table><thead><tr><th align=\"left\">不同</th><th align=\"left\">JDK 1.7</th><th align=\"left\">JDK 1.8</th></tr></thead><tbody><tr><td align=\"left\">存储结构</td><td align=\"left\">数组 + 链表</td><td align=\"left\">数组 + 链表 + 红黑树</td></tr><tr><td align=\"left\">初始化方式</td><td align=\"left\">单独函数：<code>inflateTable()</code></td><td align=\"left\">直接集成到了扩容函数<code>resize()</code>中</td></tr><tr><td align=\"left\">hash值计算方式</td><td align=\"left\">扰动处理 = 9次扰动 = 4次位运算 + 5次异或运算</td><td align=\"left\">扰动处理 = 2次扰动 = 1次位运算 + 1次异或运算</td></tr><tr><td align=\"left\">存放数据的规则</td><td align=\"left\">无冲突时，存放数组；冲突时，存放链表</td><td align=\"left\">无冲突时，存放数组；冲突 &amp; 链表长度 &lt; 8：存放单链表；冲突 &amp; 链表长度 &gt; 8：树化并存放红黑树</td></tr><tr><td align=\"left\">插入数据方式</td><td align=\"left\">头插法（先讲原位置的数据移到后1位，再插入数据到该位置）</td><td align=\"left\">尾插法（直接插入到链表尾部/红黑树）</td></tr><tr><td align=\"left\">扩容后存储位置的计算方式</td><td align=\"left\">全部按照原来方法进行计算（即hashCode -&gt;&gt; 扰动函数 -&gt;&gt; (h&amp;length-1)）</td><td align=\"left\">按照扩容后的规律计算（即扩容后的位置=原位置 or 原位置 + 旧容量）</td></tr></tbody></table></div>\r\n<h3><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"HashMapput_571\"></a>HashMap的put方法的具体流程？</h3>\r\n<p>当我们put的时候，首先计算 <code>key</code>的<code>hash</code>值，这里调用了 <code>hash</code>方法，<code>hash</code>方法实际是让<code>key.hashCode()</code>与<code>key.hashCode()&gt;&gt;&gt;16</code>进行异或操作，高16bit补0，一个数和0异或不变，所以 hash 函数大概的作用就是：<strong>高16bit不变，低16bit和高16bit做了一个异或，目的是减少碰撞</strong>。按照函数注释，因为bucket数组大小是2的幂，计算下标<code>index = (table.length - 1) &amp; hash</code>，如果不做 hash 处理，相当于散列生效的只有几个低 bit 位，为了减少散列的碰撞，设计者综合考虑了速度、作用、质量之后，使用高16bit和低16bit异或来简单处理减少碰撞，而且JDK8中用了复杂度 O（logn）的树结构来提升碰撞下的性能。</p>\r\n<p>putVal方法执行流程图</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20191214222552803.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"putVal方法执行流程图\"></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> V <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>K key<span class=\"token punctuation\">,</span> V value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">putVal</span><span class=\"token punctuation\">(</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>Object key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">&gt;&gt;&gt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">//实现Map.put和相关方法</span>\r\n<span class=\"token keyword\">final</span> V <span class=\"token function\">putVal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hash<span class=\"token punctuation\">,</span> K key<span class=\"token punctuation\">,</span> V value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> onlyIfAbsent<span class=\"token punctuation\">,</span>\r\n                   <span class=\"token keyword\">boolean</span> evict<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    Node<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> tab<span class=\"token punctuation\">;</span> Node<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span> p<span class=\"token punctuation\">;</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// 步骤①：tab为空则创建 </span>\r\n    <span class=\"token comment\">// table未初始化或者长度为0，进行扩容</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>tab <span class=\"token operator\">=</span> table<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> null <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n        n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tab <span class=\"token operator\">=</span> <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// 步骤②：计算index，并对null做处理  </span>\r\n    <span class=\"token comment\">// (n - 1) &amp; hash 确定元素存放在哪个桶中，桶为空，新生成结点放入桶中(此时，这个结点是放在数组中)</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">[</span>i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> hash<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span>\r\n        tab<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">newNode</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// 桶中已经存在元素</span>\r\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        Node<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span> e<span class=\"token punctuation\">;</span> K k<span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">// 步骤③：节点key存在，直接覆盖value </span>\r\n        <span class=\"token comment\">// 比较桶中第一个元素(数组中的结点)的hash值相等，key相等</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span>\r\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!=</span> null <span class=\"token operator\">&amp;&amp;</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token comment\">// 将第一个元素赋值给e，用e来记录</span>\r\n                e <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">// 步骤④：判断该链为红黑树 </span>\r\n        <span class=\"token comment\">// hash值不相等，即key不相等；为红黑树结点</span>\r\n        <span class=\"token comment\">// 如果当前元素类型为TreeNode，表示为红黑树，putTreeVal返回待存放的node, e可能为null</span>\r\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">TreeNode</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token comment\">// 放入树中</span>\r\n            e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>TreeNode<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">)</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putTreeVal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> tab<span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">// 步骤⑤：该链为链表 </span>\r\n        <span class=\"token comment\">// 为链表结点</span>\r\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token comment\">// 在链表最末插入结点</span>\r\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> binCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>binCount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token comment\">// 到达链表的尾部</span>\r\n\r\n                <span class=\"token comment\">//判断该链表尾部指针是不是空的</span>\r\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    <span class=\"token comment\">// 在尾部插入新结点</span>\r\n                    p<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> <span class=\"token function\">newNode</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token comment\">//判断链表的长度是否达到转化红黑树的临界值，临界值为8</span>\r\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>binCount <span class=\"token operator\">&gt;=</span> TREEIFY_THRESHOLD <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// -1 for 1st</span>\r\n                        <span class=\"token comment\">//链表结构转树形结构</span>\r\n                        <span class=\"token function\">treeifyBin</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token comment\">// 跳出循环</span>\r\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n                <span class=\"token comment\">// 判断链表中结点的key值与插入的元素的key值是否相等</span>\r\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span>\r\n                    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!=</span> null <span class=\"token operator\">&amp;&amp;</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token comment\">// 相等，跳出循环</span>\r\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token comment\">// 用于遍历桶中的链表，与前面的e = p.next组合，可以遍历链表</span>\r\n                p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token comment\">//判断当前的key已经存在的情况下，再来一个相同的hash值、key值时，返回新来的value这个值</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token comment\">// 记录e的value</span>\r\n            V oldValue <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">// onlyIfAbsent为false或者旧值为null</span>\r\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>onlyIfAbsent <span class=\"token operator\">||</span> oldValue <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span>\r\n                <span class=\"token comment\">//用新值替换旧值</span>\r\n                e<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">// 访问后回调</span>\r\n            <span class=\"token function\">afterNodeAccess</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">// 返回旧值</span>\r\n            <span class=\"token keyword\">return</span> oldValue<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token comment\">// 结构性修改</span>\r\n    <span class=\"token operator\">++</span>modCount<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// 步骤⑥：超过最大容量就扩容 </span>\r\n    <span class=\"token comment\">// 实际大小大于阈值则扩容</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>size <span class=\"token operator\">&gt;</span> threshold<span class=\"token punctuation\">)</span>\r\n        <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// 插入后回调</span>\r\n    <span class=\"token function\">afterNodeInsertion</span><span class=\"token punctuation\">(</span>evict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> null<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li><li style=\"color: rgb(153, 153, 153);\">40</li><li style=\"color: rgb(153, 153, 153);\">41</li><li style=\"color: rgb(153, 153, 153);\">42</li><li style=\"color: rgb(153, 153, 153);\">43</li><li style=\"color: rgb(153, 153, 153);\">44</li><li style=\"color: rgb(153, 153, 153);\">45</li><li style=\"color: rgb(153, 153, 153);\">46</li><li style=\"color: rgb(153, 153, 153);\">47</li><li style=\"color: rgb(153, 153, 153);\">48</li><li style=\"color: rgb(153, 153, 153);\">49</li><li style=\"color: rgb(153, 153, 153);\">50</li><li style=\"color: rgb(153, 153, 153);\">51</li><li style=\"color: rgb(153, 153, 153);\">52</li><li style=\"color: rgb(153, 153, 153);\">53</li><li style=\"color: rgb(153, 153, 153);\">54</li><li style=\"color: rgb(153, 153, 153);\">55</li><li style=\"color: rgb(153, 153, 153);\">56</li><li style=\"color: rgb(153, 153, 153);\">57</li><li style=\"color: rgb(153, 153, 153);\">58</li><li style=\"color: rgb(153, 153, 153);\">59</li><li style=\"color: rgb(153, 153, 153);\">60</li><li style=\"color: rgb(153, 153, 153);\">61</li><li style=\"color: rgb(153, 153, 153);\">62</li><li style=\"color: rgb(153, 153, 153);\">63</li><li style=\"color: rgb(153, 153, 153);\">64</li><li style=\"color: rgb(153, 153, 153);\">65</li><li style=\"color: rgb(153, 153, 153);\">66</li><li style=\"color: rgb(153, 153, 153);\">67</li><li style=\"color: rgb(153, 153, 153);\">68</li><li style=\"color: rgb(153, 153, 153);\">69</li><li style=\"color: rgb(153, 153, 153);\">70</li><li style=\"color: rgb(153, 153, 153);\">71</li><li style=\"color: rgb(153, 153, 153);\">72</li><li style=\"color: rgb(153, 153, 153);\">73</li><li style=\"color: rgb(153, 153, 153);\">74</li><li style=\"color: rgb(153, 153, 153);\">75</li><li style=\"color: rgb(153, 153, 153);\">76</li><li style=\"color: rgb(153, 153, 153);\">77</li><li style=\"color: rgb(153, 153, 153);\">78</li><li style=\"color: rgb(153, 153, 153);\">79</li><li style=\"color: rgb(153, 153, 153);\">80</li><li style=\"color: rgb(153, 153, 153);\">81</li><li style=\"color: rgb(153, 153, 153);\">82</li><li style=\"color: rgb(153, 153, 153);\">83</li><li style=\"color: rgb(153, 153, 153);\">84</li><li style=\"color: rgb(153, 153, 153);\">85</li><li style=\"color: rgb(153, 153, 153);\">86</li><li style=\"color: rgb(153, 153, 153);\">87</li></ul></pre>\r\n<p>①.判断键值对数组table[i]是否为空或为null，否则执行resize()进行扩容；</p>\r\n<p>②.根据键值key计算hash值得到插入的数组索引i，如果table[i]==null，直接新建节点添加，转向⑥，如果table[i]不为空，转向③；</p>\r\n<p>③.判断table[i]的首个元素是否和key一样，如果相同直接覆盖value，否则转向④，这里的相同指的是hashCode以及equals；</p>\r\n<p>④.判断table[i] 是否为treeNode，即table[i] 是否是红黑树，如果是红黑树，则直接在树中插入键值对，否则转向⑤；</p>\r\n<p>⑤.遍历table[i]，判断链表长度是否大于8，大于8的话把链表转换为红黑树，在红黑树中执行插入操作，否则进行链表的插入操作；遍历过程中若发现key已经存在直接覆盖value即可；</p>\r\n<p>⑥.插入成功后，判断实际存在的键值对数量size是否超多了最大容量threshold，如果超过，进行扩容。</p>\r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"HashMap_683\"></a>HashMap的扩容操作是怎么实现的？</h3>\r\n<p>①.在jdk1.8中，resize方法是在hashmap中的键值对大于阀值时或者初始化时，就调用resize方法进行扩容；</p>\r\n<p>②.每次扩展的时候，都是扩展2倍；</p>\r\n<p>③.扩展后Node对象的位置要么在原位置，要么移动到原偏移量两倍的位置。</p>\r\n<p>在putVal()中，我们看到在这个函数里面使用到了2次resize()方法，resize()方法表示的在进行第一次初始化时会对其进行扩容，或者当该数组的实际大小大于其临界值值(第一次为12),这个时候在扩容的同时也会伴随的桶上面的元素进行重新分发，这也是JDK1.8版本的一个优化的地方，在1.7中，扩容之后需要重新去计算其Hash值，根据Hash值对其进行分发，但在1.8版本中，则是根据在同一个桶的位置中进行判断(e.hash &amp; oldCap)是否为0，重新进行hash分配后，该元素的位置要么停留在原始位置，要么移动到原始位置+增加的数组大小这个位置上</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">final</span> Node<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    Node<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> oldTab <span class=\"token operator\">=</span> table<span class=\"token punctuation\">;</span><span class=\"token comment\">//oldTab指向hash桶数组</span>\r\n    <span class=\"token keyword\">int</span> oldCap <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>oldTab <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> oldTab<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> oldThr <span class=\"token operator\">=</span> threshold<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> newCap<span class=\"token punctuation\">,</span> newThr <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldCap <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//如果oldCap不为空的话，就是hash桶数组不为空</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldCap <span class=\"token operator\">&gt;=</span> MAXIMUM_CAPACITY<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//如果大于最大容量了，就赋值为整数最大的阀值</span>\r\n            threshold <span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">return</span> oldTab<span class=\"token punctuation\">;</span><span class=\"token comment\">//返回</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token comment\">//如果当前hash桶数组的长度在扩容后仍然小于最大容量 并且oldCap大于默认值16</span>\r\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>newCap <span class=\"token operator\">=</span> oldCap <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> MAXIMUM_CAPACITY <span class=\"token operator\">&amp;&amp;</span>\r\n                 oldCap <span class=\"token operator\">&gt;=</span> DEFAULT_INITIAL_CAPACITY<span class=\"token punctuation\">)</span>\r\n            newThr <span class=\"token operator\">=</span> oldThr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// double threshold 双倍扩容阀值threshold</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token comment\">// 旧的容量为0，但threshold大于零，代表有参构造有cap传入，threshold已经被初始化成最小2的n次幂</span>\r\n    <span class=\"token comment\">// 直接将该值赋给新的容量</span>\r\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldThr <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// initial capacity was placed in threshold</span>\r\n        newCap <span class=\"token operator\">=</span> oldThr<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// 无参构造创建的map，给出默认容量和threshold 16, 16*0.75</span>\r\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>               <span class=\"token comment\">// zero initial threshold signifies using defaults</span>\r\n        newCap <span class=\"token operator\">=</span> DEFAULT_INITIAL_CAPACITY<span class=\"token punctuation\">;</span>\r\n        newThr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>DEFAULT_LOAD_FACTOR <span class=\"token operator\">*</span> DEFAULT_INITIAL_CAPACITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token comment\">// 新的threshold = 新的cap * 0.75</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newThr <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">float</span> ft <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>newCap <span class=\"token operator\">*</span> loadFactor<span class=\"token punctuation\">;</span>\r\n        newThr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>newCap <span class=\"token operator\">&lt;</span> MAXIMUM_CAPACITY <span class=\"token operator\">&amp;&amp;</span> ft <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>MAXIMUM_CAPACITY <span class=\"token operator\">?</span>\r\n                  <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>ft <span class=\"token operator\">:</span> Integer<span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    threshold <span class=\"token operator\">=</span> newThr<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// 计算出新的数组长度后赋给当前成员变量table</span>\r\n    <span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"rawtypes\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"unchecked\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n        Node<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> newTab <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Node<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">[</span>newCap<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//新建hash桶数组</span>\r\n    table <span class=\"token operator\">=</span> newTab<span class=\"token punctuation\">;</span><span class=\"token comment\">//将新数组的值复制给旧的hash桶数组</span>\r\n    <span class=\"token comment\">// 如果原先的数组没有初始化，那么resize的初始化工作到此结束，否则进入扩容元素重排逻辑，使其均匀的分散</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldTab <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// 遍历新数组的所有桶下标</span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> oldCap<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            Node<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span> e<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> oldTab<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token comment\">// 旧数组的桶下标赋给临时变量e，并且解除旧数组中的引用，否则就数组无法被GC回收</span>\r\n                oldTab<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n                <span class=\"token comment\">// 如果e.next==null，代表桶中就一个元素，不存在链表或者红黑树</span>\r\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>next <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span>\r\n                    <span class=\"token comment\">// 用同样的hash映射算法把该元素加入新的数组</span>\r\n                    newTab<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>newCap <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\r\n                <span class=\"token comment\">// 如果e是TreeNode并且e.next!=null，那么处理树中元素的重排</span>\r\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">TreeNode</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>TreeNode<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">)</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> newTab<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> oldCap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token comment\">// e是链表的头并且e.next!=null，那么处理链表中元素重排</span>\r\n                <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">// preserve order</span>\r\n                    <span class=\"token comment\">// loHead,loTail 代表扩容后不用变换下标，见注1</span>\r\n                    Node<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span> loHead <span class=\"token operator\">=</span> null<span class=\"token punctuation\">,</span> loTail <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n                    <span class=\"token comment\">// hiHead,hiTail 代表扩容后变换下标，见注1</span>\r\n                    Node<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span> hiHead <span class=\"token operator\">=</span> null<span class=\"token punctuation\">,</span> hiTail <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n                    Node<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span> next<span class=\"token punctuation\">;</span>\r\n                    <span class=\"token comment\">// 遍历链表</span>\r\n                    <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                        next <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\r\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">&amp;</span> oldCap<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loTail <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span>\r\n                                <span class=\"token comment\">// 初始化head指向链表当前元素e，e不一定是链表的第一个元素，初始化后loHead</span>\r\n                                <span class=\"token comment\">// 代表下标保持不变的链表的头元素</span>\r\n                                loHead <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\r\n                            <span class=\"token keyword\">else</span>\r\n                                <span class=\"token comment\">// loTail.next指向当前e</span>\r\n                                loTail<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\r\n                            <span class=\"token comment\">// loTail指向当前的元素e</span>\r\n                            <span class=\"token comment\">// 初始化后，loTail和loHead指向相同的内存，所以当loTail.next指向下一个元素时，</span>\r\n                            <span class=\"token comment\">// 底层数组中的元素的next引用也相应发生变化，造成lowHead.next.next.....</span>\r\n                            <span class=\"token comment\">// 跟随loTail同步，使得lowHead可以链接到所有属于该链表的元素。</span>\r\n                            loTail <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\r\n                        <span class=\"token punctuation\">}</span>\r\n                        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hiTail <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span>\r\n                                <span class=\"token comment\">// 初始化head指向链表当前元素e, 初始化后hiHead代表下标更改的链表头元素</span>\r\n                                hiHead <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\r\n                            <span class=\"token keyword\">else</span>\r\n                                hiTail<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\r\n                            hiTail <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\r\n                        <span class=\"token punctuation\">}</span>\r\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> next<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token comment\">// 遍历结束, 将tail指向null，并把链表头放入新数组的相应下标，形成新的映射。</span>\r\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loTail <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                        loTail<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n                        newTab<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> loHead<span class=\"token punctuation\">;</span>\r\n                    <span class=\"token punctuation\">}</span>\r\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hiTail <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                        hiTail<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n                        newTab<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> oldCap<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> hiHead<span class=\"token punctuation\">;</span>\r\n                    <span class=\"token punctuation\">}</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> newTab<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li><li style=\"color: rgb(153, 153, 153);\">40</li><li style=\"color: rgb(153, 153, 153);\">41</li><li style=\"color: rgb(153, 153, 153);\">42</li><li style=\"color: rgb(153, 153, 153);\">43</li><li style=\"color: rgb(153, 153, 153);\">44</li><li style=\"color: rgb(153, 153, 153);\">45</li><li style=\"color: rgb(153, 153, 153);\">46</li><li style=\"color: rgb(153, 153, 153);\">47</li><li style=\"color: rgb(153, 153, 153);\">48</li><li style=\"color: rgb(153, 153, 153);\">49</li><li style=\"color: rgb(153, 153, 153);\">50</li><li style=\"color: rgb(153, 153, 153);\">51</li><li style=\"color: rgb(153, 153, 153);\">52</li><li style=\"color: rgb(153, 153, 153);\">53</li><li style=\"color: rgb(153, 153, 153);\">54</li><li style=\"color: rgb(153, 153, 153);\">55</li><li style=\"color: rgb(153, 153, 153);\">56</li><li style=\"color: rgb(153, 153, 153);\">57</li><li style=\"color: rgb(153, 153, 153);\">58</li><li style=\"color: rgb(153, 153, 153);\">59</li><li style=\"color: rgb(153, 153, 153);\">60</li><li style=\"color: rgb(153, 153, 153);\">61</li><li style=\"color: rgb(153, 153, 153);\">62</li><li style=\"color: rgb(153, 153, 153);\">63</li><li style=\"color: rgb(153, 153, 153);\">64</li><li style=\"color: rgb(153, 153, 153);\">65</li><li style=\"color: rgb(153, 153, 153);\">66</li><li style=\"color: rgb(153, 153, 153);\">67</li><li style=\"color: rgb(153, 153, 153);\">68</li><li style=\"color: rgb(153, 153, 153);\">69</li><li style=\"color: rgb(153, 153, 153);\">70</li><li style=\"color: rgb(153, 153, 153);\">71</li><li style=\"color: rgb(153, 153, 153);\">72</li><li style=\"color: rgb(153, 153, 153);\">73</li><li style=\"color: rgb(153, 153, 153);\">74</li><li style=\"color: rgb(153, 153, 153);\">75</li><li style=\"color: rgb(153, 153, 153);\">76</li><li style=\"color: rgb(153, 153, 153);\">77</li><li style=\"color: rgb(153, 153, 153);\">78</li><li style=\"color: rgb(153, 153, 153);\">79</li><li style=\"color: rgb(153, 153, 153);\">80</li><li style=\"color: rgb(153, 153, 153);\">81</li><li style=\"color: rgb(153, 153, 153);\">82</li><li style=\"color: rgb(153, 153, 153);\">83</li><li style=\"color: rgb(153, 153, 153);\">84</li><li style=\"color: rgb(153, 153, 153);\">85</li><li style=\"color: rgb(153, 153, 153);\">86</li><li style=\"color: rgb(153, 153, 153);\">87</li><li style=\"color: rgb(153, 153, 153);\">88</li><li style=\"color: rgb(153, 153, 153);\">89</li><li style=\"color: rgb(153, 153, 153);\">90</li><li style=\"color: rgb(153, 153, 153);\">91</li><li style=\"color: rgb(153, 153, 153);\">92</li><li style=\"color: rgb(153, 153, 153);\">93</li><li style=\"color: rgb(153, 153, 153);\">94</li><li style=\"color: rgb(153, 153, 153);\">95</li><li style=\"color: rgb(153, 153, 153);\">96</li><li style=\"color: rgb(153, 153, 153);\">97</li></ul></pre>\r\n<h3><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"HashMap_797\"></a>HashMap是怎么解决哈希冲突的？</h3>\r\n<p>答：在解决这个问题之前，我们首先需要知道<strong>什么是哈希冲突</strong>，而在了解哈希冲突之前我们还要知道<strong>什么是哈希</strong>才行；</p>\r\n<h4><a id=\"_801\"></a>什么是哈希？</h4>\r\n<p><strong>Hash，一般翻译为“散列”，也有直接音译为“哈希”的，这就是把任意长度的输入通过散列算法，变换成固定长度的输出，该输出就是散列值（哈希值）</strong>；这种转换是一种压缩映射，也就是，散列值的空间通常远小于输入的空间，不同的输入可能会散列成相同的输出，所以不可能从散列值来唯一的确定输入值。<strong>简单的说就是一种将任意长度的消息压缩到某一固定长度的消息摘要的函数</strong>。</p>\r\n<p>所有散列函数都有如下一个基本特性**：根据同一散列函数计算出的散列值如果不同，那么输入值肯定也不同。但是，根据同一散列函数计算出的散列值如果相同，输入值不一定相同**。</p>\r\n<h4><a id=\"_807\"></a>什么是哈希冲突？</h4>\r\n<p><strong>当两个不同的输入值，根据同一散列函数计算出相同的散列值的现象，我们就把它叫做碰撞（哈希碰撞）</strong>。</p>\r\n<h4><a id=\"HashMap_811\"></a>HashMap的数据结构</h4>\r\n<p>在Java中，保存数据有两种比较简单的数据结构：数组和链表。<strong>数组的特点是：寻址容易，插入和删除困难；链表的特点是：寻址困难，但插入和删除容易</strong>；所以我们将数组和链表结合在一起，发挥两者各自的优势，使用一种叫做<strong>链地址法</strong>的方式可以解决哈希冲突：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy83ODk2ODkwLWM2NmE0YmQ4OTA3ZjQ5ZjYucG5n?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>这样我们就可以将拥有相同哈希值的对象组织成一个链表放在hash值所对应的bucket下，<strong>但相比于hashCode返回的int类型，我们HashMap初始的容量大小<code>DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4</code>（即2的四次方16）要远小于int类型的范围，所以我们如果只是单纯的用hashCode取余来获取对应的bucket这将会大大增加哈希碰撞的概率，并且最坏情况下还会将HashMap变成一个单链表</strong>，所以我们还需要对hashCode作一定的优化</p>\r\n<h4><a id=\"hash_819\"></a>hash()函数</h4>\r\n<p>上面提到的问题，主要是因为如果使用hashCode取余，那么相当于<strong>参与运算的只有hashCode的低位</strong>，高位是没有起到任何作用的，所以我们的思路就是让hashCode取值出的高位也参与运算，进一步降低hash碰撞的概率，使得数据分布更平均，我们把这样的操作称为<strong>扰动</strong>，在<strong>JDK 1.8</strong>中的hash()函数如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>Object key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">&gt;&gt;&gt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 与自己右移16位进行异或运算（高低位异或）</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>这比在<strong>JDK 1.7</strong>中，更为简洁，<strong>相比在1.7中的4次位运算，5次异或运算（9次扰动），在1.8中，只进行了1次位运算和1次异或运算（2次扰动）</strong>；</p>\r\n<h4><a id=\"JDK18_832\"></a>JDK1.8新增红黑树</h4>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy83ODk2ODkwLTc5OGYxMzg3ZTNmOGRlOWEucG5n?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>通过上面的<strong>链地址法（使用散列表）<strong>和</strong>扰动函数</strong>我们成功让我们的数据分布更平均，哈希碰撞减少，但是当我们的HashMap中存在大量数据时，加入我们某个bucket下对应的链表有n个元素，那么遍历时间复杂度就为O(n)，为了针对这个问题，JDK1.8在HashMap中新增了红黑树的数据结构，进一步使得遍历复杂度降低至O(logn)；</p>\r\n<h4><a id=\"_838\"></a>总结</h4>\r\n<p>简单总结一下HashMap是使用了哪些方法来有效解决哈希冲突的：</p>\r\n<p><strong>1. 使用链地址法（使用散列表）来链接拥有相同hash值的数据；</strong><br> <strong>2. 使用2次扰动函数（hash函数）来降低哈希冲突的概率，使得数据分布更平均；</strong><br> <strong>3. 引入红黑树进一步降低遍历的时间复杂度，使得遍历更快；</strong></p>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"_Map__key_848\"></a>能否使用任何类作为 Map 的 key？</h3>\r\n<p>可以使用任何类作为 Map 的 key，然而在使用之前，需要考虑以下几点：</p>\r\n<ul><li> <p>如果类重写了 equals() 方法，也应该重写 hashCode() 方法。</p> </li><li> <p>类的所有实例需要遵循与 equals() 和 hashCode() 相关的规则。</p> </li><li> <p>如果一个类没有使用 equals()，不应该在 hashCode() 中使用它。</p> </li><li> <p>用户自定义 Key 类最佳实践是使之为不可变的，这样 hashCode() 值可以被缓存起来，拥有更好的性能。不可变的类也可以确保 hashCode() 和 equals() 在未来不会改变，这样就会解决与可变相关的问题了。</p> </li></ul>\r\n<h3><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"HashMapStringIntegerK_863\"></a>为什么HashMap中String、Integer这样的包装类适合作为K？</h3>\r\n<p>答：String、Integer等包装类的特性能够保证Hash值的不可更改性和计算准确性，能够有效的减少Hash碰撞的几率</p>\r\n<ol><li>都是final类型，即不可变性，保证key的不可更改性，不会存在获取hash值不同的情况</li><li>内部已重写了<code>equals()</code>、<code>hashCode()</code>等方法，遵守了HashMap内部的规范（不清楚可以去上面看看putValue的过程），不容易出现Hash值计算错误的情况；</li></ol>\r\n<h3><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"ObjectHashMapKey_872\"></a>如果使用Object作为HashMap的Key，应该怎么办呢？</h3>\r\n<p>答：重写<code>hashCode()</code>和<code>equals()</code>方法</p>\r\n<ol><li><strong>重写<code>hashCode()</code>是因为需要计算存储数据的存储位置</strong>，需要注意不要试图从散列码计算中排除掉一个对象的关键部分来提高性能，这样虽然能更快但可能会导致更多的Hash碰撞；</li><li><strong>重写<code>equals()</code>方法</strong>，需要遵守自反性、对称性、传递性、一致性以及对于任何非null的引用值x，x.equals(null)必须返回false的这几个特性，<strong>目的是为了保证key在哈希表中的唯一性</strong>；</li></ol>\r\n<h3><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"HashMaphashCodetable_881\"></a>HashMap为什么不直接使用hashCode()处理后的哈希值直接作为table的下标？</h3>\r\n<p>答：<code>hashCode()</code>方法返回的是int整数类型，其范围为-(2 ^ 31)~(2 ^ 31 - 1)，约有40亿个映射空间，而HashMap的容量范围是在16（初始化默认值）~2 ^ 30，HashMap通常情况下是取不到最大值的，并且设备上也难以提供这么多的存储空间，从而导致通过<code>hashCode()</code>计算出的哈希值可能不在数组大小范围内，进而无法匹配存储位置；</p>\r\n<p><strong>那怎么解决呢？</strong></p>\r\n<ol><li>HashMap自己实现了自己的<code>hash()</code>方法，通过两次扰动使得它自己的哈希值高低位自行进行异或运算，降低哈希碰撞概率也使得数据分布更平均；</li><li>在保证数组长度为2的幂次方的时候，使用<code>hash()</code>运算之后的值与运算（&amp;）（数组长度 - 1）来获取数组下标的方式进行存储，这样一来是比取余操作更加有效率，二来也是因为只有当数组长度为2的幂次方时，h&amp;(length-1)才等价于h%length，三来解决了“哈希值与数组大小范围不匹配”的问题；</li></ol>\r\n<h3><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"HashMap_2_892\"></a>HashMap 的长度为什么是2的幂次方</h3>\r\n<p>为了能让 HashMap 存取高效，尽量较少碰撞，也就是要尽量把数据分配均匀，每个链表/红黑树长度大致相同。这个实现就是把数据存到哪个链表/红黑树中的算法。</p>\r\n<p><strong>这个算法应该如何设计呢？</strong></p>\r\n<p>我们首先可能会想到采用%取余的操作来实现。但是，重点来了：“取余(%)操作中如果除数是2的幂次则等价于与其除数减一的与(&amp;)操作（也就是说 hash%length==hash&amp;(length-1)的前提是 length 是2的 n 次方；）。” 并且 采用二进制位操作 &amp;，相对于%能够提高运算效率，这就解释了 HashMap 的长度为什么是2的幂次方。</p>\r\n<p><strong>那为什么是两次扰动呢？</strong></p>\r\n<p>答：这样就是加大哈希值低位的随机性，使得分布更均匀，从而提高对应数组存储下标位置的随机性&amp;均匀性，最终减少Hash冲突，两次就够了，已经达到了高位低位同时参与运算的目的；</p>\r\n<h3><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"HashMap__HashTable__906\"></a>HashMap 与 HashTable 有什么区别？</h3>\r\n<ol><li><strong>线程安全</strong>： HashMap 是非线程安全的，HashTable 是线程安全的；HashTable 内部的方法基本都经过 <code>synchronized</code> 修饰。（如果你要保证线程安全的话就使用 ConcurrentHashMap 吧！）；</li><li><strong>效率</strong>： 因为线程安全的问题，HashMap 要比 HashTable 效率高一点。另外，HashTable 基本被淘汰，不要在代码中使用它；</li><li><strong>对Null key 和Null value的支持</strong>： HashMap 中，null 可以作为键，这样的键只有一个，可以有一个或多个键所对应的值为 null。但是在 HashTable 中 put 进的键值只要有一个 null，直接抛NullPointerException。</li><li>**初始容量大小和每次扩充容量大小的不同 **： ①创建时如果不指定容量初始值，Hashtable 默认的初始大小为11，之后每次扩充，容量变为原来的2n+1。HashMap 默认的初始化大小为16。之后每次扩充，容量变为原来的2倍。②创建时如果给定了容量初始值，那么 Hashtable 会直接使用你给定的大小，而 HashMap 会将其扩充为2的幂次方大小。也就是说 HashMap 总是使用2的幂作为哈希表的大小，后面会介绍到为什么是2的幂次方。</li><li><strong>底层数据结构</strong>： JDK1.8 以后的 HashMap 在解决哈希冲突时有了较大的变化，当链表长度大于阈值（默认为8）时，将链表转化为红黑树，以减少搜索时间。Hashtable 没有这样的机制。</li><li>推荐使用：在 Hashtable 的类注释可以看到，Hashtable 是保留类不建议使用，推荐在单线程环境下使用 HashMap 替代，如果需要多线程使用则用 ConcurrentHashMap 替代。</li></ol>\r\n<h3><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"_HashMap__TreeMap_917\"></a>如何决定使用 HashMap 还是 TreeMap？</h3>\r\n<p>对于在Map中插入、删除和定位元素这类操作，HashMap是最好的选择。然而，假如你需要对一个有序的key集合进行遍历，TreeMap是更好的选择。基于你的collection的大小，也许向HashMap中添加元素会更快，将map换为TreeMap进行有序key的遍历。</p>\r\n<h3><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"HashMap__ConcurrentHashMap__923\"></a>HashMap 和 ConcurrentHashMap 的区别</h3>\r\n<ol><li>ConcurrentHashMap对整个桶数组进行了分割分段(Segment)，然后在每一个分段上都用lock锁进行保护，相对于HashTable的synchronized锁的粒度更精细了一些，并发性能更好，而HashMap没有锁机制，不是线程安全的。（JDK1.8之后ConcurrentHashMap启用了一种全新的方式实现,利用CAS算法。）</li><li>HashMap的键值对允许有null，但是ConCurrentHashMap都不允许。</li></ol>\r\n<h3><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"ConcurrentHashMap__Hashtable__930\"></a>ConcurrentHashMap 和 Hashtable 的区别？</h3>\r\n<p>ConcurrentHashMap 和 Hashtable 的区别主要体现在实现线程安全的方式上不同。</p>\r\n<ul><li><strong>底层数据结构</strong>： JDK1.7的 ConcurrentHashMap 底层采用 <strong>分段的数组+链表</strong> 实现，JDK1.8 采用的数据结构跟HashMap1.8的结构一样，数组+链表/红黑二叉树。Hashtable 和 JDK1.8 之前的 HashMap 的底层数据结构类似都是采用 <strong>数组+链表</strong> 的形式，数组是 HashMap 的主体，链表则是主要为了解决哈希冲突而存在的；</li><li><strong>实现线程安全的方式（重要）</strong>： ① <strong>在JDK1.7的时候，ConcurrentHashMap（分段锁）</strong> 对整个桶数组进行了分割分段(Segment)，每一把锁只锁容器其中一部分数据，多线程访问容器里不同数据段的数据，就不会存在锁竞争，提高并发访问率。（默认分配16个Segment，比Hashtable效率提高16倍。） <strong>到了 JDK1.8 的时候已经摒弃了Segment的概念，而是直接用 Node 数组+链表+红黑树的数据结构来实现，并发控制使用 synchronized 和 CAS 来操作。（JDK1.6以后 对 synchronized锁做了很多优化）</strong> 整个看起来就像是优化过且线程安全的 HashMap，虽然在JDK1.8中还能看到 Segment 的数据结构，但是已经简化了属性，只是为了兼容旧版本；② <strong>Hashtable(同一把锁)</strong> :使用 synchronized 来保证线程安全，效率非常低下。当一个线程访问同步方法时，其他线程也访问同步方法，可能会进入阻塞或轮询状态，如使用 put 添加元素，另一个线程不能使用 put 添加元素，也不能使用 get，竞争会越来越激烈效率越低。</li></ul>\r\n<p><strong>两者的对比图</strong>：</p>\r\n<p>HashTable:</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC84LzIzLzE2NTY2NzdhNmYyNTYxOTY?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>JDK1.7的ConcurrentHashMap：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC84LzIzLzE2NTY2NzdhNmYwMDhiZTQ?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>JDK1.8的ConcurrentHashMap（TreeBin: 红黑二叉树节点 Node: 链表节点）：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC84LzIzLzE2NTY2NzdhNmYxNGUwMzk?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>答：ConcurrentHashMap 结合了 HashMap 和 HashTable 二者的优势。HashMap 没有考虑同步，HashTable 考虑了同步的问题。但是 HashTable 在每次同步执行时都要锁住整个结构。 ConcurrentHashMap 锁的方式是稍微细粒度的。</p>\r\n<h3><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"ConcurrentHashMap__957\"></a>ConcurrentHashMap 底层具体实现知道吗？实现原理是什么？</h3>\r\n<p><strong>JDK1.7</strong></p>\r\n<p>首先将数据分为一段一段的存储，然后给每一段数据配一把锁，当一个线程占用锁访问其中一个段数据时，其他段的数据也能被其他线程访问。</p>\r\n<p>在JDK1.7中，ConcurrentHashMap采用Segment + HashEntry的方式进行实现，结构如下：</p>\r\n<p>一个 ConcurrentHashMap 里包含一个 Segment 数组。Segment 的结构和HashMap类似，是一种数组和链表结构，一个 Segment 包含一个 HashEntry 数组，每个 HashEntry 是一个链表结构的元素，每个 Segment 守护着一个HashEntry数组里的元素，当对 HashEntry 数组的数据进行修改时，必须首先获得对应的 Segment的锁。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy83ODk2ODkwLTY0NTgzNmU3MjJjMmE5ZjkucG5n?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<ol><li>该类包含两个静态内部类 HashEntry 和 Segment ；前者用来封装映射表的键值对，后者用来充当锁的角色；</li><li>Segment 是一种可重入的锁 ReentrantLock，每个 Segment 守护一个HashEntry 数组里得元素，当对 HashEntry 数组的数据进行修改时，必须首先获得对应的 Segment 锁。</li></ol>\r\n<p><strong>JDK1.8</strong></p>\r\n<p>在<strong>JDK1.8中，放弃了Segment臃肿的设计，取而代之的是采用Node + CAS + Synchronized来保证并发安全进行实现</strong>，synchronized只锁定当前链表或红黑二叉树的首节点，这样只要hash不冲突，就不会产生并发，效率又提升N倍。</p>\r\n<p>结构如下：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy83ODk2ODkwLWVjODU2MDM5NWUyNTU0N2EucG5n?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p><strong>附加源码，有需要的可以看看</strong></p>\r\n<p>插入元素过程（建议去看看源码）：</p>\r\n<p>如果相应位置的Node还没有初始化，则调用CAS插入相应的数据；</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>f <span class=\"token operator\">=</span> <span class=\"token function\">tabAt</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">casTabAt</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Node</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// no lock when adding to empty bin</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>如果相应位置的Node不为空，且当前该节点不处于移动状态，则对该节点加synchronized锁，如果该节点的hash不小于0，则遍历链表更新节点或插入新节点；</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fh <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    binCount <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>Node<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span> e <span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>binCount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        K ek<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span>\r\n            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ek <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span>\r\n             <span class=\"token punctuation\">(</span>ek <span class=\"token operator\">!=</span> null <span class=\"token operator\">&amp;&amp;</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>ek<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            oldVal <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>onlyIfAbsent<span class=\"token punctuation\">)</span>\r\n                e<span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        Node<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span> pred <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            pred<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Node</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>K<span class=\"token punctuation\">,</span>V<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li></ul></pre>\r\n<ol><li>如果该节点是TreeBin类型的节点，说明是红黑树结构，则通过putTreeVal方法往红黑树中插入节点；如果binCount不为0，说明put操作对数据产生了影响，如果当前链表的个数达到8个，则通过treeifyBin方法转化为红黑树，如果oldVal不为空，说明是一次更新操作，没有对元素个数产生影响，则直接返回旧值；</li><li>如果插入的是一个新节点，则执行addCount()方法尝试更新元素个数baseCount；</li></ol>\r\n<h2><a name=\"t32\"></a><a name=\"t32\"></a><a id=\"_1026\"></a>辅助工具类</h2>\r\n<h3><a name=\"t33\"></a><a name=\"t33\"></a><a id=\"Array__ArrayList__1028\"></a>Array 和 ArrayList 有何区别？</h3>\r\n<ul><li>Array 可以存储基本数据类型和对象，ArrayList 只能存储对象。</li><li>Array 是指定固定大小的，而 ArrayList 大小是自动扩展的。</li><li>Array 内置方法没有 ArrayList 多，比如 addAll、removeAll、iteration 等方法只有 ArrayList 有。</li></ul>\r\n<p>对于基本类型数据，集合使用自动装箱来减少编码工作量。但是，当处理固定大小的基本数据类型的时候，这种方式相对比较慢。</p>\r\n<h3><a name=\"t34\"></a><a name=\"t34\"></a><a id=\"_Array__List__1038\"></a>如何实现 Array 和 List 之间的转换？</h3>\r\n<ul><li>Array 转 List： Arrays. asList(array) ；</li><li>List 转 Array：List 的 toArray() 方法。</li></ul>\r\n<h3><a name=\"t35\"></a><a name=\"t35\"></a><a id=\"comparable__comparator_1045\"></a>comparable 和 comparator的区别？</h3>\r\n<ul><li>comparable接口实际上是出自java.lang包，它有一个 compareTo(Object obj)方法用来排序</li><li>comparator接口实际上是出自 java.util 包，它有一个compare(Object obj1, Object obj2)方法用来排序</li></ul>\r\n<p>一般我们需要对一个集合使用自定义排序时，我们就要重写compareTo方法或compare方法，当我们需要对某一个集合实现两种排序方式，比如一个song对象中的歌名和歌手名分别采用一种排序方法的话，我们可以重写compareTo方法和使用自制的Comparator方法或者以两个Comparator来实现歌名排序和歌星名排序，第二种代表我们只能使用两个参数版的Collections.sort().</p>\r\n<h3><a name=\"t36\"></a><a name=\"t36\"></a><a id=\"Collection__Collections__1054\"></a>Collection 和 Collections 有什么区别？</h3>\r\n<ul><li>java.util.Collection 是一个集合接口（集合类的一个顶级接口）。它提供了对集合对象进行基本操作的通用接口方法。Collection接口在Java 类库中有很多具体的实现。Collection接口的意义是为各种具体的集合提供了最大化的统一操作方式，其直接继承接口有List与Set。</li><li>Collections则是集合类的一个工具类/帮助类，其中提供了一系列静态方法，用于对集合中元素进行排序、搜索以及线程安全等各种操作。</li></ul>\r\n<h3><a name=\"t37\"></a><a name=\"t37\"></a><a id=\"TreeMap__TreeSet_Collections__sort_1061\"></a>TreeMap 和 TreeSet 在排序时如何比较元素？Collections 工具类中的 sort()方法如何比较元素？</h3>\r\n<p>TreeSet 要求存放的对象所属的类必须实现 Comparable 接口，该接口提供了比较元素的 compareTo()方法，当插入元素时会回调该方法比较元素的大小。TreeMap 要求存放的键值对映射的键必须实现 Comparable 接口从而根据键对元素进 行排 序。</p>\r\n<p>Collections 工具类的 sort 方法有两种重载的形式，</p>\r\n<p>第一种要求传入的待排序容器中存放的对象比较实现 Comparable 接口以实现元素的比较；</p>\r\n<p>第二种不强制性的要求容器中的元素必须可比较，但是要求传入第二个参数，参数是Comparator 接口的子类型（需要重写 compare 方法实现元素的比较），相当于一个临时定义的排序规则，其实就是通过接口注入比较元素大小的算法，也是对回调模式的应用（Java 中对函数式编程的支持）。</p>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_java_container.vue?vue&type=template&id=2a830ce8\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>Java异常面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"Java_37\"></a>Java异常架构与异常关键字</h2>\r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"Java_39\"></a>Java异常简介</h3>\r\n<p>Java异常是Java提供的一种识别及响应错误的一致性机制。<br> Java异常机制可以使程序中异常处理代码和正常业务代码分离，保证程序代码更加优雅，并提高程序健壮性。在有效使用异常的情况下，异常能清晰的回答what, where, why这3个问题：异常类型回答了“什么”被抛出，异常堆栈跟踪回答了“在哪”抛出，异常信息回答了“为什么”会抛出。</p>\r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"Java_46\"></a>Java异常架构</h3>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200314173417278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\" alt=\"\"></p>\r\n<h4><a id=\"1_Throwable_50\"></a>1. Throwable</h4>\r\n<p>Throwable 是 Java 语言中所有错误与异常的超类。</p>\r\n<p>Throwable 包含两个子类：Error（错误）和 Exception（异常），它们通常用于指示发生了异常情况。</p>\r\n<p>Throwable 包含了其线程创建时线程执行堆栈的快照，它提供了 printStackTrace() 等接口用于获取堆栈跟踪数据等信息。</p>\r\n<h4><a id=\"2_Error_60\"></a>2. Error（错误）</h4>\r\n<p><strong>定义</strong>：Error 类及其子类。程序中无法处理的错误，表示运行应用程序中出现了严重的错误。</p>\r\n<p><strong>特点</strong>：此类错误一般表示代码运行时 JVM 出现问题。通常有 Virtual MachineError（虚拟机运行错误）、NoClassDefFoundError（类定义错误）等。比如 OutOfMemoryError：内存不足错误；StackOverflowError：栈溢出错误。此类错误发生时，JVM 将终止线程。</p>\r\n<p>这些错误是不受检异常，非代码性错误。因此，当此类错误发生时，应用程序不应该去处理此类错误。按照Java惯例，我们是不应该实现任何新的Error子类的！</p>\r\n<h4><a id=\"3_Exception_70\"></a>3. Exception（异常）</h4>\r\n<p>程序本身可以捕获并且可以处理的异常。Exception 这种异常又分为两类：运行时异常和编译时异常。</p>\r\n<h5><a id=\"_74\"></a>运行时异常</h5>\r\n<p><strong>定义</strong>：RuntimeException 类及其子类，表示 JVM 在运行期间可能出现的异常。</p>\r\n<p><strong>特点</strong>：Java 编译器不会检查它。也就是说，当程序中可能出现这类异常时，倘若既\"没有通过throws声明抛出它\"，也\"没有用try-catch语句捕获它\"，还是会编译通过。比如NullPointerException空指针异常、ArrayIndexOutBoundException数组下标越界异常、ClassCastException类型转换异常、ArithmeticExecption算术异常。此类异常属于不受检异常，一般是由程序逻辑错误引起的，在程序中可以选择捕获处理，也可以不处理。虽然 Java 编译器不会检查运行时异常，但是我们也可以通过 throws 进行声明抛出，也可以通过 try-catch 对它进行捕获处理。如果产生运行时异常，则需要通过修改代码来进行避免。例如，若会发生除数为零的情况，则需要通过代码避免该情况的发生！</p>\r\n<p>RuntimeException 异常会由 Java 虚拟机自动抛出并自动捕获（<strong>就算我们没写异常捕获语句运行时也会抛出错误</strong>！！），此类异常的出现绝大数情况是代码本身有问题应该从逻辑上去解决并改进代码。</p>\r\n<h5><a id=\"_82\"></a>编译时异常</h5>\r\n<p><strong>定义</strong>: Exception 中除 RuntimeException 及其子类之外的异常。</p>\r\n<p><strong>特点</strong>: Java 编译器会检查它。如果程序中出现此类异常，比如 ClassNotFoundException（没有找到指定的类异常），IOException（IO流异常），要么通过throws进行声明抛出，要么通过try-catch进行捕获处理，否则不能通过编译。在程序中，通常不会自定义该类异常，而是直接使用系统提供的异常类。<strong>该异常我们必须手动在代码里添加捕获语句来处理该异常</strong>。</p>\r\n<h4><a id=\"4__90\"></a>4. 受检异常与非受检异常</h4>\r\n<p>Java 的所有异常可以分为受检异常（checked exception）和非受检异常（unchecked exception）。</p>\r\n<h5><a id=\"_94\"></a>受检异常</h5>\r\n<p>编译器要求必须处理的异常。正确的程序在运行过程中，经常容易出现的、符合预期的异常情况。一旦发生此类异常，就必须采用某种方式进行处理。<strong>除 RuntimeException 及其子类外，其他的 Exception 异常都属于受检异常</strong>。编译器会检查此类异常，也就是说当编译器检查到应用中的某处可能会此类异常时，将会提示你处理本异常——要么使用try-catch捕获，要么使用方法签名中用 throws 关键字抛出，否则编译不通过。</p>\r\n<h5><a id=\"_98\"></a>非受检异常</h5>\r\n<p>编译器不会进行检查并且不要求必须处理的异常，也就说当程序中出现此类异常时，即使我们没有try-catch捕获它，也没有使用throws抛出该异常，编译也会正常通过。<strong>该类异常包括运行时异常（RuntimeException极其子类）和错误（Error）。</strong></p>\r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"Java_104\"></a>Java异常关键字</h3>\r\n<p>• <strong>try</strong> – 用于监听。将要被监听的代码(可能抛出异常的代码)放在try语句块之内，当try语句块内发生异常时，异常就被抛出。<br> • <strong>catch</strong> – 用于捕获异常。catch用来捕获try语句块中发生的异常。<br> • <strong>finally</strong> – finally语句块总是会被执行。它主要用于回收在try块里打开的物力资源(如数据库连接、网络连接和磁盘文件)。只有finally块，执行完成之后，才会回来执行try或者catch块中的return或者throw语句，如果finally中使用了return或者throw等终止方法的语句，则就不会跳回执行，直接停止。<br> • <strong>throw</strong> – 用于抛出异常。<br> • <strong>throws</strong> – 用在方法签名中，用于声明该方法可能抛出的异常。</p>\r\n<h2><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"Java_117\"></a>Java异常处理</h2>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8xMS8xMC8xNmU1NWYyYzMyMWQ5MDlk?x-oss-process=image/format,png\" alt=\"\"></p>\r\n<p>Java 通过面向对象的方法进行异常处理，一旦方法抛出异常，系统自动根据该异常对象寻找合适异常处理器（Exception Handler）来处理该异常，把各种不同的异常进行分类，并提供了良好的接口。在 Java 中，每个异常都是一个对象，它是 Throwable 类或其子类的实例。当一个方法出现异常后便抛出一个异常对象，该对象中包含有异常信息，调用这个对象的方法可以捕获到这个异常并可以对其进行处理。Java 的异常处理是通过 5 个关键词来实现的：try、catch、throw、throws 和 finally。</p>\r\n<p>在Java应用中，异常的处理机制分为声明异常，抛出异常和捕获异常。</p>\r\n<h3><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"_125\"></a>声明异常</h3>\r\n<p>通常，应该捕获那些知道如何处理的异常，将不知道如何处理的异常继续传递下去。传递异常可以在方法签名处使用 <strong>throws</strong> 关键字声明可能会抛出的异常。</p>\r\n<p>注意</p>\r\n<ul><li>非检查异常（Error、RuntimeException 或它们的子类）不可使用 throws 关键字来声明要抛出的异常。</li><li>一个方法出现编译时异常，就需要 try-catch/ throws 处理，否则会导致编译错误。</li></ul>\r\n<h3><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"_136\"></a>抛出异常</h3>\r\n<p>如果你觉得解决不了某些异常问题，且不需要调用者处理，那么你可以抛出异常。</p>\r\n<p>throw关键字作用是在方法内部抛出一个<code>Throwable</code>类型的异常。任何Java代码都可以通过throw语句抛出异常。</p>\r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"_144\"></a>捕获异常</h3>\r\n<p>程序通常在运行之前不报错，但是运行后可能会出现某些未知的错误，但是还不想直接抛出到上一级，那么就需要通过try…catch…的形式进行异常捕获，之后根据不同的异常情况来进行相应的处理。</p>\r\n<h3><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"_150\"></a>如何选择异常类型</h3>\r\n<p>可以根据下图来选择是捕获异常，声明异常还是抛出异常</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200314173209267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\r\n<h3><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"_158\"></a>常见异常处理方式</h3>\r\n<h4><a id=\"_160\"></a>直接抛出异常</h4>\r\n<p>通常，应该捕获那些知道如何处理的异常，将不知道如何处理的异常继续传递下去。传递异常可以在方法签名处使用 <strong>throws</strong> 关键字声明可能会抛出的异常。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>String filePath<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> IOException <span class=\"token punctuation\">{<!-- --></span>\r\n    File file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    String result<span class=\"token punctuation\">;</span>\r\n    BufferedReader reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    reader<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n<h4><a id=\"_176\"></a>封装异常再抛出</h4>\r\n<p>有时我们会从 catch 中抛出一个异常，目的是为了改变异常的类型。多用于在多系统集成时，当某个子系统故障，异常类型可能有多种，可以用统一的异常类型向外暴露，不需暴露太多内部异常细节。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>String filePath<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> MyException <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// code</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        MyException ex <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"read file failed.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        ex<span class=\"token punctuation\">.</span><span class=\"token function\">initCause</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">throw</span> ex<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n<h4><a id=\"_192\"></a>捕获异常</h4>\r\n<p>在一个 try-catch 语句块中可以捕获多个异常类型，并对不同类型的异常做出不同的处理</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>String filePath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// code</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FileNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// handle FileNotFoundException</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// handle IOException</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n<p>同一个 catch 也可以捕获多种类型异常，用 | 隔开</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>String filePath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// code</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FileNotFoundException</span> <span class=\"token operator\">|</span> UnknownHostException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// handle FileNotFoundException or UnknownHostException</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// handle IOException</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n<h4><a id=\"_222\"></a>自定义异常</h4>\r\n<p>习惯上，定义一个异常类应包含两个构造函数，一个无参构造函数和一个带有详细描述信息的构造函数（Throwable 的 toString 方法会打印这些详细信息，调试时很有用）</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyException</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">MyException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">MyException</span><span class=\"token punctuation\">(</span>String msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token comment\">// ...</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h4><a id=\"trycatchfinally_236\"></a>try-catch-finally</h4>\r\n<p>当方法中发生异常，异常处之后的代码不会再执行，如果之前获取了一些本地资源需要释放，则需要在方法正常结束时和 catch 语句中都调用释放本地资源的代码，显得代码比较繁琐，finally 语句可以解决这个问题。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>String filePath<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> MyException <span class=\"token punctuation\">{<!-- --></span>\r\n    File file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    String result<span class=\"token punctuation\">;</span>\r\n    BufferedReader reader <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"readFile method catch block.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        MyException ex <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"read file failed.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        ex<span class=\"token punctuation\">.</span><span class=\"token function\">initCause</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">throw</span> ex<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"readFile method finally block.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>null <span class=\"token operator\">!=</span> reader<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                reader<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li></ul></pre>\r\n<p>调用该方法时，读取文件时若发生异常，代码会进入 catch 代码块，之后进入 finally 代码块；若读取文件时未发生异常，则会跳过 catch 代码块直接进入 finally 代码块。所以无论代码中是否发生异常，fianlly 中的代码都会执行。</p>\r\n<p>若 catch 代码块中包含 return 语句，finally 中的代码还会执行吗？将以上代码中的 catch 子句修改如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"readFile method catch block.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>调用 readFile 方法，观察当 catch 子句中调用 return 语句时，finally 子句是否执行</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">readFile method <span class=\"token keyword\">catch</span> block<span class=\"token punctuation\">.</span>\r\nreadFile method <span class=\"token keyword\">finally</span> block<span class=\"token punctuation\">.</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<p>可见，即使 catch 中包含了 return 语句，finally 子句依然会执行。若 finally 中也包含 return 语句，finally 中的 return 会覆盖前面的 return.</p>\r\n<h4><a id=\"trywithresource_288\"></a>try-with-resource</h4>\r\n<p>上面例子中，finally 中的 close 方法也可能抛出 IOException, 从而覆盖了原始异常。JAVA 7 提供了更优雅的方式来实现资源的自动释放，自动释放的资源需要是实现了 AutoCloseable 接口的类。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">private</span>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">tryWithResourceTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span>Scanner scanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c:/abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// code</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// handle exception</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<p>try 代码块退出时，会自动调用 scanner.close 方法，和把 scanner.close 方法放在 finally 代码块中不同的是，若 scanner.close 抛出异常，则会被抑制，抛出的仍然为原始异常。被抑制的异常会由 addSusppressed 方法添加到原来的异常，如果想要获取被抑制的异常列表，可以调用 getSuppressed 方法来获取。</p>\r\n<h2><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"Java_308\"></a>Java异常常见面试题</h2>\r\n<h3><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"1_Error__Exception__310\"></a>1. Error 和 Exception 区别是什么？</h3>\r\n<p>Error 类型的错误通常为虚拟机相关错误，如系统崩溃，内存不足，堆栈溢出等，编译器不会对这类错误进行检测，JAVA 应用程序也不应对这类错误进行捕获，一旦这类错误发生，通常应用程序会被终止，仅靠应用程序本身无法恢复；</p>\r\n<p>Exception 类的错误是可以在应用程序中进行捕获并处理的，通常遇到这种错误，应对其进行处理，使应用程序可以继续正常运行。</p>\r\n<h3><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"2__318\"></a>2. 运行时异常和一般异常(受检异常)区别是什么？</h3>\r\n<p>运行时异常包括 RuntimeException 类及其子类，表示 JVM 在运行期间可能出现的异常。 Java 编译器不会检查运行时异常。</p>\r\n<p>受检异常是Exception 中除 RuntimeException 及其子类之外的异常。 Java 编译器会检查受检异常。</p>\r\n<p><strong>RuntimeException异常和受检异常之间的区别</strong>：是否强制要求调用者必须处理此异常，如果强制要求调用者必须进行处理，那么就使用受检异常，否则就选择非受检异常(RuntimeException)。一般来讲，如果没有特殊的要求，我们建议使用RuntimeException异常。</p>\r\n<h3><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"3_JVM__328\"></a>3. JVM 是如何处理异常的？</h3>\r\n<p>在一个方法中如果发生异常，这个方法会创建一个异常对象，并转交给 JVM，该异常对象包含异常名称，异常描述以及异常发生时应用程序的状态。创建异常对象并转交给 JVM 的过程称为抛出异常。可能有一系列的方法调用，最终才进入抛出异常的方法，这一系列方法调用的有序列表叫做调用栈。</p>\r\n<p>JVM 会顺着调用栈去查找看是否有可以处理异常的代码，如果有，则调用异常处理代码。当 JVM 发现可以处理异常的代码时，会把发生的异常传递给它。如果 JVM 没有找到可以处理该异常的代码块，JVM 就会将该异常转交给默认的异常处理器（默认处理器为 JVM 的一部分），默认异常处理器打印出异常信息并终止应用程序。</p>\r\n<h3><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"4_throw__throws__336\"></a>4. throw 和 throws 的区别是什么？</h3>\r\n<p>Java 中的异常处理除了包括捕获异常和处理异常之外，还包括声明异常和拋出异常，可以通过 throws 关键字在方法上声明该方法要拋出的异常，或者在方法内部通过 throw 拋出异常对象。</p>\r\n<p><strong>throws 关键字和 throw 关键字在使用上的几点区别如下</strong>：</p>\r\n<ul><li>throw 关键字用在方法内部，只能用于抛出一种异常，用来抛出方法或代码块中的异常，受查异常和非受查异常都可以被抛出。</li><li>throws 关键字用在方法声明上，可以抛出多个异常，用来标识该方法可能抛出的异常列表。一个方法用 throws 标识了可能抛出的异常列表，调用该方法的方法中必须包含可处理异常的代码，否则也要在方法签名中用 throws 关键字声明相应的异常。</li></ul>\r\n<h3><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"5_finalfinallyfinalize__347\"></a>5. final、finally、finalize 有什么区别？</h3>\r\n<ul><li>final可以修饰类、变量、方法，修饰类表示该类不能被继承、修饰方法表示该方法不能被重写、修饰变量表示该变量是一个常量不能被重新赋值。</li><li>finally一般作用在try-catch代码块中，在处理异常的时候，通常我们将一定要执行的代码方法finally代码块中，表示不管是否出现异常，该代码块都会执行，一般用来存放一些关闭资源的代码。</li><li>finalize是一个方法，属于Object类的一个方法，而Object类是所有类的父类，Java 中允许使用 finalize()方法在垃圾收集器将对象从内存中清除出去之前做必要的清理工作。</li></ul>\r\n<h3><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"6_NoClassDefFoundError__ClassNotFoundException__355\"></a>6. NoClassDefFoundError 和 ClassNotFoundException 区别？</h3>\r\n<p>NoClassDefFoundError 是一个 Error 类型的异常，是由 JVM 引起的，不应该尝试捕获这个异常。</p>\r\n<p>引起该异常的原因是 JVM 或 ClassLoader 尝试加载某类时在内存中找不到该类的定义，该动作发生在运行期间，即编译时该类存在，但是在运行时却找不到了，可能是变异后被删除了等原因导致；</p>\r\n<p>ClassNotFoundException 是一个受查异常，需要显式地使用 try-catch 对其进行捕获和处理，或在方法签名中用 throws 关键字进行声明。当使用 Class.forName, ClassLoader.loadClass 或 ClassLoader.findSystemClass 动态加载类到内存的时候，通过传入的类路径参数没有找到该类，就会抛出该异常；另一种抛出该异常的可能原因是某个类已经由一个类加载器加载至内存中，另一个加载器又尝试去加载它。</p>\r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"7_trycatchfinally__365\"></a>7. try-catch-finally 中哪个部分可以省略？</h3>\r\n<p>答：catch 可以省略</p>\r\n<p><strong>原因</strong></p>\r\n<p>更为严格的说法其实是：try只适合处理运行时异常，try+catch适合处理运行时异常+普通异常。也就是说，如果你只用try去处理普通异常却不加以catch处理，编译是通不过的，因为编译器硬性规定，普通异常如果选择捕获，则必须用catch显示声明以便进一步处理。而运行时异常在编译时没有如此规定，所以catch可以省略，你加上catch编译器也觉得无可厚非。</p>\r\n<p>理论上，编译器看任何代码都不顺眼，都觉得可能有潜在的问题，所以你即使对所有代码加上try，代码在运行期时也只不过是在正常运行的基础上加一层皮。但是你一旦对一段代码加上try，就等于显示地承诺编译器，对这段代码可能抛出的异常进行捕获而非向上抛出处理。如果是普通异常，编译器要求必须用catch捕获以便进一步处理；如果运行时异常，捕获然后丢弃并且+finally扫尾处理，或者加上catch捕获以便进一步处理。</p>\r\n<p>至于加上finally，则是在不管有没捕获异常，都要进行的“扫尾”处理。</p>\r\n<h3><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"8_trycatchfinally__catch__return_finally__379\"></a>8. try-catch-finally 中，如果 catch 中 return 了，finally 还会执行吗？</h3>\r\n<p>答：会执行，在 return 前执行。</p>\r\n<p><strong>注意</strong>：在 finally 中改变返回值的做法是不好的，因为如果存在 finally 代码块，try中的 return 语句不会立马返回调用者，而是记录下返回值待 finally 代码块执行完毕之后再向调用者返回其值，然后如果在 finally 中修改了返回值，就会返回修改后的值。显然，在 finally 中返回或者修改返回值会对程序造成很大的困扰，C#中直接用编译错误的方式来阻止程序员干这种龌龊的事情，Java 中也可以通过提升编译器的语法检查级别来产生警告或错误。</p>\r\n<p><strong>代码示例1：</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">/</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        a <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ArithmeticException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        a <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">/*\r\n         * return a 在程序执行到这一步的时候，这里不是return a 而是 return 30；这个返回路径就形成了\r\n         * 但是呢，它发现后面还有finally，所以继续执行finally的内容，a=40\r\n         * 再次回到以前的路径,继续走return 30，形成返回路径之后，这里的a就不是a变量了，而是常量30\r\n         */</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        a <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\t<span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li></ul></pre>\r\n<p>执行结果：30</p>\r\n<p><strong>代码示例2：</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">/</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        a <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ArithmeticException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        a <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        a <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//如果这样，就又重新形成了一条返回路径，由于只能通过1个return返回，所以这里直接返回40</span>\r\n        <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li></ul></pre>\r\n<p>执行结果：40</p>\r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"9__ExampleA__Exception_ExampleB_ExampleA_434\"></a>9. 类 ExampleA 继承 Exception，类 ExampleB 继承ExampleA。</h3>\r\n<p>有如下代码片断：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExampleB</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span>（ExampleA e）<span class=\"token punctuation\">{<!-- --></span>\r\n\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ExampleA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span>（Exception e）<span class=\"token punctuation\">{<!-- --></span>\r\n\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Exception\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<p>请问执行此段代码的输出是什么？</p>\r\n<p><strong>答</strong>：</p>\r\n<p>输出：ExampleA。（根据里氏代换原则[能使用父类型的地方一定能使用子类型]，抓取 ExampleA 类型异常的 catch 块能够抓住 try 块中抛出的 ExampleB 类型的异常）</p>\r\n<p>面试题 - 说出下面代码的运行结果。（此题的出处是《Java 编程思想》一书）</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Annoyance</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Sneeze</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Annoyance</span> <span class=\"token punctuation\">{<!-- --></span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Human</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span>\r\n\t<span class=\"token keyword\">throws</span> Exception <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\t\t<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sneeze</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span> Annoyance a <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Caught Annoyance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\t<span class=\"token keyword\">throw</span> a<span class=\"token punctuation\">;</span>\r\n\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span> Sneeze s <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Caught Sneeze\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li></ul></pre>\r\n<p>结果</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Caught Annoyance\r\nCaught Sneeze\r\nHello World<span class=\"token operator\">!</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<h3><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"10__RuntimeException__491\"></a>10. 常见的 RuntimeException 有哪些？</h3>\r\n<ul><li>ClassCastException(类转换异常)</li><li>IndexOutOfBoundsException(数组越界)</li><li>NullPointerException(空指针)</li><li>ArrayStoreException(数据存储异常，操作数组时类型不一致)</li><li>还有IO操作的BufferOverflowException异常</li></ul>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"11_Java_501\"></a>11. Java常见异常有哪些</h3>\r\n<p>java.lang.IllegalAccessError：违法访问错误。当一个应用试图访问、修改某个类的域（Field）或者调用其方法，但是又违反域或方法的可见性声明，则抛出该异常。</p>\r\n<p>java.lang.InstantiationError：实例化错误。当一个应用试图通过Java的new操作符构造一个抽象类或者接口时抛出该异常.</p>\r\n<p>java.lang.OutOfMemoryError：内存不足错误。当可用内存不足以让Java虚拟机分配给一个对象时抛出该错误。</p>\r\n<p>java.lang.StackOverflowError：堆栈溢出错误。当一个应用递归调用的层次太深而导致堆栈溢出或者陷入死循环时抛出该错误。</p>\r\n<p>java.lang.ClassCastException：类造型异常。假设有类A和B（A不是B的父类或子类），O是A的实例，那么当强制将O构造为类B的实例时抛出该异常。该异常经常被称为强制类型转换异常。</p>\r\n<p>java.lang.ClassNotFoundException：找不到类异常。当应用试图根据字符串形式的类名构造类，而在遍历CLASSPAH之后找不到对应名称的class文件时，抛出该异常。</p>\r\n<p>java.lang.ArithmeticException：算术条件异常。譬如：整数除零等。</p>\r\n<p>java.lang.ArrayIndexOutOfBoundsException：数组索引越界异常。当对数组的索引值为负数或大于等于数组大小时抛出。</p>\r\n<p>java.lang.IndexOutOfBoundsException：索引越界异常。当访问某个序列的索引值小于0或大于等于序列大小时，抛出该异常。</p>\r\n<p>java.lang.InstantiationException：实例化异常。当试图通过newInstance()方法创建某个类的实例，而该类是一个抽象类或接口时，抛出该异常。</p>\r\n<p>java.lang.NoSuchFieldException：属性不存在异常。当访问某个类的不存在的属性时抛出该异常。</p>\r\n<p>java.lang.NoSuchMethodException：方法不存在异常。当访问某个类的不存在的方法时抛出该异常。</p>\r\n<p>java.lang.NullPointerException：空指针异常。当应用试图在要求使用对象的地方使用了null时，抛出该异常。譬如：调用null对象的实例方法、访问null对象的属性、计算null对象的长度、使用throw语句抛出null等等。</p>\r\n<p>java.lang.NumberFormatException：数字格式异常。当试图将一个String转换为指定的数字类型，而该字符串确不满足数字类型要求的格式时，抛出该异常。</p>\r\n<p>java.lang.StringIndexOutOfBoundsException：字符串索引越界异常。当使用索引值访问某个字符串中的字符，而该索引值小于0或大于等于序列大小时，抛出该异常。</p>\r\n<h2><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"Java_537\"></a>Java异常处理最佳实践</h2>\r\n<p>在 Java 中处理异常并不是一个简单的事情。不仅仅初学者很难理解，即使一些有经验的开发者也需要花费很多时间来思考如何处理异常，包括需要处理哪些异常，怎样处理等等。这也是绝大多数开发团队都会制定一些规则来规范进行异常处理的原因。而团队之间的这些规范往往是截然不同的。</p>\r\n<p>本文给出几个被很多团队使用的异常处理最佳实践。</p>\r\n<h3><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"1__finally__trywithresource__543\"></a>1. 在 finally 块中清理资源或者使用 try-with-resource 语句</h3>\r\n<p>当使用类似InputStream这种需要使用后关闭的资源时，一个常见的错误就是在try块的最后关闭资源。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doNotCloseResourceInTry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    FileInputStream inputStream <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        File file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./tmp.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        inputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">// use the inputStream to read a file</span>\r\n        <span class=\"token comment\">// do NOT do this</span>\r\n        inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FileNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li></ul></pre>\r\n<p>问题就是，只有没有异常抛出的时候，这段代码才可以正常工作。try 代码块内代码会正常执行，并且资源可以正常关闭。但是，使用 try 代码块是有原因的，一般调用一个或多个可能抛出异常的方法，而且，你自己也可能会抛出一个异常，这意味着代码可能不会执行到 try 代码块的最后部分。结果就是，你并没有关闭资源。</p>\r\n<p>所以，你应该把清理工作的代码放到 finally 里去，或者使用 try-with-resource 特性。</p>\r\n<h4><a id=\"11__finally__568\"></a>1.1 使用 finally 代码块</h4>\r\n<p>与前面几行 try 代码块不同，finally 代码块总是会被执行。不管 try 代码块成功执行之后还是你在 catch 代码块中处理完异常后都会执行。因此，你可以确保你清理了所有打开的资源。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">closeResourceInFinally</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    FileInputStream inputStream <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        File file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./tmp.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        inputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">// use the inputStream to read a file</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FileNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>inputStream <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li></ul></pre>\r\n<h4><a id=\"12_Java_7__trywithresource__593\"></a>1.2 Java 7 的 try-with-resource 语法</h4>\r\n<p>如果你的资源实现了 AutoCloseable 接口，你可以使用这个语法。大多数的 Java 标准资源都继承了这个接口。当你在 try 子句中打开资源，资源会在 try 代码块执行后或异常处理后自动关闭。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">automaticallyCloseResource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    File file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./tmp.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span>FileInputStream inputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// use the inputStream to read a file</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FileNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li></ul></pre>\r\n<h3><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"2__610\"></a>2. 优先明确的异常</h3>\r\n<p>你抛出的异常越明确越好，永远记住，你的同事或者几个月之后的你，将会调用你的方法并且处理异常。</p>\r\n<p>因此需要保证提供给他们尽可能多的信息。这样你的 API 更容易被理解。你的方法的调用者能够更好的处理异常并且避免额外的检查。</p>\r\n<p>因此，总是尝试寻找最适合你的异常事件的类，例如，抛出一个 NumberFormatException 来替换一个 IllegalArgumentException 。避免抛出一个不明确的异常。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doNotDoThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> Exception <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> NumberFormatException <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h3><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"3__626\"></a>3. 对异常进行文档说明</h3>\r\n<p>当在方法上声明抛出异常时，也需要进行文档说明。目的是为了给调用者提供尽可能多的信息，从而可以更好地避免或处理异常。<br> 在 Javadoc 添加 @throws 声明，并且描述抛出异常的场景。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span>String input<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> MyBusinessException <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<h3><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"4__635\"></a>4. 使用描述性消息抛出异常</h3>\r\n<p>在抛出异常时，需要尽可能精确地描述问题和相关信息，这样无论是打印到日志中还是在监控工具中，都能够更容易被人阅读，从而可以更好地定位具体错误信息、错误的严重程度等。</p>\r\n<p>但这里并不是说要对错误信息长篇大论，因为本来 Exception 的类名就能够反映错误的原因，因此只需要用一到两句话描述即可。</p>\r\n<p>如果抛出一个特定的异常，它的类名很可能已经描述了这种错误。所以，你不需要提供很多额外的信息。一个很好的例子是 NumberFormatException 。当你以错误的格式提供 String 时，它将被 java.lang.Long 类的构造函数抛出。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xyz\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NumberFormatException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<h3><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"5__650\"></a>5. 优先捕获最具体的异常</h3>\r\n<p>大多数 IDE 都可以帮助你实现这个最佳实践。当你尝试首先捕获较不具体的异常时，它们会报告无法访问的代码块。</p>\r\n<p>但问题在于，只有匹配异常的第一个 catch 块会被执行。 因此，如果首先捕获 IllegalArgumentException ，则永远不会到达应该处理更具体的 NumberFormatException 的 catch 块，因为它是 IllegalArgumentException 的子类。</p>\r\n<p>总是优先捕获最具体的异常类，并将不太具体的 catch 块添加到列表的末尾。</p>\r\n<p>你可以在下面的代码片断中看到这样一个 try-catch 语句的例子。 第一个 catch 块处理所有 NumberFormatException 异常，第二个处理所有非 NumberFormatException 异常的IllegalArgumentException 异常。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">catchMostSpecificExceptionFirst</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NumberFormatException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IllegalArgumentException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<h3><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"6__Throwable__672\"></a>6. 不要捕获 Throwable 类</h3>\r\n<p>Throwable 是所有异常和错误的超类。你可以在 catch 子句中使用它，但是你永远不应该这样做！</p>\r\n<p>如果在 catch 子句中使用 Throwable ，它不仅会捕获所有异常，也将捕获所有的错误。JVM 抛出错误，指出不应该由应用程序处理的严重问题。 典型的例子是 OutOfMemoryError 或者 StackOverflowError 。两者都是由应用程序控制之外的情况引起的，无法处理。</p>\r\n<p>所以，最好不要捕获 Throwable ，除非你确定自己处于一种特殊的情况下能够处理错误。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doNotCatchThrowable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// do something</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// don't do this!</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h3><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"7__689\"></a>7. 不要忽略异常</h3>\r\n<p>很多时候，开发者很有自信不会抛出异常，因此写了一个catch块，但是没有做任何处理或者记录日志。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doNotIgnoreExceptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// do something</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NumberFormatException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// this will never happen</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<p>但现实是经常会出现无法预料的异常，或者无法确定这里的代码未来是不是会改动(删除了阻止异常抛出的代码)，而此时由于异常被捕获，使得无法拿到足够的错误信息来定位问题。</p>\r\n<p>合理的做法是至少要记录异常的信息。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">logAnException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// do something</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NumberFormatException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This should never happen: \"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h3><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"8__714\"></a>8. 不要记录并抛出异常</h3>\r\n<p>这可能是本文中最常被忽略的最佳实践。可以发现很多代码甚至类库中都会有捕获异常、记录日志并再次抛出的逻辑。如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xyz\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NumberFormatException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p>这个处理逻辑看着是合理的。但这经常会给同一个异常输出多条日志。如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token number\">17</span><span class=\"token operator\">:</span><span class=\"token number\">44</span><span class=\"token operator\">:</span><span class=\"token number\">28</span><span class=\"token punctuation\">,</span><span class=\"token number\">945</span> ERROR TestExceptionHandling<span class=\"token operator\">:</span><span class=\"token number\">65</span> <span class=\"token operator\">-</span> java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>NumberFormatException<span class=\"token operator\">:</span> For input string<span class=\"token operator\">:</span> <span class=\"token string\">\"xyz\"</span>\r\nException in thread <span class=\"token string\">\"main\"</span> java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>NumberFormatException<span class=\"token operator\">:</span> For input string<span class=\"token operator\">:</span> <span class=\"token string\">\"xyz\"</span>\r\nat java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>NumberFormatException<span class=\"token punctuation\">.</span><span class=\"token function\">forInputString</span><span class=\"token punctuation\">(</span>NumberFormatException<span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">65</span><span class=\"token punctuation\">)</span>\r\nat java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>Long<span class=\"token punctuation\">.</span><span class=\"token function\">parseLong</span><span class=\"token punctuation\">(</span>Long<span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">589</span><span class=\"token punctuation\">)</span>\r\nat java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>Long<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>Long<span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">965</span><span class=\"token punctuation\">)</span>\r\nat com<span class=\"token punctuation\">.</span>stackify<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>TestExceptionHandling<span class=\"token punctuation\">.</span><span class=\"token function\">logAndThrowException</span><span class=\"token punctuation\">(</span>TestExceptionHandling<span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">63</span><span class=\"token punctuation\">)</span>\r\nat com<span class=\"token punctuation\">.</span>stackify<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>TestExceptionHandling<span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span>TestExceptionHandling<span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">58</span><span class=\"token punctuation\">)</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<p>如上所示，后面的日志也没有附加更有用的信息。如果想要提供更加有用的信息，那么可以将异常包装为自定义异常。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">wrapException</span><span class=\"token punctuation\">(</span>String input<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> MyBusinessException <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// do something</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NumberFormatException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyBusinessException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A message that describes the error.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<p>因此，仅仅当想要处理异常时才去捕获，否则只需要在方法签名中声明让调用者去处理。</p>\r\n<h3><a name=\"t32\"></a><a name=\"t32\"></a><a id=\"9__748\"></a>9. 包装异常时不要抛弃原始的异常</h3>\r\n<p>捕获标准异常并包装为自定义异常是一个很常见的做法。这样可以添加更为具体的异常信息并能够做针对的异常处理。<br> 在你这样做时，请确保将原始异常设置为原因（注：参考下方代码 NumberFormatException e 中的原始异常 e ）。Exception 类提供了特殊的构造函数方法，它接受一个 Throwable 作为参数。否则，你将会丢失堆栈跟踪和原始异常的消息，这将会使分析导致异常的异常事件变得困难。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">wrapException</span><span class=\"token punctuation\">(</span>String input<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> MyBusinessException <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// do something</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NumberFormatException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyBusinessException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A message that describes the error.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<h3><a name=\"t33\"></a><a name=\"t33\"></a><a id=\"10__763\"></a>10. 不要使用异常控制程序的流程</h3>\r\n<p>不应该使用异常控制应用的执行流程，例如，本应该使用if语句进行条件判断的情况下，你却使用异常处理，这是非常不好的习惯，会严重影响应用的性能。</p>\r\n<h3><a name=\"t34\"></a><a name=\"t34\"></a><a id=\"11__769\"></a>11. 使用标准异常</h3>\r\n<p>如果使用内建的异常可以解决问题，就不要定义自己的异常。Java API 提供了上百种针对不同情况的异常类型，在开发中首先尽可能使用 Java API 提供的异常，如果标准的异常不能满足你的要求，这时候创建自己的定制异常。尽可能得使用标准异常有利于新加入的开发者看懂项目代码。</p>\r\n<h3><a name=\"t35\"></a><a name=\"t35\"></a><a id=\"12__775\"></a>12. 异常会影响性能</h3>\r\n<p>异常处理的性能成本非常高，每个 Java 程序员在开发时都应牢记这句话。创建一个异常非常慢，抛出一个异常又会消耗1~5ms，当一个异常在应用的多个层级之间传递时，会拖累整个应用的性能。</p>\r\n<ul><li>仅在异常情况下使用异常；</li><li>在可恢复的异常情况下使用异常；</li></ul>\r\n<p>尽管使用异常有利于 Java 开发，但是在应用中最好不要捕获太多的调用栈，因为在很多情况下都不需要打印调用栈就知道哪里出错了。因此，异常消息应该提供恰到好处的信息。</p>\r\n<h3><a name=\"t36\"></a><a name=\"t36\"></a><a id=\"13__787\"></a>13. 总结</h3>\r\n<p>综上所述，当你抛出或捕获异常的时候，有很多不同的情况需要考虑，而且大部分事情都是为了改善代码的可读性或者 API 的可用性。</p>\r\n<p>异常不仅仅是一个错误控制机制，也是一个通信媒介。因此，为了和同事更好的合作，一个团队必须要制定出一个最佳实践和规则，只有这样，团队成员才能理解这些通用概念，同时在工作中使用它。</p>\r\n<h3><a name=\"t37\"></a><a name=\"t37\"></a><a id=\"Java_794\"></a>异常处理-阿里巴巴Java开发手册</h3>\r\n<ol><li> <p>【强制】Java 类库中定义的可以通过预检查方式规避的RuntimeException异常不应该通过catch 的方式来处理，比如：NullPointerException，IndexOutOfBoundsException等等。 说明：无法通过预检查的异常除外，比如，在解析字符串形式的数字时，可能存在数字格式错误，不得不通过catch NumberFormatException来实现。 正例：if (obj != null) {…} 反例：try { obj.method(); } catch (NullPointerException e) {…}</p> </li><li> <p>【强制】异常不要用来做流程控制，条件控制。 说明：异常设计的初衷是解决程序运行中的各种意外情况，且异常的处理效率比条件判断方式要低很多。</p> </li><li> <p>【强制】catch时请分清稳定代码和非稳定代码，稳定代码指的是无论如何不会出错的代码。对于非稳定代码的catch尽可能进行区分异常类型，再做对应的异常处理。 说明：对大段代码进行try-catch，使程序无法根据不同的异常做出正确的应激反应，也不利于定位问题，这是一种不负责任的表现。 正例：用户注册的场景中，如果用户输入非法字符，或用户名称已存在，或用户输入密码过于简单，在程序上作出分门别类的判断，并提示给用户。</p> </li><li> <p>【强制】捕获异常是为了处理它，不要捕获了却什么都不处理而抛弃之，如果不想处理它，请将该异常抛给它的调用者。最外层的业务使用者，必须处理异常，将其转化为用户可以理解的内容。</p> </li><li> <p>【强制】有try块放到了事务代码中，catch异常后，如果需要回滚事务，一定要注意手动回滚事务。</p> </li><li> <p>【强制】finally块必须对资源对象、流对象进行关闭，有异常也要做try-catch。 说明：如果JDK7及以上，可以使用try-with-resources方式。</p> </li><li> <p>【强制】不要在finally块中使用return。 说明：try块中的return语句执行成功后，并不马上返回，而是继续执行finally块中的语句，如果此处存在return语句，则在此直接返回，无情丢弃掉try块中的返回点。 反例：</p> </li></ol>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">checkReturn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// x等于1，此处不返回</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">++</span>x<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// 返回的结果是2</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">++</span>x<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<ol start=\"8\"><li> <p>【强制】捕获异常与抛异常，必须是完全匹配，或者捕获异常是抛异常的父类。 说明：如果预期对方抛的是绣球，实际接到的是铅球，就会产生意外情况。</p> </li><li> <p>【强制】在调用RPC、二方包、或动态生成类的相关方法时，捕捉异常必须使用Throwable类来进行拦截。 说明：通过反射机制来调用方法，如果找不到方法，抛出NoSuchMethodException。什么情况会抛出NoSuchMethodError呢？二方包在类冲突时，仲裁机制可能导致引入非预期的版本使类的方法签名不匹配，或者在字节码修改框架（比如：ASM）动态创建或修改类时，修改了相应的方法签名。这些情况，即使代码编译期是正确的，但在代码运行期时，会抛出NoSuchMethodError。</p> </li><li> <p>【推荐】方法的返回值可以为null，不强制返回空集合，或者空对象等，必须添加注释充分说明什么情况下会返回null值。 说明：本手册明确防止NPE是调用者的责任。即使被调用方法返回空集合或者空对象，对调用者来说，也并非高枕无忧，必须考虑到远程调用失败、序列化失败、运行时异常等场景返回null的情况。</p> </li><li> <p>【推荐】防止NPE，是程序员的基本修养，注意NPE产生的场景： 1） 返回类型为基本数据类型，return包装数据类型的对象时，自动拆箱有可能产生NPE。 反例：public int f() { return Integer对象}， 如果为null，自动解箱抛NPE。 2） 数据库的查询结果可能为null。 3） 集合里的元素即使isNotEmpty，取出的数据元素也可能为null。 4） 远程调用返回对象时，一律要求进行空指针判断，防止NPE。 5） 对于Session中获取的数据，建议进行NPE检查，避免空指针。 6） 级联调用obj.getA().getB().getC()；一连串调用，易产生NPE。<br> 正例：使用JDK8的Optional类来防止NPE问题。</p> </li><li> <p>【推荐】定义时区分unchecked / checked 异常，避免直接抛出new RuntimeException()，更不允许抛出Exception或者Throwable，应使用有业务含义的自定义异常。推荐业界已定义过的自定义异常，如：DAOException / ServiceException等。</p> </li><li> <p>【参考】对于公司外的http/api开放接口必须使用“错误码”；而应用内部推荐异常抛出；跨应用间RPC调用优先考虑使用Result方式，封装isSuccess()方法、“错误码”、“错误简短信息”。 说明：关于RPC方法返回方式使用Result方式的理由： 1）使用抛异常返回方式，调用方如果没有捕获到就会产生运行时错误。 2）如果不加栈信息，只是new自定义异常，加入自己的理解的error message，对于调用端解决问题的帮助不会太多。如果加了栈信息，在频繁调用出错的情况下，数据序列化和传输的性能损耗也是问题。</p> </li><li> <p>【参考】避免出现重复的代码（Don’t Repeat Yourself），即DRY原则。 说明：随意复制和粘贴代码，必然会导致代码的重复，在以后需要修改时，需要修改所有的副本，容易遗漏。必要时抽取共性方法，或者抽象公共类，甚至是组件化。 正例：一个类中有多个public方法，都需要进行数行相同的参数校验操作，这个时候请抽取：<br> private boolean checkParam(DTO dto) {…}</p> </li></ol>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_java_abnormal.vue?vue&type=template&id=475be68a\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>并发编程面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"_33\"></a>基础知识</h2>\r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"_35\"></a>并发编程的优缺点</h3>\r\n<h4><a id=\"_37\"></a>为什么要使用并发编程（并发编程的优点）</h4>\r\n<ul><li> <p>充分利用多核CPU的计算能力：通过并发编程的形式可以将多核CPU的计算能力发挥到极致，性能得到提升</p> </li><li> <p>方便进行业务拆分，提升系统并发能力和性能：在特殊的业务场景下，先天的就适合于并发编程。现在的系统动不动就要求百万级甚至千万级的并发量，而多线程并发编程正是开发高并发系统的基础，利用好多线程机制可以大大提高系统整体的并发能力以及性能。面对复杂业务模型，并行程序会比串行程序更适应业务需求，而并发编程更能吻合这种业务拆分 。</p> </li></ul>\r\n<h4><a id=\"_45\"></a>并发编程有什么缺点</h4>\r\n<p>并发编程的目的就是为了能提高程序的执行效率，提高程序运行速度，但是并发编程并不总是能提高程序运行速度的，而且并发编程可能会遇到很多问题，比如**：内存泄漏、上下文切换、线程安全、死锁**等问题。</p>\r\n<h4><a id=\"_Java__51\"></a>并发编程三要素是什么？在 Java 程序中怎么保证多线程的运行安全？</h4>\r\n<p>并发编程三要素（线程的安全性问题体现在）：</p>\r\n<p>原子性：原子，即一个不可再被分割的颗粒。原子性指的是一个或多个操作要么全部执行成功要么全部执行失败。</p>\r\n<p>可见性：一个线程对共享变量的修改,另一个线程能够立刻看到。（synchronized,volatile）</p>\r\n<p>有序性：程序执行的顺序按照代码的先后顺序执行。（处理器可能会对指令进行重排序）</p>\r\n<p>出现线程安全问题的原因：</p>\r\n<ul><li> <p>线程切换带来的原子性问题</p> </li><li> <p>缓存导致的可见性问题</p> </li><li> <p>编译优化带来的有序性问题</p> </li></ul>\r\n<p>解决办法：</p>\r\n<ul><li>JDK Atomic开头的原子类、synchronized、LOCK，可以解决原子性问题</li><li>synchronized、volatile、LOCK，可以解决可见性问题</li><li>Happens-Before 规则可以解决有序性问题</li></ul>\r\n<h4><a id=\"_76\"></a>并行和并发有什么区别？</h4>\r\n<ul><li>并发：多个任务在同一个 CPU 核上，按细分的时间片轮流(交替)执行，从逻辑上来看那些任务是同时执行。</li><li>并行：单位时间内，多个处理器或多核处理器同时处理多个任务，是真正意义上的“同时进行”。</li><li>串行：有n个任务，由一个线程按顺序执行。由于任务、方法都在一个线程执行所以不存在线程不安全情况，也就不存在临界区的问题。</li></ul>\r\n<p>做一个形象的比喻：</p>\r\n<p>并发 = 两个队列和一台咖啡机。</p>\r\n<p>并行 = 两个队列和两台咖啡机。</p>\r\n<p>串行 = 一个队列和一台咖啡机。</p>\r\n<h4><a id=\"_92\"></a>什么是多线程，多线程的优劣？</h4>\r\n<p>多线程：多线程是指程序中包含多个执行流，即在一个程序中可以同时运行多个不同的线程来执行不同的任务。</p>\r\n<p>多线程的好处：</p>\r\n<p>可以提高 CPU 的利用率。在多线程程序中，一个线程必须等待的时候，CPU 可以运行其它的线程而不是等待，这样就大大提高了程序的效率。也就是说允许单个程序创建多个并行执行的线程来完成各自的任务。</p>\r\n<p>多线程的劣势：</p>\r\n<ul><li> <p>线程也是程序，所以线程需要占用内存，线程越多占用内存也越多；</p> </li><li> <p>多线程需要协调和管理，所以需要 CPU 时间跟踪线程；</p> </li><li> <p>线程之间对共享资源的访问会相互影响，必须解决竞用共享资源的问题。</p> </li></ul>\r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"_113\"></a>线程和进程区别</h3>\r\n<h4><a id=\"_115\"></a>什么是线程和进程?</h4>\r\n<p>进程</p>\r\n<p>一个在内存中运行的应用程序。每个进程都有自己独立的一块内存空间，一个进程可以有多个线程，比如在Windows系统中，一个运行的xx.exe就是一个进程。</p>\r\n<p>线程</p>\r\n<p>进程中的一个执行任务（控制单元），负责当前进程中程序的执行。一个进程至少有一个线程，一个进程可以运行多个线程，多个线程可共享数据。</p>\r\n<h4><a id=\"_127\"></a>进程与线程的区别</h4>\r\n<p>线程具有许多传统进程所具有的特征，故又称为轻型进程(Light—Weight Process)或进程元；而把传统的进程称为重型进程(Heavy—Weight Process)，它相当于只有一个线程的任务。在引入了线程的操作系统中，通常一个进程都有若干个线程，至少包含一个线程。</p>\r\n<p><strong>根本区别</strong>：进程是操作系统资源分配的基本单位，而线程是处理器任务调度和执行的基本单位</p>\r\n<p><strong>资源开销</strong>：每个进程都有独立的代码和数据空间（程序上下文），程序之间的切换会有较大的开销；线程可以看做轻量级的进程，同一类线程共享代码和数据空间，每个线程都有自己独立的运行栈和程序计数器（PC），线程之间切换的开销小。</p>\r\n<p><strong>包含关系</strong>：如果一个进程内有多个线程，则执行过程不是一条线的，而是多条线（线程）共同完成的；线程是进程的一部分，所以线程也被称为轻权进程或者轻量级进程。</p>\r\n<p><strong>内存分配</strong>：同一进程的线程共享本进程的地址空间和资源，而进程之间的地址空间和资源是相互独立的</p>\r\n<p><strong>影响关系</strong>：一个进程崩溃后，在保护模式下不会对其他进程产生影响，但是一个线程崩溃整个进程都死掉。所以多进程要比多线程健壮。</p>\r\n<p><strong>执行过程</strong>：每个独立的进程有程序运行的入口、顺序执行序列和程序出口。但是线程不能独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制，两者均可并发执行</p>\r\n<h4><a id=\"_145\"></a>什么是上下文切换?</h4>\r\n<p>多线程编程中一般线程的个数都大于 CPU 核心的个数，而一个 CPU 核心在任意时刻只能被一个线程使用，为了让这些线程都能得到有效执行，CPU 采取的策略是为每个线程分配时间片并轮转的形式。当一个线程的时间片用完的时候就会重新处于就绪状态让给其他线程使用，这个过程就属于一次上下文切换。</p>\r\n<p>概括来说就是：当前任务在执行完 CPU 时间片切换到另一个任务之前会先保存自己的状态，以便下次再切换回这个任务时，可以再加载这个任务的状态。<strong>任务从保存到再加载的过程就是一次上下文切换</strong>。</p>\r\n<p>上下文切换通常是计算密集型的。也就是说，它需要相当可观的处理器时间，在每秒几十上百次的切换中，每次切换都需要纳秒量级的时间。所以，上下文切换对系统来说意味着消耗大量的 CPU 时间，事实上，可能是操作系统中时间消耗最大的操作。</p>\r\n<p>Linux 相比与其他操作系统（包括其他类 Unix 系统）有很多的优点，其中有一项就是，其上下文切换和模式切换的时间消耗非常少。</p>\r\n<h4><a id=\"_157\"></a>守护线程和用户线程有什么区别呢？</h4>\r\n<p>守护线程和用户线程</p>\r\n<ul><li><strong>用户 (User) 线程</strong>：运行在前台，执行具体的任务，如程序的主线程、连接网络的子线程等都是用户线程</li><li><strong>守护 (Daemon) 线程</strong>：运行在后台，为其他前台线程服务。也可以说守护线程是 JVM 中非守护线程的 <strong>“佣人”</strong>。一旦所有用户线程都结束运行，守护线程会随 JVM 一起结束工作</li></ul>\r\n<p>main 函数所在的线程就是一个用户线程啊，main 函数启动的同时在 JVM 内部同时还启动了好多守护线程，比如垃圾回收线程。</p>\r\n<p>比较明显的区别之一是用户线程结束，JVM 退出，不管这个时候有没有守护线程运行。而守护线程不会影响 JVM 的退出。</p>\r\n<p><strong>注意事项：</strong></p>\r\n<ol><li><code>setDaemon(true)</code>必须在<code>start()</code>方法前执行，否则会抛出 <code>IllegalThreadStateException</code> 异常</li><li>在守护线程中产生的新线程也是守护线程</li><li>不是所有的任务都可以分配给守护线程来执行，比如读写操作或者计算逻辑</li><li>守护 (Daemon) 线程中不能依靠 finally 块的内容来确保执行关闭或清理资源的逻辑。因为我们上面也说过了一旦所有用户线程都结束运行，守护线程会随 JVM 一起结束工作，所以守护 (Daemon) 线程中的 finally 语句块可能无法被执行。</li></ol>\r\n<h4><a id=\"_Windows__Linux_cpu_177\"></a>如何在 Windows 和 Linux 上查找哪个线程cpu利用率最高？</h4>\r\n<p>windows上面用任务管理器看，linux下可以用 top 这个工具看。</p>\r\n<ol><li>找出cpu耗用厉害的进程pid， 终端执行top命令，然后按下shift+p 查找出cpu利用最厉害的pid号</li><li>根据上面第一步拿到的pid号，top -H -p pid 。然后按下shift+p，查找出cpu利用率最厉害的线程号，比如top -H -p 1328</li><li>将获取到的线程号转换成16进制，去百度转换一下就行</li><li>使用jstack工具将进程信息打印输出，jstack pid号 &gt; /tmp/t.dat，比如jstack 31365 &gt; /tmp/t.dat</li><li>编辑/tmp/t.dat文件，查找线程号对应的信息</li></ol>\r\n<h4><a id=\"_189\"></a>什么是线程死锁</h4>\r\n<p><code>百度百科</code>：死锁是指两个或两个以上的进程（线程）在执行过程中，由于竞争资源或者由于彼此通信而造成的一种阻塞的现象，若无外力作用，它们都将无法推进下去。此时称系统处于死锁状态或系统产生了死锁，这些永远在互相等待的进程（线程）称为死锁进程（线程）。</p>\r\n<p>多个线程同时被阻塞，它们中的一个或者全部都在等待某个资源被释放。由于线程被无限期地阻塞，因此程序不可能正常终止。</p>\r\n<p>如下图所示，线程 A 持有资源 2，线程 B 持有资源 1，他们同时都想申请对方的资源，所以这两个线程就会互相等待而进入死锁状态。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvdXJXb24vaW1hZ2UvbWFzdGVyL0phdmElRTUlQjklQjYlRTUlOEYlOTElRTclQkMlOTYlRTclQTglOEItJUU1JTlGJUJBJUU3JUExJTgwJUU3JTlGJUE1JUU4JUFGJTg2LyVFNyVCQSVCRiVFNyVBOCU4QiVFNiVBRCVCQiVFOSU5NCU4MS5wbmc\" alt=\"线程死锁\"></p>\r\n<p>下面通过一个例子来说明线程死锁，代码模拟了上图的死锁的情况 (代码来源于《并发编程之美》)：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DeadLockDemo</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> Object resource1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//资源 1</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> Object resource2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//资源 2</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>resource1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"get resource1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    Thread<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"waiting get resource2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>resource2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"get resource2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"线程 1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>resource2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"get resource2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    Thread<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"waiting get resource1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>resource1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"get resource1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"线程 2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li></ul></pre>\r\n<p>输出结果</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Thread<span class=\"token punctuation\">[</span>线程 <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>main<span class=\"token punctuation\">]</span>get resource1\r\nThread<span class=\"token punctuation\">[</span>线程 <span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>main<span class=\"token punctuation\">]</span>get resource2\r\nThread<span class=\"token punctuation\">[</span>线程 <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>main<span class=\"token punctuation\">]</span>waiting get resource2\r\nThread<span class=\"token punctuation\">[</span>线程 <span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>main<span class=\"token punctuation\">]</span>waiting get resource1\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>线程 A 通过 synchronized (resource1) 获得 resource1 的监视器锁，然后通过<code>Thread.sleep(1000)</code>；让线程 A 休眠 1s 为的是让线程 B 得到CPU执行权，然后获取到 resource2 的监视器锁。线程 A 和线程 B 休眠结束了都开始企图请求获取对方的资源，然后这两个线程就会陷入互相等待的状态，这也就产生了死锁。上面的例子符合产生死锁的四个必要条件。</p>\r\n<h4><a id=\"_253\"></a>形成死锁的四个必要条件是什么</h4>\r\n<ol><li>互斥条件：线程(进程)对于所分配到的资源具有排它性，即一个资源只能被一个线程(进程)占用，直到被该线程(进程)释放</li><li>请求与保持条件：一个线程(进程)因请求被占用资源而发生阻塞时，对已获得的资源保持不放。</li><li>不剥夺条件：线程(进程)已获得的资源在末使用完之前不能被其他线程强行剥夺，只有自己使用完毕后才释放资源。</li><li>循环等待条件：当发生死锁时，所等待的线程(进程)必定会形成一个环路（类似于死循环），造成永久阻塞</li></ol>\r\n<h4><a id=\"_262\"></a>如何避免线程死锁</h4>\r\n<p>我们只要破坏产生死锁的四个条件中的其中一个就可以了。</p>\r\n<p><strong>破坏互斥条件</strong></p>\r\n<p>这个条件我们没有办法破坏，因为我们用锁本来就是想让他们互斥的（临界资源需要互斥访问）。</p>\r\n<p><strong>破坏请求与保持条件</strong></p>\r\n<p>一次性申请所有的资源。</p>\r\n<p><strong>破坏不剥夺条件</strong></p>\r\n<p>占用部分资源的线程进一步申请其他资源时，如果申请不到，可以主动释放它占有的资源。</p>\r\n<p><strong>破坏循环等待条件</strong></p>\r\n<p>靠按序申请资源来预防。按某一顺序申请资源，释放资源则反序释放。破坏循环等待条件。</p>\r\n<p>我们对线程 2 的代码修改成下面这样就不会产生死锁了。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>resource1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"get resource1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            Thread<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"waiting get resource2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>resource2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"get resource2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"线程 2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li></ul></pre>\r\n<p>输出结果</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Thread<span class=\"token punctuation\">[</span>线程 <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>main<span class=\"token punctuation\">]</span>get resource1\r\nThread<span class=\"token punctuation\">[</span>线程 <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>main<span class=\"token punctuation\">]</span>waiting get resource2\r\nThread<span class=\"token punctuation\">[</span>线程 <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>main<span class=\"token punctuation\">]</span>get resource2\r\nThread<span class=\"token punctuation\">[</span>线程 <span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>main<span class=\"token punctuation\">]</span>get resource1\r\nThread<span class=\"token punctuation\">[</span>线程 <span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>main<span class=\"token punctuation\">]</span>waiting get resource2\r\nThread<span class=\"token punctuation\">[</span>线程 <span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>main<span class=\"token punctuation\">]</span>get resource2\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p>我们分析一下上面的代码为什么避免了死锁的发生?</p>\r\n<p>线程 1 首先获得到 resource1 的监视器锁，这时候线程 2 就获取不到了。然后线程 1 再去获取 resource2 的监视器锁，可以获取到。然后线程 1 释放了对 resource1、resource2 的监视器锁的占用，线程 2 获取到就可以执行了。这样就破坏了破坏循环等待条件，因此避免了死锁。</p>\r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"_320\"></a>创建线程的四种方式</h3>\r\n<h4><a id=\"_322\"></a>创建线程有哪几种方式？</h4>\r\n<p>创建线程有四种方式：</p>\r\n<ul><li>继承 Thread 类；</li><li>实现 Runnable 接口；</li><li>实现 Callable 接口；</li><li>使用 Executors 工具类创建线程池</li></ul>\r\n<p><strong>继承 Thread 类</strong></p>\r\n<p>步骤</p>\r\n<ol><li>定义一个Thread类的子类，重写run方法，将相关逻辑实现，run()方法就是线程要执行的业务逻辑方法</li><li>创建自定义的线程子类对象</li><li>调用子类实例的star()方法来启动线程</li></ol>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyThread</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Thread</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" run()方法正在执行...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TheadTest</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        MyThread myThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        myThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" main()方法执行结束\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<p>运行结果</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">main <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法执行结束\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法正在执行<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<p><strong>实现 Runnable 接口</strong></p>\r\n<p>步骤</p>\r\n<ol><li>定义Runnable接口实现类MyRunnable，并重写run()方法</li><li>创建MyRunnable实例myRunnable，以myRunnable作为target创建Thead对象，<strong>该Thread对象才是真正的线程对象</strong></li><li>调用线程对象的start()方法</li></ol>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyRunnable</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" run()方法执行中...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RunnableTest</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        MyRunnable myRunnable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyRunnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Thread thread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>myRunnable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        thread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" main()方法执行完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<p>执行结果</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">main <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法执行完成\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法执行中<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<p><strong>实现 Callable 接口</strong></p>\r\n<p>步骤</p>\r\n<ol><li>创建实现Callable接口的类myCallable</li><li>以myCallable为参数创建FutureTask对象</li><li>将FutureTask作为参数创建Thread对象</li><li>调用线程对象的start()方法</li></ol>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyCallable</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Callable</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> Integer <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" call()方法执行中...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CallableTest</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        FutureTask<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">&gt;</span></span> futureTask <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FutureTask</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyCallable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        Thread thread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>futureTask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        thread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            Thread<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"返回结果 \"</span> <span class=\"token operator\">+</span> futureTask<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ExecutionException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" main()方法执行完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li></ul></pre>\r\n<p>执行结果</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Thread<span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法执行中<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n返回结果 <span class=\"token number\">1</span>\r\nmain <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法执行完成\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<p><strong>使用 Executors 工具类创建线程池</strong></p>\r\n<p>Executors提供了一系列工厂方法用于创先线程池，返回的线程池都实现了ExecutorService接口。</p>\r\n<p>主要有newFixedThreadPool，newCachedThreadPool，newSingleThreadExecutor，newScheduledThreadPool，后续详细介绍这四种线程池</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyRunnable</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" run()方法执行中...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingleThreadExecutorTest</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        ExecutorService executorService <span class=\"token operator\">=</span> Executors<span class=\"token punctuation\">.</span><span class=\"token function\">newSingleThreadExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        MyRunnable runnableTest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyRunnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            executorService<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>runnableTest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线程任务开始执行\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        executorService<span class=\"token punctuation\">.</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li></ul></pre>\r\n<p>执行结果</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">线程任务开始执行\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">1</span> is running<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">1</span> is running<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">1</span> is running<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">1</span> is running<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">1</span> is running<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<h4><a id=\"_runnable__callable__515\"></a>说一下 runnable 和 callable 有什么区别？</h4>\r\n<p>相同点</p>\r\n<ul><li> <p>都是接口</p> </li><li> <p>都可以编写多线程程序</p> </li><li> <p>都采用Thread.start()启动线程</p> </li></ul>\r\n<p>主要区别</p>\r\n<ul><li>Runnable 接口 run 方法无返回值；Callable 接口 call 方法有返回值，是个泛型，和Future、FutureTask配合可以用来获取异步执行的结果</li><li>Runnable 接口 run 方法只能抛出运行时异常，且无法捕获处理；Callable 接口 call 方法允许抛出异常，可以获取异常信息</li></ul>\r\n<p><strong>注</strong>：Callalbe接口支持返回执行结果，需要调用FutureTask.get()得到，此方法会阻塞主进程的继续往下执行，如果不调用不会阻塞。</p>\r\n<h4><a id=\"_run_start_537\"></a>线程的 run()和 start()有什么区别？</h4>\r\n<p>每个线程都是通过某个特定Thread对象所对应的方法run()来完成其操作的，run()方法称为线程体。通过调用Thread类的start()方法来启动一个线程。</p>\r\n<p>start() 方法用于启动线程，run() 方法用于执行线程的运行时代码。run() 可以重复调用，而 start() 只能调用一次。</p>\r\n<p>start()方法来启动一个线程，真正实现了多线程运行。调用start()方法无需等待run方法体代码执行完毕，可以直接继续执行其他的代码； 此时线程是处于就绪状态，并没有运行。 然后通过此Thread类调用方法run()来完成其运行状态， run()方法运行结束， 此线程终止。然后CPU再调度其它线程。</p>\r\n<p>run()方法是在本线程里的，只是线程里的一个函数，而不是多线程的。 如果直接调用run()，其实就相当于是调用了一个普通函数而已，直接待用run()方法必须等待run()方法执行完毕才能执行下面的代码，所以执行路径还是只有一条，根本就没有线程的特征，所以在多线程执行时要使用start()方法而不是run()方法。</p>\r\n<h4><a id=\"_start__run__run__549\"></a>为什么我们调用 start() 方法时会执行 run() 方法，为什么我们不能直接调用 run() 方法？</h4>\r\n<p>这是另一个非常经典的 java 多线程面试问题，而且在面试中会经常被问到。很简单，但是很多人都会答不上来！</p>\r\n<p>new 一个 Thread，线程进入了新建状态。调用 start() 方法，会启动一个线程并使线程进入了就绪状态，当分配到时间片后就可以开始运行了。 start() 会执行线程的相应准备工作，然后自动执行 run() 方法的内容，这是真正的多线程工作。</p>\r\n<p>而直接执行 run() 方法，会把 run 方法当成一个 main 线程下的普通方法去执行，并不会在某个线程中执行它，所以这并不是多线程工作。</p>\r\n<p>总结： 调用 start 方法方可启动线程并使线程进入就绪状态，而 run 方法只是 thread 的一个普通方法调用，还是在主线程里执行。</p>\r\n<h4><a id=\"_Callable__Future_561\"></a>什么是 Callable 和 Future?</h4>\r\n<p>Callable 接口类似于 Runnable，从名字就可以看出来了，但是 Runnable 不会返回结果，并且无法抛出返回结果的异常，而 Callable 功能更强大一些，被线程执行后，可以返回值，这个返回值可以被 Future 拿到，也就是说，Future 可以拿到异步执行任务的返回值。</p>\r\n<p>Future 接口表示异步任务，是一个可能还没有完成的异步任务的结果。所以说 Callable用于产生结果，Future 用于获取结果。</p>\r\n<h4><a id=\"_FutureTask_569\"></a>什么是 FutureTask</h4>\r\n<p>FutureTask 表示一个异步运算的任务。FutureTask 里面可以传入一个 Callable 的具体实现类，可以对这个异步运算的任务的结果进行等待获取、判断是否已经完成、取消任务等操作。只有当运算完成的时候结果才能取回，如果运算尚未完成 get 方法将会阻塞。一个 FutureTask 对象可以对调用了 Callable 和 Runnable 的对象进行包装，由于 FutureTask 也是Runnable 接口的实现类，所以 FutureTask 也可以放入线程池中。</p>\r\n<h3><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"_577\"></a>线程的状态和基本操作</h3>\r\n<h4><a id=\"_579\"></a>说说线程的生命周期及五种基本状态？</h4>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxNy8xMi8xNS8xNjA1OWNjOTFlZThlZmIz?x-oss-process=image/format,png\" alt=\"线程的基本状态\"></p>\r\n<ol><li> <p><strong>新建(new)</strong>：新创建了一个线程对象。</p> </li><li> <p><strong>可运行(runnable)</strong>：线程对象创建后，当调用线程对象的 start()方法，该线程处于就绪状态，等待被线程调度选中，获取cpu的使用权。</p> </li><li> <p><strong>运行(running)</strong>：可运行状态(runnable)的线程获得了cpu时间片（timeslice），执行程序代码。注：就绪状态是进入到运行状态的唯一入口，也就是说，线程要想进入运行状态执行，首先必须处于就绪状态中；</p> </li><li> <p><strong>阻塞(block)</strong>：处于运行状态中的线程由于某种原因，暂时放弃对 CPU的使用权，停止执行，此时进入阻塞状态，直到其进入到就绪状态，才 有机会再次被 CPU 调用以进入到运行状态。</p> <p>阻塞的情况分三种：<br> (一). 等待阻塞：运行状态中的线程执行 wait()方法，JVM会把该线程放入等待队列(waitting queue)中，使本线程进入到等待阻塞状态；<br> (二). 同步阻塞：线程在获取 synchronized 同步锁失败(因为锁被其它线程所占用)，，则JVM会把该线程放入锁池(lock pool)中，线程会进入同步阻塞状态；<br> (三). 其他阻塞: 通过调用线程的 sleep()或 join()或发出了 I/O 请求时，线程会进入到阻塞状态。当 sleep()状态超时、join()等待线程终止或者超时、或者 I/O 处理完毕时，线程重新转入就绪状态。</p> </li><li> <p><strong>死亡(dead)</strong>：线程run()、main()方法执行结束，或者因异常退出了run()方法，则该线程结束生命周期。死亡的线程不可再次复生。</p> </li></ol>\r\n<h4><a id=\"Java__600\"></a>Java 中用到的线程调度算法是什么？</h4>\r\n<p>计算机通常只有一个 CPU，在任意时刻只能执行一条机器指令，每个线程只有获得CPU 的使用权才能执行指令。所谓多线程的并发运行，其实是指从宏观上看，各个线程轮流获得 CPU 的使用权，分别执行各自的任务。在运行池中，会有多个处于就绪状态的线程在等待 CPU，JAVA 虚拟机的一项任务就是负责线程的调度，线程调度是指按照特定机制为多个线程分配 CPU 的使用权。</p>\r\n<p>有两种调度模型：分时调度模型和抢占式调度模型。</p>\r\n<p>分时调度模型是指让所有的线程轮流获得 cpu 的使用权，并且平均分配每个线程占用的 CPU 的时间片这个也比较好理解。</p>\r\n<p>Java虚拟机采用抢占式调度模型，是指优先让可运行池中优先级高的线程占用CPU，如果可运行池中的线程优先级相同，那么就随机选择一个线程，使其占用CPU。处于运行状态的线程会一直运行，直至它不得不放弃 CPU。</p>\r\n<h4><a id=\"_612\"></a>线程的调度策略</h4>\r\n<p>线程调度器选择优先级最高的线程运行，但是，如果发生以下情况，就会终止线程的运行：</p>\r\n<p>（1）线程体中调用了 yield 方法让出了对 cpu 的占用权利</p>\r\n<p>（2）线程体中调用了 sleep 方法使线程进入睡眠状态</p>\r\n<p>（3）线程由于 IO 操作受到阻塞</p>\r\n<p>（4）另外一个更高优先级线程出现</p>\r\n<p>（5）在支持时间片的系统中，该线程的时间片用完</p>\r\n<h4><a id=\"Thread_SchedulerTime_Slicing__628\"></a>什么是线程调度器(Thread Scheduler)和时间分片(Time Slicing )？</h4>\r\n<p>线程调度器是一个操作系统服务，它负责为 Runnable 状态的线程分配 CPU 时间。一旦我们创建一个线程并启动它，它的执行便依赖于线程调度器的实现。</p>\r\n<p>时间分片是指将可用的 CPU 时间分配给可用的 Runnable 线程的过程。分配 CPU 时间可以基于线程优先级或者线程等待的时间。</p>\r\n<p>线程调度并不受到 Java 虚拟机控制，所以由应用程序来控制它是更好的选择（也就是说不要让你的程序依赖于线程的优先级）。</p>\r\n<h4><a id=\"_638\"></a>请说出与线程同步以及线程调度相关的方法。</h4>\r\n<p>（1） wait()：使一个线程处于等待（阻塞）状态，并且释放所持有的对象的锁；</p>\r\n<p>（2）sleep()：使一个正在运行的线程处于睡眠状态，是一个静态方法，调用此方法要处理 InterruptedException 异常；</p>\r\n<p>（3）notify()：唤醒一个处于等待状态的线程，当然在调用此方法的时候，并不能确切的唤醒某一个等待状态的线程，而是由 JVM 确定唤醒哪个线程，而且与优先级无关；</p>\r\n<p>（4）notityAll()：唤醒所有处于等待状态的线程，该方法并不是将对象的锁给所有线程，而是让它们竞争，只有获得锁的线程才能进入就绪状态；</p>\r\n<h4><a id=\"sleep__wait__650\"></a>sleep() 和 wait() 有什么区别？</h4>\r\n<p>两者都可以暂停线程的执行</p>\r\n<ul><li>类的不同：sleep() 是 Thread线程类的静态方法，wait() 是 Object类的方法。</li><li>是否释放锁：sleep() 不释放锁；wait() 释放锁。</li><li>用途不同：Wait 通常被用于线程间交互/通信，sleep 通常被用于暂停执行。</li><li>用法不同：wait() 方法被调用后，线程不会自动苏醒，需要别的线程调用同一个对象上的 notify() 或者 notifyAll() 方法。sleep() 方法执行完成后，线程会自动苏醒。或者可以使用wait(long timeout)超时后线程会自动苏醒。</li></ul>\r\n<h4><a id=\"_wait__if__661\"></a>你是如何调用 wait() 方法的？使用 if 块还是循环？为什么？</h4>\r\n<p>处于等待状态的线程可能会收到错误警报和伪唤醒，如果不在循环中检查等待条件，程序就会在没有满足结束条件的情况下退出。</p>\r\n<p>wait() 方法应该在循环调用，因为当线程获取到 CPU 开始执行的时候，其他条件可能还没有满足，所以在处理前，循环检测条件是否满足会更好。下面是一段标准的使用 wait 和 notify 方法的代码：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>monitor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token comment\">//  判断条件谓词是否得到满足</span>\r\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>locked<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">//  等待唤醒</span>\r\n        monitor<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token comment\">//  处理其他的业务逻辑</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<h4><a id=\"_wait_notify_notifyAll_Object__680\"></a>为什么线程通信的方法 wait(), notify()和 notifyAll()被定义在 Object 类里？</h4>\r\n<p>Java中，任何对象都可以作为锁，并且 wait()，notify()等方法用于等待对象的锁或者唤醒线程，在 Java 的线程中并没有可供任何对象使用的锁，所以任意对象调用方法一定定义在Object类中。</p>\r\n<p>wait(), notify()和 notifyAll()这些方法在同步代码块中调用</p>\r\n<p>有的人会说，既然是线程放弃对象锁，那也可以把wait()定义在Thread类里面啊，新定义的线程继承于Thread类，也不需要重新定义wait()方法的实现。然而，这样做有一个非常大的问题，一个线程完全可以持有很多锁，你一个线程放弃锁的时候，到底要放弃哪个锁？当然了，这种设计并不是不能实现，只是管理起来更加复杂。</p>\r\n<p>综上所述，wait()、notify()和notifyAll()方法要定义在Object类中。</p>\r\n<h4><a id=\"_wait_notify_notifyAll_692\"></a>为什么 wait(), notify()和 notifyAll()必须在同步方法或者同步块中被调用？</h4>\r\n<p>当一个线程需要调用对象的 wait()方法的时候，这个线程必须拥有该对象的锁，接着它就会释放这个对象锁并进入等待状态直到其他线程调用这个对象上的 notify()方法。同样的，当一个线程需要调用对象的 notify()方法时，它会释放这个对象的锁，以便其他在等待的线程就可以得到这个对象锁。由于所有的这些方法都需要线程持有对象的锁，这样就只能通过同步来实现，所以他们只能在同步方法或者同步块中被调用。</p>\r\n<h4><a id=\"Thread__yield__698\"></a>Thread 类中的 yield 方法有什么作用？</h4>\r\n<p>使当前线程从执行状态（运行状态）变为可执行态（就绪状态）。</p>\r\n<p>当前线程到了就绪状态，那么接下来哪个线程会从就绪状态变成执行状态呢？可能是当前线程，也可能是其他线程，看系统的分配了。</p>\r\n<h4><a id=\"_Thread__sleep_yield__706\"></a>为什么 Thread 类的 sleep()和 yield ()方法是静态的？</h4>\r\n<p>Thread 类的 sleep()和 yield()方法将在当前正在执行的线程上运行。所以在其他处于等待状态的线程上调用这些方法是没有意义的。这就是为什么这些方法是静态的。它们可以在当前正在执行的线程中工作，并避免程序员错误的认为可以在其他非运行线程调用这些方法。</p>\r\n<h4><a id=\"_sleep_yield_712\"></a>线程的 sleep()方法和 yield()方法有什么区别？</h4>\r\n<p>（1） sleep()方法给其他线程运行机会时不考虑线程的优先级，因此会给低优先级的线程以运行的机会；yield()方法只会给相同优先级或更高优先级的线程以运行的机会；</p>\r\n<p>（2） 线程执行 sleep()方法后转入阻塞（blocked）状态，而执行 yield()方法后转入就绪（ready）状态；</p>\r\n<p>（3）sleep()方法声明抛出 InterruptedException，而 yield()方法没有声明任何异常；</p>\r\n<p>（4）sleep()方法比 yield()方法（跟操作系统 CPU 调度相关）具有更好的可移植性，通常不建议使用yield()方法来控制并发线程的执行。</p>\r\n<h4><a id=\"_724\"></a>如何停止一个正在运行的线程？</h4>\r\n<p>在java中有以下3种方法可以终止正在运行的线程：</p>\r\n<ol><li>使用退出标志，使线程正常退出，也就是当run方法完成后线程终止。</li><li>使用stop方法强行终止，但是不推荐这个方法，因为stop和suspend及resume一样都是过期作废的方法。</li><li>使用interrupt方法中断线程。</li></ol>\r\n<h4><a id=\"Java__interrupted__isInterrupted__734\"></a>Java 中 interrupted 和 isInterrupted 方法的区别？</h4>\r\n<p>interrupt：用于中断线程。调用该方法的线程的状态为将被置为”中断”状态。</p>\r\n<p>注意：线程中断仅仅是置线程的中断状态位，不会停止线程。需要用户自己去监视线程的状态为并做处理。支持线程中断的方法（也就是线程中断后会抛出interruptedException 的方法）就是在监视线程的中断状态，一旦线程的中断状态被置为“中断状态”，就会抛出中断异常。</p>\r\n<p>interrupted：是静态方法，查看当前中断信号是true还是false并且清除中断信号。如果一个线程被中断了，第一次调用 interrupted 则返回 true，第二次和后面的就返回 false 了。</p>\r\n<p>isInterrupted：查看当前中断信号是true还是false</p>\r\n<h4><a id=\"_746\"></a>什么是阻塞式方法？</h4>\r\n<p>阻塞式方法是指程序会一直等待该方法完成期间不做其他事情，ServerSocket 的accept()方法就是一直等待客户端连接。这里的阻塞是指调用结果返回之前，当前线程会被挂起，直到得到结果之后才会返回。此外，还有异步和非阻塞式方法在任务完成前就返回。</p>\r\n<h4><a id=\"Java__752\"></a>Java 中你怎样唤醒一个阻塞的线程？</h4>\r\n<p>首先 ，wait()、notify() 方法是针对对象的，调用任意对象的 wait()方法都将导致线程阻塞，阻塞的同时也将释放该对象的锁，相应地，调用任意对象的 notify()方法则将随机解除该对象阻塞的线程，但它需要重新获取该对象的锁，直到获取成功才能往下执行；</p>\r\n<p>其次，wait、notify 方法必须在 synchronized 块或方法中被调用，并且要保证同步块或方法的锁对象与调用 wait、notify 方法的对象是同一个，如此一来在调用 wait 之前当前线程就已经成功获取某对象的锁，执行 wait 阻塞后当前线程就将之前获取的对象锁释放。</p>\r\n<h4><a id=\"notify__notifyAll__760\"></a>notify() 和 notifyAll() 有什么区别？</h4>\r\n<p>如果线程调用了对象的 wait()方法，那么线程便会处于该对象的等待池中，等待池中的线程不会去竞争该对象的锁。</p>\r\n<p>notifyAll() 会唤醒所有的线程，notify() 只会唤醒一个线程。</p>\r\n<p>notifyAll() 调用后，会将全部线程由等待池移到锁池，然后参与锁的竞争，竞争成功则继续执行，如果不成功则留在锁池等待锁被释放后再次参与竞争。而 notify()只会唤醒一个线程，具体唤醒哪一个线程由虚拟机控制。</p>\r\n<h4><a id=\"_770\"></a>如何在两个线程间共享数据？</h4>\r\n<p>在两个线程间共享变量即可实现共享。</p>\r\n<p>一般来说，共享变量要求变量本身是线程安全的，然后在线程内使用的时候，如果有对共享变量的复合操作，那么也得保证复合操作的线程安全性。</p>\r\n<h4><a id=\"Java__778\"></a>Java 如何实现多线程之间的通讯和协作？</h4>\r\n<p>可以通过中断 和 共享变量的方式实现线程间的通讯和协作</p>\r\n<p>比如说最经典的生产者-消费者模型：当队列满时，生产者需要等待队列有空间才能继续往里面放入商品，而<strong>在等待的期间内，生产者必须释放对临界资源（即队列）的占用权</strong>。因为生产者如果不释放对临界资源的占用权，那么<strong>消费者就无法消费队列中的商品</strong>，就不会让队列有空间，那么生产者就会一直无限等待下去。因此，一般情况下，当队列满时，会让生产者交出对临界资源的占用权，并进入挂起状态。然后等待消费者消费了商品，然后消费者通知生产者队列有空间了。同样地，当队列空时，消费者也必须等待，等待生产者通知它队列中有商品了。这种互相通信的过程就是线程间的协作。</p>\r\n<p>Java中线程通信协作的最常见的两种方式：</p>\r\n<p>一.syncrhoized加锁的线程的<strong>Object类</strong>的wait()/notify()/notifyAll()</p>\r\n<p>二.ReentrantLock类加锁的线程的<strong>Condition类的</strong>await()/signal()/signalAll()</p>\r\n<p>线程间直接的数据交换：</p>\r\n<p>三.通过管道进行线程间通信：1）字节流；2）字符流</p>\r\n<h4><a id=\"_796\"></a>同步方法和同步块，哪个是更好的选择？</h4>\r\n<p>同步块是更好的选择，因为它不会锁住整个对象（当然你也可以让它锁住整个对象）。同步方法会锁住整个对象，哪怕这个类中有多个不相关联的同步块，这通常会导致他们停止执行并需要等待获得这个对象上的锁。</p>\r\n<p>同步块更要符合开放调用的原则，只在需要锁住的代码块锁住相应的对象，这样从侧面来说也可以避免死锁。</p>\r\n<p>请知道一条原则：同步的范围越小越好。</p>\r\n<h4><a id=\"_806\"></a>什么是线程同步和线程互斥，有哪几种实现方式？</h4>\r\n<p>当一个线程对共享的数据进行操作时，应使之成为一个”原子操作“，即在没有完成相关操作之前，不允许其他线程打断它，否则，就会破坏数据的完整性，必然会得到错误的处理结果，这就是线程的同步。</p>\r\n<p>在多线程应用中，考虑不同线程之间的数据同步和防止死锁。当两个或多个线程之间同时等待对方释放资源的时候就会形成线程之间的死锁。为了防止死锁的发生，需要通过同步来实现线程安全。</p>\r\n<p>线程互斥是指对于共享的进程系统资源，在各单个线程访问时的排它性。当有若干个线程都要使用某一共享资源时，任何时刻最多只允许一个线程去使用，其它要使用该资源的线程必须等待，直到占用资源者释放该资源。线程互斥可以看成是一种特殊的线程同步。</p>\r\n<p>线程间的同步方法大体可分为两类：用户模式和内核模式。顾名思义，内核模式就是指利用系统内核对象的单一性来进行同步，使用时需要切换内核态与用户态，而用户模式就是不需要切换到内核态，只在用户态完成操作。</p>\r\n<p>用户模式下的方法有：原子操作（例如一个单一的全局变量），临界区。内核模式下的方法有：事件，信号量，互斥量。</p>\r\n<p>实现线程同步的方法</p>\r\n<ul><li> <p>同步代码方法：sychronized 关键字修饰的方法</p> </li><li> <p>同步代码块：sychronized 关键字修饰的代码块</p> </li><li> <p>使用特殊变量域volatile实现线程同步：volatile关键字为域变量的访问提供了一种免锁机制</p> </li><li> <p>使用重入锁实现线程同步：reentrantlock类是可冲入、互斥、实现了lock接口的锁他与sychronized方法具有相同的基本行为和语义</p> </li></ul>\r\n<h4><a id=\"Monitor_830\"></a>在监视器(Monitor)内部，是如何做线程同步的？程序应该做哪种级别的同步？</h4>\r\n<p>在 java 虚拟机中，每个对象( Object 和 class )通过某种逻辑关联监视器,每个监视器和一个对象引用相关联，为了实现监视器的互斥功能，每个对象都关联着一把锁。</p>\r\n<p>一旦方法或者代码块被 <strong>synchronized</strong> 修饰，那么这个部分就放入了监视器的监视区域，<strong>确保一次只能有一个线程执行该部分的代码</strong>，线程在获取锁之前不允许执行该部分的代码</p>\r\n<p>另外 java 还提供了显式监视器( Lock )和隐式监视器( synchronized )两种锁方案</p>\r\n<h4><a id=\"_840\"></a>如果你提交任务时，线程池队列已满，这时会发生什么</h4>\r\n<p>这里区分一下：</p>\r\n<p>（1）如果使用的是无界队列 LinkedBlockingQueue，也就是无界队列的话，没关系，继续添加任务到阻塞队列中等待执行，因为 LinkedBlockingQueue 可以近乎认为是一个无穷大的队列，可以无限存放任务</p>\r\n<p>（2）如果使用的是有界队列比如 ArrayBlockingQueue，任务首先会被添加到ArrayBlockingQueue 中，ArrayBlockingQueue 满了，会根据maximumPoolSize 的值增加线程数量，如果增加了线程数量还是处理不过来，ArrayBlockingQueue 继续满，那么则会使用拒绝策略RejectedExecutionHandler 处理满了的任务，默认是 AbortPolicy</p>\r\n<h4><a id=\"servlet__850\"></a>什么叫线程安全？servlet 是线程安全吗?</h4>\r\n<p>线程安全是编程中的术语，指某个方法在多线程环境中被调用时，能够正确地处理多个线程之间的共享变量，使程序功能正确完成。</p>\r\n<p>Servlet 不是线程安全的，servlet 是单实例多线程的，当多个线程同时访问同一个方法，是不能保证共享变量的线程安全性的。</p>\r\n<p>Struts2 的 action 是多实例多线程的，是线程安全的，每个请求过来都会 new 一个新的 action 分配给这个请求，请求完成后销毁。</p>\r\n<p>SpringMVC 的 Controller 是线程安全的吗？不是的，和 Servlet 类似的处理流程。</p>\r\n<p>Struts2 好处是不用考虑线程安全问题；Servlet 和 SpringMVC 需要考虑线程安全问题，但是性能可以提升不用处理太多的 gc，可以使用 ThreadLocal 来处理多线程的问题。</p>\r\n<h4><a id=\"_Java__864\"></a>在 Java 程序中怎么保证多线程的运行安全？</h4>\r\n<ul><li>方法一：使用安全类，比如 java.util.concurrent 下的类，使用原子类AtomicInteger</li><li>方法二：使用自动锁 synchronized。</li><li>方法三：使用手动锁 Lock。</li></ul>\r\n<p>手动锁 Java 示例代码如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-Java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Lock lock = new ReentrantLock();\r\nlock. lock();\r\ntry {\r\n    System. out. println(\"获得锁\");\r\n} catch (Exception e) {\r\n    // TODO: handle exception\r\n} finally {\r\n    System. out. println(\"释放锁\");\r\n    lock. unlock();\r\n}\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<h4><a id=\"_887\"></a>你对线程优先级的理解是什么？</h4>\r\n<p>每一个线程都是有优先级的，一般来说，高优先级的线程在运行时会具有优先权，但这依赖于线程调度的实现，这个实现是和操作系统相关的(OS dependent)。我们可以定义线程的优先级，但是这并不能保证高优先级的线程会在低优先级的线程前执行。线程优先级是一个 int 变量(从 1-10)，1 代表最低优先级，10 代表最高优先级。</p>\r\n<p>Java 的线程优先级调度会委托给操作系统去处理，所以与具体的操作系统优先级有关，如非特别需要，一般无需设置线程优先级。</p>\r\n<h4><a id=\"_895\"></a>线程类的构造方法、静态块是被哪个线程调用的</h4>\r\n<p>这是一个非常刁钻和狡猾的问题。请记住：线程类的构造方法、静态块是被 new这个线程类所在的线程所调用的，而 run 方法里面的代码才是被线程自身所调用的。</p>\r\n<p>如果说上面的说法让你感到困惑，那么我举个例子，假设 Thread2 中 new 了Thread1，main 函数中 new 了 Thread2，那么：</p>\r\n<p>（1）Thread2 的构造方法、静态块是 main 线程调用的，Thread2 的 run()方法是Thread2 自己调用的</p>\r\n<p>（2）Thread1 的构造方法、静态块是 Thread2 调用的，Thread1 的 run()方法是Thread1 自己调用的</p>\r\n<h4><a id=\"Java__dump__Java__907\"></a>Java 中怎么获取一份线程 dump 文件？你如何在 Java 中获取线程堆栈？</h4>\r\n<p>Dump文件是进程的内存镜像。可以把程序的执行状态通过调试器保存到dump文件中。</p>\r\n<p>在 Linux 下，你可以通过命令 kill -3 PID （Java 进程的进程 ID）来获取 Java应用的 dump 文件。</p>\r\n<p>在 Windows 下，你可以按下 Ctrl + Break 来获取。这样 JVM 就会将线程的 dump 文件打印到标准输出或错误文件中，它可能打印在控制台或者日志文件中，具体位置依赖应用的配置。</p>\r\n<h4><a id=\"_917\"></a>一个线程运行时发生异常会怎样？</h4>\r\n<p>如果异常没有被捕获该线程将会停止执行。Thread.UncaughtExceptionHandler是用于处理未捕获异常造成线程突然中断情况的一个内嵌接口。当一个未捕获异常将造成线程中断的时候，JVM 会使用 Thread.getUncaughtExceptionHandler()来查询线程的 UncaughtExceptionHandler 并将线程和异常作为参数传递给 handler 的 uncaughtException()方法进行处理。</p>\r\n<h4><a id=\"Java__923\"></a>Java 线程数过多会造成什么异常？</h4>\r\n<ul><li> <p>线程的生命周期开销非常高</p> </li><li> <p>消耗过多的 CPU</p> <p>资源如果可运行的线程数量多于可用处理器的数量，那么有线程将会被闲置。大量空闲的线程会占用许多内存，给垃圾回收器带来压力，而且大量的线程在竞争 CPU资源时还将产生其他性能的开销。</p> </li><li> <p>降低稳定性JVM</p> <p>在可创建线程的数量上存在一个限制，这个限制值将随着平台的不同而不同，并且承受着多个因素制约，包括 JVM 的启动参数、Thread 构造函数中请求栈的大小，以及底层操作系统对线程的限制等。如果破坏了这些限制，那么可能抛出OutOfMemoryError 异常。</p> </li></ul>\r\n<h2><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"_939\"></a>并发理论</h2>\r\n<h3><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"Java_941\"></a>Java内存模型</h3>\r\n<h4><a id=\"Java_943\"></a>Java中垃圾回收有什么目的？什么时候进行垃圾回收？</h4>\r\n<p>垃圾回收是在内存中存在没有引用的对象或超过作用域的对象时进行的。</p>\r\n<p>垃圾回收的目的是识别并且丢弃应用不再使用的对象来释放和重用资源。</p>\r\n<h4><a id=\"null_951\"></a>如果对象的引用被置为null，垃圾收集器是否会立即释放对象占用的内存？</h4>\r\n<p>不会，在下一个垃圾回调周期中，这个对象将是被可回收的。</p>\r\n<p>也就是说并不会立即被垃圾收集器立刻回收，而是在下一次垃圾回收时才会释放其占用的内存。</p>\r\n<h4><a id=\"finalizefinalization_959\"></a>finalize()方法什么时候被调用？析构函数(finalization)的目的是什么？</h4>\r\n<p>1）垃圾回收器（garbage colector）决定回收某对象时，就会运行该对象的finalize()方法；<br> finalize是Object类的一个方法，该方法在Object类中的声明protected void finalize() throws Throwable { }<br> 在垃圾回收器执行时会调用被回收对象的finalize()方法，可以覆盖此方法来实现对其资源的回收。注意：一旦垃圾回收器准备释放对象占用的内存，将首先调用该对象的finalize()方法，并且下一次垃圾回收动作发生时，才真正回收对象占用的内存空间</p>\r\n<p>2）GC本来就是内存回收了，应用还需要在finalization做什么呢？ 答案是大部分时候，什么都不用做(也就是不需要重载)。只有在某些很特殊的情况下，比如你调用了一些native的方法(一般是C写的)，可以要在finaliztion里去调用C的释放函数。</p>\r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"_971\"></a>重排序与数据依赖性</h3>\r\n<h4><a id=\"_973\"></a>为什么代码会重排序？</h4>\r\n<p>在执行程序时，为了提供性能，处理器和编译器常常会对指令进行重排序，但是不能随意重排序，不是你想怎么排序就怎么排序，它需要满足以下两个条件：</p>\r\n<ul><li> <p>在单线程环境下不能改变程序运行的结果；</p> </li><li> <p>存在数据依赖关系的不允许重排序</p> </li></ul>\r\n<p>需要注意的是：重排序不会影响单线程环境的执行结果，但是会破坏多线程的执行语义。</p>\r\n<h3><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"asifserialhappensbefore_987\"></a>as-if-serial规则和happens-before规则的区别</h3>\r\n<ul><li> <p>as-if-serial语义保证单线程内程序的执行结果不被改变，happens-before关系保证正确同步的多线程程序的执行结果不被改变。</p> </li><li> <p>as-if-serial语义给编写单线程程序的程序员创造了一个幻境：单线程程序是按程序的顺序来执行的。happens-before关系给编写正确同步的多线程程序的程序员创造了一个幻境：正确同步的多线程程序是按happens-before指定的顺序来执行的。</p> </li><li> <p>as-if-serial语义和happens-before这么做的目的，都是为了在不改变程序执行结果的前提下，尽可能地提高程序执行的并行度。</p> </li></ul>\r\n<h2><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"_1000\"></a>并发关键字</h2>\r\n<h3><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"synchronized_1002\"></a>synchronized</h3>\r\n<h4><a id=\"synchronized__1004\"></a>synchronized 的作用？</h4>\r\n<p>在 Java 中，synchronized 关键字是用来控制线程同步的，就是在多线程的环境下，控制 synchronized 代码段不被多个线程同时执行。synchronized 可以修饰类、方法、变量。</p>\r\n<p>另外，在 Java 早期版本中，synchronized属于重量级锁，效率低下，因为监视器锁（monitor）是依赖于底层的操作系统的 Mutex Lock 来实现的，Java 的线程是映射到操作系统的原生线程之上的。如果要挂起或者唤醒一个线程，都需要操作系统帮忙完成，而操作系统实现线程之间的切换时需要从用户态转换到内核态，这个状态之间的转换需要相对比较长的时间，时间成本相对较高，这也是为什么早期的 synchronized 效率低的原因。庆幸的是在 Java 6 之后 Java 官方对从 JVM 层面对synchronized 较大优化，所以现在的 synchronized 锁效率也优化得很不错了。JDK1.6对锁的实现引入了大量的优化，如自旋锁、适应性自旋锁、锁消除、锁粗化、偏向锁、轻量级锁等技术来减少锁操作的开销。</p>\r\n<h4><a id=\"_synchronized__1012\"></a>说说自己是怎么使用 synchronized 关键字，在项目中用到了吗</h4>\r\n<p><strong>synchronized关键字最主要的三种使用方式：</strong></p>\r\n<ul><li><strong>修饰实例方法:</strong> 作用于当前对象实例加锁，进入同步代码前要获得当前对象实例的锁</li><li><strong>修饰静态方法:</strong> 也就是给当前类加锁，会作用于类的所有对象实例，因为静态成员不属于任何一个实例对象，是类成员（ static 表明这是该类的一个静态资源，不管new了多少个对象，只有一份）。所以如果一个线程A调用一个实例对象的非静态 synchronized 方法，而线程B需要调用这个实例对象所属类的静态 synchronized 方法，是允许的，不会发生互斥现象，<strong>因为访问静态 synchronized 方法占用的锁是当前类的锁，而访问非静态 synchronized 方法占用的锁是当前实例对象锁</strong>。</li><li><strong>修饰代码块:</strong> 指定加锁对象，对给定对象加锁，进入同步代码库前要获得给定对象的锁。</li></ul>\r\n<p><strong>总结：</strong> synchronized 关键字加到 static 静态方法和 synchronized(class)代码块上都是是给 Class 类上锁。synchronized 关键字加到实例方法上是给对象实例上锁。尽量不要使用 synchronized(String a) 因为JVM中，字符串常量池具有缓存功能！</p>\r\n<p>下面我以一个常见的面试题为例讲解一下 synchronized 关键字的具体使用。</p>\r\n<p>面试中面试官经常会说：“单例模式了解吗？来给我手写一下！给我解释一下双重检验锁方式实现单例模式的原理呗！”</p>\r\n<p><strong>双重校验锁实现对象单例（线程安全）</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">volatile</span> <span class=\"token keyword\">static</span> Singleton uniqueInstance<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token function\">Singleton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> Singleton <span class=\"token function\">getUniqueInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n       <span class=\"token comment\">//先判断对象是否已经实例过，没有实例化过才进入加锁代码</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>uniqueInstance <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token comment\">//类对象加锁</span>\r\n            <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>Singleton<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>uniqueInstance <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    uniqueInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">return</span> uniqueInstance<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li></ul></pre>\r\n<p>另外，需要注意 uniqueInstance 采用 volatile 关键字修饰也是很有必要。</p>\r\n<p>uniqueInstance 采用 volatile 关键字修饰也是很有必要的， uniqueInstance = new Singleton(); 这段代码其实是分为三步执行：</p>\r\n<ol><li>为 uniqueInstance 分配内存空间</li><li>初始化 uniqueInstance</li><li>将 uniqueInstance 指向分配的内存地址</li></ol>\r\n<p>但是由于 JVM 具有指令重排的特性，执行顺序有可能变成 1-&gt;3-&gt;2。指令重排在单线程环境下不会出现问题，但是在多线程环境下会导致一个线程获得还没有初始化的实例。例如，线程 T1 执行了 1 和 3，此时 T2 调用 getUniqueInstance() 后发现 uniqueInstance 不为空，因此返回 uniqueInstance，但此时 uniqueInstance 还未被初始化。</p>\r\n<p>使用 volatile 可以禁止 JVM 的指令重排，保证在多线程环境下也能正常运行。</p>\r\n<h4><a id=\"_synchronized__1065\"></a>说一下 synchronized 底层实现原理？</h4>\r\n<p>synchronized是Java中的一个关键字，在使用的过程中并没有看到显示的加锁和解锁过程。因此有必要通过javap命令，查看相应的字节码文件。</p>\r\n<p>synchronized 同步语句块的情况</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SynchronizedDemo</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"synchronized 代码块\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<p>通过JDK 反汇编指令 javap -c -v SynchronizedDemo</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8xMS8yNS8xNmVhMDQ3NGY5ODYyMzE5?x-oss-process=image/format,png\" alt=\"synchronized关键字原理\"></p>\r\n<p>可以看出在执行同步代码块之前之后都有一个monitor字样，其中前面的是monitorenter，后面的是离开monitorexit，不难想象一个线程也执行同步代码块，首先要获取锁，而获取锁的过程就是monitorenter ，在执行完代码块之后，要释放锁，释放锁就是执行monitorexit指令。</p>\r\n<p>为什么会有两个monitorexit呢？</p>\r\n<p>这个主要是防止在同步代码块中线程因异常退出，而锁没有得到释放，这必然会造成死锁（等待的线程永远获取不到锁）。因此最后一个monitorexit是保证在异常情况下，锁也可以得到释放，避免死锁。<br> 仅有ACC_SYNCHRONIZED这么一个标志，该标记表明线程进入该方法时，需要monitorenter，退出该方法时需要monitorexit。</p>\r\n<p>synchronized可重入的原理</p>\r\n<p>重入锁是指一个线程获取到该锁之后，该线程可以继续获得该锁。底层原理维护一个计数器，当线程获取该锁时，计数器加一，再次获得该锁时继续加一，释放锁时，计数器减一，当计数器值为0时，表明该锁未被任何线程所持有，其它线程可以竞争获取锁。</p>\r\n<h4><a id=\"_1098\"></a>什么是自旋</h4>\r\n<p>很多 synchronized 里面的代码只是一些很简单的代码，执行时间非常快，此时等待的线程都加锁可能是一种不太值得的操作，因为线程阻塞涉及到用户态和内核态切换的问题。既然 synchronized 里面的代码执行得非常快，不妨让等待锁的线程不要被阻塞，而是在 synchronized 的边界做忙循环，这就是自旋。如果做了多次循环发现还没有获得锁，再阻塞，这样可能是一种更好的策略。</p>\r\n<h4><a id=\"_synchronized__1104\"></a>多线程中 synchronized 锁升级的原理是什么？</h4>\r\n<p>synchronized 锁升级原理：在锁对象的对象头里面有一个 threadid 字段，在第一次访问的时候 threadid 为空，jvm 让其持有偏向锁，并将 threadid 设置为其线程 id，再次进入的时候会先判断 threadid 是否与其线程 id 一致，如果一致则可以直接使用此对象，如果不一致，则升级偏向锁为轻量级锁，通过自旋循环一定次数来获取锁，执行一定次数之后，如果还没有正常获取到要使用的对象，此时就会把锁从轻量级升级为重量级锁，此过程就构成了 synchronized 锁的升级。</p>\r\n<p>锁的升级的目的：锁升级是为了减低了锁带来的性能消耗。在 Java 6 之后优化 synchronized 的实现方式，使用了偏向锁升级为轻量级锁再升级到重量级锁的方式，从而减低了锁带来的性能消耗。</p>\r\n<h4><a id=\"_B__A__1112\"></a>线程 B 怎么知道线程 A 修改了变量</h4>\r\n<p>（1）volatile 修饰变量</p>\r\n<p>（2）synchronized 修饰修改变量的方法</p>\r\n<p>（3）wait/notify</p>\r\n<p>（4）while 轮询</p>\r\n<h4><a id=\"_synchronized__A__synchronized__B_1124\"></a>当一个线程进入一个对象的 synchronized 方法 A 之后，其它线程是否可进入此对象的 synchronized 方法 B？</h4>\r\n<p>不能。其它线程只能访问该对象的非同步方法，同步方法则不能进入。因为非静态方法上的 synchronized 修饰符要求执行方法时要获得对象的锁，如果已经进入A 方法说明对象锁已经被取走，那么试图进入 B 方法的线程就只能在等锁池（注意不是等待池哦）中等待对象的锁。</p>\r\n<h4><a id=\"synchronizedvolatileCAS__1130\"></a>synchronized、volatile、CAS 比较</h4>\r\n<p>（1）synchronized 是悲观锁，属于抢占式，会引起其他线程阻塞。</p>\r\n<p>（2）volatile 提供多线程共享变量可见性和禁止指令重排序优化。</p>\r\n<p>（3）CAS 是基于冲突检测的乐观锁（非阻塞）</p>\r\n<h4><a id=\"synchronized__Lock__1140\"></a>synchronized 和 Lock 有什么区别？</h4>\r\n<ul><li>首先synchronized是Java内置关键字，在JVM层面，Lock是个Java类；</li><li>synchronized 可以给类、方法、代码块加锁；而 lock 只能给代码块加锁。</li><li>synchronized 不需要手动获取锁和释放锁，使用简单，发生异常会自动释放锁，不会造成死锁；而 lock 需要自己加锁和释放锁，如果使用不当没有 unLock()去释放锁就会造成死锁。</li><li>通过 Lock 可以知道有没有成功获取锁，而 synchronized 却无法办到。</li></ul>\r\n<h4><a id=\"synchronized__ReentrantLock__1149\"></a>synchronized 和 ReentrantLock 区别是什么？</h4>\r\n<p>synchronized 是和 if、else、for、while 一样的关键字，ReentrantLock 是类，这是二者的本质区别。既然 ReentrantLock 是类，那么它就提供了比synchronized 更多更灵活的特性，可以被继承、可以有方法、可以有各种各样的类变量</p>\r\n<p>synchronized 早期的实现比较低效，对比 ReentrantLock，大多数场景性能都相差较大，但是在 Java 6 中对 synchronized 进行了非常多的改进。</p>\r\n<p>相同点：两者都是可重入锁</p>\r\n<p>两者都是可重入锁。“可重入锁”概念是：自己可以再次获取自己的内部锁。比如一个线程获得了某个对象的锁，此时这个对象锁还没有释放，当其再次想要获取这个对象的锁的时候还是可以获取的，如果不可锁重入的话，就会造成死锁。同一个线程每次获取锁，锁的计数器都自增1，所以要等到锁的计数器下降为0时才能释放锁。</p>\r\n<p>主要区别如下：</p>\r\n<ul><li>ReentrantLock 使用起来比较灵活，但是必须有释放锁的配合动作；</li><li>ReentrantLock 必须手动获取与释放锁，而 synchronized 不需要手动释放和开启锁；</li><li>ReentrantLock 只适用于代码块锁，而 synchronized 可以修饰类、方法、变量等。</li><li>二者的锁机制其实也是不一样的。ReentrantLock 底层调用的是 Unsafe 的park 方法加锁，synchronized 操作的应该是对象头中 mark word</li></ul>\r\n<p>Java中每一个对象都可以作为锁，这是synchronized实现同步的基础：</p>\r\n<ul><li>普通同步方法，锁是当前实例对象</li><li>静态同步方法，锁是当前类的class对象</li><li>同步方法块，锁是括号里面的对象</li></ul>\r\n<h3><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"volatile_1176\"></a>volatile</h3>\r\n<h4><a id=\"volatile__1178\"></a>volatile 关键字的作用</h4>\r\n<p>对于可见性，Java 提供了 volatile 关键字来保证可见性和禁止指令重排。 volatile 提供 happens-before 的保证，确保一个线程的修改能对其他线程是可见的。当一个共享变量被 volatile 修饰时，它会保证修改的值会立即被更新到主存，当有其他线程需要读取时，它会去内存中读取新值。</p>\r\n<p>从实践角度而言，volatile 的一个重要作用就是和 CAS 结合，保证了原子性，详细的可以参见 java.util.concurrent.atomic 包下的类，比如 AtomicInteger。</p>\r\n<p>volatile 常用于多线程环境下的单次操作(单次读或者单次写)。</p>\r\n<h4><a id=\"Java__volatile__1188\"></a>Java 中能创建 volatile 数组吗？</h4>\r\n<p>能，Java 中可以创建 volatile 类型数组，不过只是一个指向数组的引用，而不是整个数组。意思是，如果改变引用指向的数组，将会受到 volatile 的保护，但是如果多个线程同时改变数组的元素，volatile 标示符就不能起到之前的保护作用了。</p>\r\n<h4><a id=\"volatile__atomic__1194\"></a>volatile 变量和 atomic 变量有什么不同？</h4>\r\n<p>volatile 变量可以确保先行关系，即写操作会发生在后续的读操作之前, 但它并不能保证原子性。例如用 volatile 修饰 count 变量，那么 count++ 操作就不是原子性的。</p>\r\n<p>而 AtomicInteger 类提供的 atomic 方法可以让这种操作具有原子性如getAndIncrement()方法会原子性的进行增量操作把当前值加一，其它数据类型和引用变量也可以进行相似操作。</p>\r\n<h4><a id=\"volatile__1202\"></a>volatile 能使得一个非原子操作变成原子操作吗？</h4>\r\n<p>关键字volatile的主要作用是使变量在多个线程间可见，但无法保证原子性，对于多个线程访问同一个实例变量需要加锁进行同步。</p>\r\n<p>虽然volatile只能保证可见性不能保证原子性，但用volatile修饰long和double可以保证其操作原子性。</p>\r\n<p>所以从Oracle Java Spec里面可以看到：</p>\r\n<ul><li>对于64位的long和double，如果没有被volatile修饰，那么对其操作可以不是原子的。在操作的时候，可以分成两步，每次对32位操作。</li><li>如果使用volatile修饰long和double，那么其读写都是原子操作</li><li>对于64位的引用地址的读写，都是原子操作</li><li>在实现JVM时，可以自由选择是否把读写long和double作为原子操作</li><li>推荐JVM实现为原子操作</li></ul>\r\n<h4><a id=\"volatile__1218\"></a>volatile 修饰符的有过什么实践？</h4>\r\n<p>单例模式</p>\r\n<p>是否 Lazy 初始化：是</p>\r\n<p>是否多线程安全：是</p>\r\n<p>实现难度：较复杂</p>\r\n<p>描述：对于Double-Check这种可能出现的问题（当然这种概率已经非常小了，但毕竟还是有的嘛~），解决方案是：只需要给instance的声明加上volatile关键字即可volatile关键字的一个作用是禁止指令重排，把instance声明为volatile之后，对它的写操作就会有一个内存屏障（什么是内存屏障？），这样，在它的赋值完成之前，就不用会调用读操作。注意：volatile阻止的不是singleton = newSingleton()这句话内部[1-2-3]的指令重排，而是保证了在一个写操作（[1-2-3]）完成之前，不会调用读操作（if (instance == null)）。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton7</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">volatile</span> Singleton7 instance <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token function\">Singleton7</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> Singleton7 <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>instance <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>Singleton7<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>instance <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton7</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">return</span> instance<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li></ul></pre>\r\n<h4><a id=\"synchronized__volatile__1254\"></a>synchronized 和 volatile 的区别是什么？</h4>\r\n<p>synchronized 表示只有一个线程可以获取作用对象的锁，执行代码，阻塞其他线程。</p>\r\n<p>volatile 表示变量在 CPU 的寄存器中是不确定的，必须从主存中读取。保证多线程环境下变量的可见性；禁止指令重排序。</p>\r\n<p><strong>区别</strong></p>\r\n<ul><li> <p>volatile 是变量修饰符；synchronized 可以修饰类、方法、变量。</p> </li><li> <p>volatile 仅能实现变量的修改可见性，不能保证原子性；而 synchronized 则可以保证变量的修改可见性和原子性。</p> </li><li> <p>volatile 不会造成线程的阻塞；synchronized 可能会造成线程的阻塞。</p> </li><li> <p>volatile标记的变量不会被编译器优化；synchronized标记的变量可以被编译器优化。</p> </li><li> <p><strong>volatile关键字</strong>是线程同步的<strong>轻量级实现</strong>，所以<strong>volatile性能肯定比synchronized关键字要好</strong>。但是<strong>volatile关键字只能用于变量而synchronized关键字可以修饰方法以及代码块</strong>。synchronized关键字在JavaSE1.6之后进行了主要包括为了减少获得锁和释放锁带来的性能消耗而引入的偏向锁和轻量级锁以及其它各种优化之后执行效率有了显著提升，<strong>实际开发中使用 synchronized 关键字的场景还是更多一些</strong>。</p> </li></ul>\r\n<h3><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"final_1271\"></a>final</h3>\r\n<h4><a id=\"_1273\"></a>什么是不可变对象，它对写并发应用有什么帮助？</h4>\r\n<p>不可变对象(Immutable Objects)即对象一旦被创建它的状态（对象的数据，也即对象属性值）就不能改变，反之即为可变对象(Mutable Objects)。</p>\r\n<p>不可变对象的类即为不可变类(Immutable Class)。Java 平台类库中包含许多不可变类，如 String、基本类型的包装类、BigInteger 和 BigDecimal 等。</p>\r\n<p>只有满足如下状态，一个对象才是不可变的；</p>\r\n<ul><li> <p>它的状态不能在创建后再被修改；</p> </li><li> <p>所有域都是 final 类型；并且，它被正确创建（创建期间没有发生 this 引用的逸出）。</p> </li></ul>\r\n<p>不可变对象保证了对象的内存可见性，对不可变对象的读取不需要进行额外的同步手段，提升了代码执行效率。</p>\r\n<h2><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"Lock_1293\"></a>Lock体系</h2>\r\n<h3><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"LockAQS_1295\"></a>Lock简介与初识AQS</h3>\r\n<h4><a id=\"Java_Concurrency_API__Lock_Lock_interface_1297\"></a>Java Concurrency API 中的 Lock 接口(Lock interface)是什么？对比同步它有什么优势？</h4>\r\n<p>Lock 接口比同步方法和同步块提供了更具扩展性的锁操作。他们允许更灵活的结构，可以具有完全不同的性质，并且可以支持多个相关类的条件对象。</p>\r\n<p>它的优势有：</p>\r\n<p>（1）可以使锁更公平</p>\r\n<p>（2）可以使线程在等待锁的时候响应中断</p>\r\n<p>（3）可以让线程尝试获取锁，并在无法获取锁的时候立即返回或者等待一段时间</p>\r\n<p>（4）可以在不同的范围，以不同的顺序获取和释放锁</p>\r\n<p>整体上来说 Lock 是 synchronized 的扩展版，Lock 提供了无条件的、可轮询的(tryLock 方法)、定时的(tryLock 带参方法)、可中断的(lockInterruptibly)、可多条件队列的(newCondition 方法)锁操作。另外 Lock 的实现类基本都支持非公平锁(默认)和公平锁，synchronized 只支持非公平锁，当然，在大部分情况下，非公平锁是高效的选择。</p>\r\n<h4><a id=\"_1315\"></a>乐观锁和悲观锁的理解及如何实现，有哪些实现方式？</h4>\r\n<p>悲观锁：总是假设最坏的情况，每次去拿数据的时候都认为别人会修改，所以每次在拿数据的时候都会上锁，这样别人想拿这个数据就会阻塞直到它拿到锁。传统的关系型数据库里边就用到了很多这种锁机制，比如行锁，表锁等，读锁，写锁等，都是在做操作之前先上锁。再比如 Java 里面的同步原语 synchronized 关键字的实现也是悲观锁。</p>\r\n<p>乐观锁：顾名思义，就是很乐观，每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在更新的时候会判断一下在此期间别人有没有去更新这个数据，可以使用版本号等机制。乐观锁适用于多读的应用类型，这样可以提高吞吐量，像数据库提供的类似于 write_condition 机制，其实都是提供的乐观锁。在 Java中 java.util.concurrent.atomic 包下面的原子变量类就是使用了乐观锁的一种实现方式 CAS 实现的。</p>\r\n<p>乐观锁的实现方式：</p>\r\n<p>1、使用版本标识来确定读到的数据与提交时的数据是否一致。提交后修改版本标识，不一致时可以采取丢弃和再次尝试的策略。</p>\r\n<p>2、java 中的 Compare and Swap 即 CAS ，当多个线程尝试使用 CAS 同时更新同一个变量时，只有其中一个线程能更新变量的值，而其它线程都失败，失败的线程并不会被挂起，而是被告知这次竞争中失败，并可以再次尝试。 CAS 操作中包含三个操作数 —— 需要读写的内存位置（V）、进行比较的预期原值（A）和拟写入的新值(B)。如果内存位置 V 的值与预期原值 A 相匹配，那么处理器会自动将该位置值更新为新值 B。否则处理器不做任何操作。</p>\r\n<h4><a id=\"_CAS_1329\"></a>什么是 CAS</h4>\r\n<p>CAS 是 compare and swap 的缩写，即我们所说的比较交换。</p>\r\n<p>cas 是一种基于锁的操作，而且是乐观锁。在 java 中锁分为乐观锁和悲观锁。悲观锁是将资源锁住，等一个之前获得锁的线程释放锁之后，下一个线程才可以访问。而乐观锁采取了一种宽泛的态度，通过某种方式不加锁来处理资源，比如通过给记录加 version 来获取数据，性能较悲观锁有很大的提高。</p>\r\n<p>CAS 操作包含三个操作数 —— 内存位置（V）、预期原值（A）和新值(B)。如果内存地址里面的值和 A 的值是一样的，那么就将内存里面的值更新成 B。CAS是通过无限循环来获取数据的，若果在第一轮循环中，a 线程获取地址里面的值被b 线程修改了，那么 a 线程需要自旋，到下次循环才有可能机会执行。</p>\r\n<p>java.util.concurrent.atomic 包下的类大多是使用 CAS 操作来实现的(AtomicInteger,AtomicBoolean,AtomicLong)。</p>\r\n<h4><a id=\"CAS__1341\"></a>CAS 的会产生什么问题？</h4>\r\n<p>1、ABA 问题：</p>\r\n<p>比如说一个线程 one 从内存位置 V 中取出 A，这时候另一个线程 two 也从内存中取出 A，并且 two 进行了一些操作变成了 B，然后 two 又将 V 位置的数据变成 A，这时候线程 one 进行 CAS 操作发现内存中仍然是 A，然后 one 操作成功。尽管线程 one 的 CAS 操作成功，但可能存在潜藏的问题。从 Java1.5 开始 JDK 的 atomic包里提供了一个类 AtomicStampedReference 来解决 ABA 问题。</p>\r\n<p>2、循环时间长开销大：</p>\r\n<p>对于资源竞争严重（线程冲突严重）的情况，CAS 自旋的概率会比较大，从而浪费更多的 CPU 资源，效率低于 synchronized。</p>\r\n<p>3、只能保证一个共享变量的原子操作：</p>\r\n<p>当对一个共享变量执行操作时，我们可以使用循环 CAS 的方式来保证原子操作，但是对多个共享变量操作时，循环 CAS 就无法保证操作的原子性，这个时候就可以用锁。</p>\r\n<h4><a id=\"_1357\"></a>什么是死锁？</h4>\r\n<p>当线程 A 持有独占锁a，并尝试去获取独占锁 b 的同时，线程 B 持有独占锁 b，并尝试获取独占锁 a 的情况下，就会发生 AB 两个线程由于互相持有对方需要的锁，而发生的阻塞现象，我们称为死锁。</p>\r\n<h4><a id=\"_1363\"></a>产生死锁的条件是什么？怎么防止死锁？</h4>\r\n<p>产生死锁的必要条件：</p>\r\n<p>1、互斥条件：所谓互斥就是进程在某一时间内独占资源。</p>\r\n<p>2、请求与保持条件：一个进程因请求资源而阻塞时，对已获得的资源保持不放。</p>\r\n<p>3、不剥夺条件：进程已获得资源，在末使用完之前，不能强行剥夺。</p>\r\n<p>4、循环等待条件：若干进程之间形成一种头尾相接的循环等待资源关系。</p>\r\n<p>这四个条件是死锁的必要条件，只要系统发生死锁，这些条件必然成立，而只要上述条件之 一不满足，就不会发生死锁。</p>\r\n<p>理解了死锁的原因，尤其是产生死锁的四个必要条件，就可以最大可能地避免、预防和 解除死锁。</p>\r\n<p>防止死锁可以采用以下的方法：</p>\r\n<ul><li>尽量使用 tryLock(long timeout, TimeUnit unit)的方法(ReentrantLock、ReentrantReadWriteLock)，设置超时时间，超时可以退出防止死锁。</li><li>尽量使用 Java. util. concurrent 并发类代替自己手写锁。</li><li>尽量降低锁的使用粒度，尽量不要几个功能用同一把锁。</li><li>尽量减少同步的代码块。</li></ul>\r\n<h4><a id=\"_1388\"></a>死锁与活锁的区别，死锁与饥饿的区别？</h4>\r\n<p>死锁：是指两个或两个以上的进程（或线程）在执行过程中，因争夺资源而造成的一种互相等待的现象，若无外力作用，它们都将无法推进下去。</p>\r\n<p>活锁：任务或者执行者没有被阻塞，由于某些条件没有满足，导致一直重复尝试，失败，尝试，失败。</p>\r\n<p>活锁和死锁的区别在于，处于活锁的实体是在不断的改变状态，这就是所谓的“活”， 而处于死锁的实体表现为等待；活锁有可能自行解开，死锁则不能。</p>\r\n<p>饥饿：一个或者多个线程因为种种原因无法获得所需要的资源，导致一直无法执行的状态。</p>\r\n<p>Java 中导致饥饿的原因：</p>\r\n<p>1、高优先级线程吞噬所有的低优先级线程的 CPU 时间。</p>\r\n<p>2、线程被永久堵塞在一个等待进入同步块的状态，因为其他线程总是能在它之前持续地对该同步块进行访问。</p>\r\n<p>3、线程在等待一个本身也处于永久等待完成的对象(比如调用这个对象的 wait 方法)，因为其他线程总是被持续地获得唤醒。</p>\r\n<h4><a id=\"_1410\"></a>多线程锁的升级原理是什么？</h4>\r\n<p>在Java中，锁共有4种状态，级别从低到高依次为：无状态锁，偏向锁，轻量级锁和重量级锁状态，这几个状态会随着竞争情况逐渐升级。锁可以升级但不能降级。</p>\r\n<h3><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"AQSAbstractQueuedSynchronizer_1418\"></a>AQS(AbstractQueuedSynchronizer)详解与源码分析</h3>\r\n<h4><a id=\"AQS__1420\"></a>AQS 介绍</h4>\r\n<p>AQS的全称为（AbstractQueuedSynchronizer），这个类在java.util.concurrent.locks包下面。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8xMS8yNS8xNmVhMDQ3NjU1ZDBlNDEy?x-oss-process=image/format,png\" alt=\"AQS类\"></p>\r\n<p>AQS是一个用来构建锁和同步器的框架，使用AQS能简单且高效地构造出应用广泛的大量的同步器，比如我们提到的ReentrantLock，Semaphore，其他的诸如ReentrantReadWriteLock，SynchronousQueue，FutureTask等等皆是基于AQS的。当然，我们自己也能利用AQS非常轻松容易地构造出符合我们自己需求的同步器。</p>\r\n<h4><a id=\"AQS__1430\"></a>AQS 原理分析</h4>\r\n<p>下面大部分内容其实在AQS类注释上已经给出了，不过是英语看着比较吃力一点，感兴趣的话可以看看源码。</p>\r\n<p><strong>AQS 原理概览</strong></p>\r\n<p><strong>AQS核心思想是，如果被请求的共享资源空闲，则将当前请求资源的线程设置为有效的工作线程，并且将共享资源设置为锁定状态。如果被请求的共享资源被占用，那么就需要一套线程阻塞等待以及被唤醒时锁分配的机制，这个机制AQS是用CLH队列锁实现的，即将暂时获取不到锁的线程加入到队列中。</strong></p>\r\n<blockquote>\r\n<p>CLH(Craig,Landin,and Hagersten)队列是一个虚拟的双向队列（虚拟的双向队列即不存在队列实例，仅存在结点之间的关联关系）。AQS是将每条请求共享资源的线程封装成一个CLH锁队列的一个结点（Node）来实现锁的分配。</p>\r\n</blockquote>\r\n<p>看个AQS(AbstractQueuedSynchronizer)原理图：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8xMS8yNS8xNmVhMDQ3Njc4NGNkMzJi?x-oss-process=image/format,png\" alt=\"AQS原理图\"></p>\r\n<p>AQS使用一个int成员变量来表示同步状态，通过内置的FIFO队列来完成获取资源线程的排队工作。AQS使用CAS对该同步状态进行原子操作实现对其值的修改。</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">private volatile int state;//共享变量，使用volatile修饰保证线程可见性\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>状态信息通过protected类型的getState，setState，compareAndSetState进行操作</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">//返回同步状态的当前值</span>\r\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n <span class=\"token comment\">// 设置同步状态的值</span>\r\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> newState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        state <span class=\"token operator\">=</span> newState<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token comment\">//原子地（CAS操作）将同步状态值设置为给定值update如果当前同步状态的值等于expect（期望值）</span>\r\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">compareAndSetState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> expect<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> update<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">return</span> unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">compareAndSwapInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> stateOffset<span class=\"token punctuation\">,</span> expect<span class=\"token punctuation\">,</span> update<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li></ul></pre>\r\n<p><strong>AQS 对资源的共享方式</strong></p>\r\n<p>AQS定义两种资源共享方式</p>\r\n<ul><li> <p>Exclusive（独占）：只有一个线程能执行，如ReentrantLock。又可分为公平锁和非公平锁：</p>\r\n<ul><li>公平锁：按照线程在队列中的排队顺序，先到者先拿到锁</li><li>非公平锁：当线程要获取锁时，无视队列顺序直接去抢锁，谁抢到就是谁的</li></ul> </li><li> <p><strong>Share</strong>（共享）：多个线程可同时执行，如Semaphore/CountDownLatch。Semaphore、CountDownLatch、 CyclicBarrier、ReadWriteLock 我们都会在后面讲到。</p> </li></ul>\r\n<p>ReentrantReadWriteLock 可以看成是组合式，因为ReentrantReadWriteLock也就是读写锁允许多个线程同时对某一资源进行读。</p>\r\n<p>不同的自定义同步器争用共享资源的方式也不同。自定义同步器在实现时只需要实现共享资源 state 的获取与释放方式即可，至于具体线程等待队列的维护（如获取资源失败入队/唤醒出队等），AQS已经在顶层实现好了。</p>\r\n<p><strong>AQS底层使用了模板方法模式</strong></p>\r\n<p>同步器的设计是基于模板方法模式的，如果需要自定义同步器一般的方式是这样（模板方法模式很经典的一个应用）：</p>\r\n<ol><li>使用者继承AbstractQueuedSynchronizer并重写指定的方法。（这些重写方法很简单，无非是对于共享资源state的获取和释放）</li><li>将AQS组合在自定义同步组件的实现中，并调用其模板方法，而这些模板方法会调用使用者重写的方法。</li></ol>\r\n<p>这和我们以往通过实现接口的方式有很大区别，这是模板方法模式很经典的一个运用。</p>\r\n<p><strong>AQS使用了模板方法模式，自定义同步器时需要重写下面几个AQS提供的模板方法：</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">isHeldExclusively()//该线程是否正在独占资源。只有用到condition才需要去实现它。\r\ntryAcquire(int)//独占方式。尝试获取资源，成功则返回true，失败则返回false。\r\ntryRelease(int)//独占方式。尝试释放资源，成功则返回true，失败则返回false。\r\ntryAcquireShared(int)//共享方式。尝试获取资源。负数表示失败；0表示成功，但没有剩余可用资源；正数表示成功，且有剩余资源。\r\ntryReleaseShared(int)//共享方式。尝试释放资源，成功则返回true，失败则返回false。\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p>默认情况下，每个方法都抛出 <code>UnsupportedOperationException</code>。 这些方法的实现必须是内部线程安全的，并且通常应该简短而不是阻塞。AQS类中的其他方法都是final ，所以无法被其他类使用，只有这几个方法可以被其他类使用。</p>\r\n<p>以ReentrantLock为例，state初始化为0，表示未锁定状态。A线程lock()时，会调用tryAcquire()独占该锁并将state+1。此后，其他线程再tryAcquire()时就会失败，直到A线程unlock()到state=0（即释放锁）为止，其它线程才有机会获取该锁。当然，释放锁之前，A线程自己是可以重复获取此锁的（state会累加），这就是可重入的概念。但要注意，获取多少次就要释放多么次，这样才能保证state是能回到零态的。</p>\r\n<p>再以CountDownLatch以例，任务分为N个子线程去执行，state也初始化为N（注意N要与线程个数一致）。这N个子线程是并行执行的，每个子线程执行完后countDown()一次，state会CAS(Compare and Swap)减1。等到所有子线程都执行完后(即state=0)，会unpark()主调用线程，然后主调用线程就会从await()函数返回，继续后余动作。</p>\r\n<p>一般来说，自定义同步器要么是独占方法，要么是共享方式，他们也只需实现<code>tryAcquire-tryRelease</code>、<code>tryAcquireShared-tryReleaseShared</code>中的一种即可。但AQS也支持自定义同步器同时实现独占和共享两种方式，如<code>ReentrantReadWriteLock</code>。</p>\r\n<h3><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"ReentrantLock_1518\"></a>ReentrantLock(重入锁)实现原理与公平锁非公平锁区别</h3>\r\n<h4><a id=\"ReentrantLock_1520\"></a>什么是可重入锁（ReentrantLock）？</h4>\r\n<p>ReentrantLock重入锁，是实现Lock接口的一个类，也是在实际编程中使用频率很高的一个锁，支持重入性，表示能够对共享资源能够重复加锁，即当前线程获取该锁再次获取不会被阻塞。</p>\r\n<p>在java关键字synchronized隐式支持重入性，synchronized通过获取自增，释放自减的方式实现重入。与此同时，ReentrantLock还支持公平锁和非公平锁两种方式。那么，要想完完全全的弄懂ReentrantLock的话，主要也就是ReentrantLock同步语义的学习：1. 重入性的实现原理；2. 公平锁和非公平锁。</p>\r\n<p>重入性的实现原理</p>\r\n<p>要想支持重入性，就要解决两个问题：<strong>1. 在线程获取锁的时候，如果已经获取锁的线程是当前线程的话则直接再次获取成功；2. 由于锁会被获取n次，那么只有锁在被释放同样的n次之后，该锁才算是完全释放成功</strong>。</p>\r\n<p>ReentrantLock支持两种锁：<strong>公平锁</strong>和<strong>非公平锁</strong>。<strong>何谓公平性，是针对获取锁而言的，如果一个锁是公平的，那么锁的获取顺序就应该符合请求上的绝对时间顺序，满足FIFO</strong>。</p>\r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"ReentrantReadWriteLock_1534\"></a>读写锁ReentrantReadWriteLock源码分析</h3>\r\n<h4><a id=\"ReadWriteLock__1536\"></a>ReadWriteLock 是什么</h4>\r\n<p>首先明确一下，不是说 ReentrantLock 不好，只是 ReentrantLock 某些时候有局限。如果使用 ReentrantLock，可能本身是为了防止线程 A 在写数据、线程 B 在读数据造成的数据不一致，但这样，如果线程 C 在读数据、线程 D 也在读数据，读数据是不会改变数据的，没有必要加锁，但是还是加锁了，降低了程序的性能。因为这个，才诞生了读写锁 ReadWriteLock。</p>\r\n<p>ReadWriteLock 是一个读写锁接口，读写锁是用来提升并发程序性能的锁分离技术，ReentrantReadWriteLock 是 ReadWriteLock 接口的一个具体实现，实现了读写的分离，读锁是共享的，写锁是独占的，读和读之间不会互斥，读和写、写和读、写和写之间才会互斥，提升了读写的性能。</p>\r\n<p>而读写锁有以下三个重要的特性：</p>\r\n<p>（1）公平选择性：支持非公平（默认）和公平的锁获取方式，吞吐量还是非公平优于公平。</p>\r\n<p>（2）重进入：读锁和写锁都支持线程重进入。</p>\r\n<p>（3）锁降级：遵循获取写锁、获取读锁再释放写锁的次序，写锁能够降级成为读锁。</p>\r\n<h3><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"Condition_1552\"></a>Condition源码分析与等待通知机制</h3>\r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"LockSupport_1556\"></a>LockSupport详解</h3>\r\n<h2><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"_1562\"></a>并发容器</h2>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"ConcurrentHashMapJDK18_1564\"></a>并发容器之ConcurrentHashMap详解(JDK1.8版本)与源码分析</h3>\r\n<h4><a id=\"ConcurrentHashMap_1566\"></a>什么是ConcurrentHashMap？</h4>\r\n<p>ConcurrentHashMap是Java中的一个<strong>线程安全且高效的HashMap实现</strong>。平时涉及高并发如果要用map结构，那第一时间想到的就是它。相对于hashmap来说，ConcurrentHashMap就是线程安全的map，其中利用了锁分段的思想提高了并发度。</p>\r\n<p>那么它到底是如何实现线程安全的？</p>\r\n<p>JDK 1.6版本关键要素：</p>\r\n<ul><li> <p>segment继承了ReentrantLock充当锁的角色，为每一个segment提供了线程安全的保障；</p> </li><li> <p>segment维护了哈希散列表的若干个桶，每个桶由HashEntry构成的链表。</p> </li></ul>\r\n<p>JDK1.8后，ConcurrentHashMap抛弃了原有的<strong>Segment 分段锁，而采用了 CAS + synchronized 来保证并发安全性</strong>。</p>\r\n<h4><a id=\"Java__ConcurrentHashMap__1582\"></a>Java 中 ConcurrentHashMap 的并发度是什么？</h4>\r\n<p>ConcurrentHashMap 把实际 map 划分成若干部分来实现它的可扩展性和线程安全。这种划分是使用并发度获得的，它是 ConcurrentHashMap 类构造函数的一个可选参数，默认值为 16，这样在多线程情况下就能避免争用。</p>\r\n<p>在 JDK8 后，它摒弃了 Segment（锁段）的概念，而是启用了一种全新的方式实现,利用 CAS 算法。同时加入了更多的辅助变量来提高并发度，具体内容还是查看源码吧。</p>\r\n<h4><a id=\"_1590\"></a>什么是并发容器的实现？</h4>\r\n<p>何为同步容器：可以简单地理解为通过 synchronized 来实现同步的容器，如果有多个线程调用同步容器的方法，它们将会串行执行。比如 Vector，Hashtable，以及 Collections.synchronizedSet，synchronizedList 等方法返回的容器。可以通过查看 Vector，Hashtable 等这些同步容器的实现代码，可以看到这些容器实现线程安全的方式就是将它们的状态封装起来，并在需要同步的方法上加上关键字 synchronized。</p>\r\n<p>并发容器使用了与同步容器完全不同的加锁策略来提供更高的并发性和伸缩性，例如在 ConcurrentHashMap 中采用了一种粒度更细的加锁机制，可以称为分段锁，在这种锁机制下，允许任意数量的读线程并发地访问 map，并且执行读操作的线程和写操作的线程也可以并发的访问 map，同时允许一定数量的写操作线程并发地修改 map，所以它可以在并发环境下实现更高的吞吐量。</p>\r\n<h4><a id=\"Java__1598\"></a>Java 中的同步集合与并发集合有什么区别？</h4>\r\n<p>同步集合与并发集合都为多线程和并发提供了合适的线程安全的集合，不过并发集合的可扩展性更高。在 Java1.5 之前程序员们只有同步集合来用且在多线程并发的时候会导致争用，阻碍了系统的扩展性。Java5 介绍了并发集合像ConcurrentHashMap，不仅提供线程安全还用锁分离和内部分区等现代技术提高了可扩展性。</p>\r\n<h4><a id=\"SynchronizedMap__ConcurrentHashMap__1604\"></a>SynchronizedMap 和 ConcurrentHashMap 有什么区别？</h4>\r\n<p>SynchronizedMap 一次锁住整张表来保证线程安全，所以每次只能有一个线程来访为 map。</p>\r\n<p>ConcurrentHashMap 使用分段锁来保证在多线程下的性能。</p>\r\n<p>ConcurrentHashMap 中则是一次锁住一个桶。ConcurrentHashMap 默认将hash 表分为 16 个桶，诸如 get，put，remove 等常用操作只锁当前需要用到的桶。</p>\r\n<p>这样，原来只能一个线程进入，现在却能同时有 16 个写线程执行，并发性能的提升是显而易见的。</p>\r\n<p>另外 ConcurrentHashMap 使用了一种不同的迭代方式。在这种迭代方式中，当iterator 被创建后集合再发生改变就不再是抛出ConcurrentModificationException，取而代之的是在改变时 new 新的数据从而不影响原有的数据，iterator 完成后再将头指针替换为新的数据 ，这样 iterator线程可以使用原来老的数据，而写线程也可以并发的完成改变。</p>\r\n<h3><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"CopyOnWriteArrayList_1618\"></a>并发容器之CopyOnWriteArrayList详解</h3>\r\n<h4><a id=\"CopyOnWriteArrayList__1620\"></a>CopyOnWriteArrayList 是什么，可以用于什么应用场景？有哪些优缺点？</h4>\r\n<p>CopyOnWriteArrayList 是一个并发容器。有很多人称它是线程安全的，我认为这句话不严谨，缺少一个前提条件，那就是非复合场景下操作它是线程安全的。</p>\r\n<p>CopyOnWriteArrayList(免锁容器)的好处之一是当多个迭代器同时遍历和修改这个列表时，不会抛出 ConcurrentModificationException。在CopyOnWriteArrayList 中，写入将导致创建整个底层数组的副本，而源数组将保留在原地，使得复制的数组在被修改时，读取操作可以安全地执行。</p>\r\n<p>CopyOnWriteArrayList 的使用场景</p>\r\n<p>通过源码分析，我们看出它的优缺点比较明显，所以使用场景也就比较明显。就是合适读多写少的场景。</p>\r\n<p>CopyOnWriteArrayList 的缺点</p>\r\n<ol><li>由于写操作的时候，需要拷贝数组，会消耗内存，如果原数组的内容比较多的情况下，可能导致 young gc 或者 full gc。</li><li>不能用于实时读的场景，像拷贝数组、新增元素都需要时间，所以调用一个 set 操作后，读取到数据可能还是旧的，虽然CopyOnWriteArrayList 能做到最终一致性,但是还是没法满足实时性要求。</li><li>由于实际使用中可能没法保证 CopyOnWriteArrayList 到底要放置多少数据，万一数据稍微有点多，每次 add/set 都要重新复制数组，这个代价实在太高昂了。在高性能的互联网应用中，这种操作分分钟引起故障。</li></ol>\r\n<p>CopyOnWriteArrayList 的设计思想</p>\r\n<ol><li>读写分离，读和写分开</li><li>最终一致性</li><li>使用另外开辟空间的思路，来解决并发冲突</li></ol>\r\n<h3><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"ThreadLocal_1646\"></a>并发容器之ThreadLocal详解</h3>\r\n<h4><a id=\"ThreadLocal__1648\"></a>ThreadLocal 是什么？有哪些使用场景？</h4>\r\n<p>ThreadLocal 是一个本地线程副本变量工具类，在每个线程中都创建了一个 ThreadLocalMap 对象，简单说 ThreadLocal 就是一种以空间换时间的做法，每个线程可以访问自己内部 ThreadLocalMap 对象内的 value。通过这种方式，避免资源在多线程间共享。</p>\r\n<p>原理：线程局部变量是局限于线程内部的变量，属于线程自身所有，不在多个线程间共享。Java提供ThreadLocal类来支持线程局部变量，是一种实现线程安全的方式。但是在管理环境下（如 web 服务器）使用线程局部变量的时候要特别小心，在这种情况下，工作线程的生命周期比任何应用变量的生命周期都要长。任何线程局部变量一旦在工作完成后没有释放，Java 应用就存在内存泄露的风险。</p>\r\n<p>经典的使用场景是为每个线程分配一个 JDBC 连接 Connection。这样就可以保证每个线程的都在各自的 Connection 上进行数据库的操作，不会出现 A 线程关了 B线程正在使用的 Connection； 还有 Session 管理 等问题。</p>\r\n<p>ThreadLocal 使用例子：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestThreadLocal</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token comment\">//线程本地存储变量</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> ThreadLocal<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">&gt;</span></span> THREAD_LOCAL_NUM\r\n        <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadLocal</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token annotation punctuation\">@Override</span>\r\n        <span class=\"token keyword\">protected</span> Integer <span class=\"token function\">initialValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//启动三个线程</span>\r\n            Thread t <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token annotation punctuation\">@Override</span>\r\n                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    <span class=\"token function\">add10ByThreadLocal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n            t<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">/**\r\n     * 线程本地存储变量加 5\r\n     */</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add10ByThreadLocal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            Integer n <span class=\"token operator\">=</span> THREAD_LOCAL_NUM<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            n <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n            THREAD_LOCAL_NUM<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" : ThreadLocal num=\"</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li></ul></pre>\r\n<p>打印结果：启动了 3 个线程，每个线程最后都打印到 “ThreadLocal num=5”，而不是 num 一直在累加直到值等于 15</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Thread<span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">1</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">1</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">2</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">3</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">2</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">1</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">4</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">2</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">3</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">4</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">3</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">5</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">4</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">5</span>\r\nThread<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> ThreadLocal num<span class=\"token operator\">=</span><span class=\"token number\">5</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li></ul></pre>\r\n<h4><a id=\"_1719\"></a>什么是线程局部变量？</h4>\r\n<p>线程局部变量是局限于线程内部的变量，属于线程自身所有，不在多个线程间共享。Java 提供 ThreadLocal 类来支持线程局部变量，是一种实现线程安全的方式。但是在管理环境下（如 web 服务器）使用线程局部变量的时候要特别小心，在这种情况下，工作线程的生命周期比任何应用变量的生命周期都要长。任何线程局部变量一旦在工作完成后没有释放，Java 应用就存在内存泄露的风险。</p>\r\n<h3><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"ThreadLocal_1727\"></a>ThreadLocal内存泄漏分析与解决方案</h3>\r\n<h4><a id=\"ThreadLocal_1729\"></a>ThreadLocal造成内存泄漏的原因？</h4>\r\n<p><code>ThreadLocalMap</code> 中使用的 key 为 <code>ThreadLocal</code> 的弱引用,而 value 是强引用。所以，如果 <code>ThreadLocal</code> 没有被外部强引用的情况下，在垃圾回收的时候，key 会被清理掉，而 value 不会被清理掉。这样一来，<code>ThreadLocalMap</code> 中就会出现key为null的Entry。假如我们不做任何措施的话，value 永远无法被GC 回收，这个时候就可能会产生内存泄露。ThreadLocalMap实现中已经考虑了这种情况，在调用 <code>set()</code>、<code>get()</code>、<code>remove()</code> 方法的时候，会清理掉 key 为 null 的记录。使用完 <code>ThreadLocal</code>方法后 最好手动调用<code>remove()</code>方法</p>\r\n<h4><a id=\"ThreadLocal_1735\"></a>ThreadLocal内存泄漏解决方案？</h4>\r\n<ul><li> <p>每次使用完ThreadLocal，都调用它的remove()方法，清除数据。</p> </li><li> <p>在使用线程池的情况下，没有及时清理ThreadLocal，不仅是内存泄漏的问题，更严重的是可能导致业务逻辑出现问题。所以，使用ThreadLocal就跟加锁完要解锁一样，用完就清理。</p> </li></ul>\r\n<h3><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"BlockingQueue_1744\"></a>并发容器之BlockingQueue详解</h3>\r\n<h4><a id=\"_1746\"></a>什么是阻塞队列？阻塞队列的实现原理是什么？如何使用阻塞队列来实现生产者-消费者模型？</h4>\r\n<p>阻塞队列（BlockingQueue）是一个支持两个附加操作的队列。</p>\r\n<p>这两个附加的操作是：在队列为空时，获取元素的线程会等待队列变为非空。当队列满时，存储元素的线程会等待队列可用。</p>\r\n<p>阻塞队列常用于生产者和消费者的场景，生产者是往队列里添加元素的线程，消费者是从队列里拿元素的线程。阻塞队列就是生产者存放元素的容器，而消费者也只从容器里拿元素。</p>\r\n<p>JDK7 提供了 7 个阻塞队列。分别是：</p>\r\n<p>ArrayBlockingQueue ：一个由数组结构组成的有界阻塞队列。</p>\r\n<p>LinkedBlockingQueue ：一个由链表结构组成的有界阻塞队列。</p>\r\n<p>PriorityBlockingQueue ：一个支持优先级排序的无界阻塞队列。</p>\r\n<p>DelayQueue：一个使用优先级队列实现的无界阻塞队列。</p>\r\n<p>SynchronousQueue：一个不存储元素的阻塞队列。</p>\r\n<p>LinkedTransferQueue：一个由链表结构组成的无界阻塞队列。</p>\r\n<p>LinkedBlockingDeque：一个由链表结构组成的双向阻塞队列。</p>\r\n<p>Java 5 之前实现同步存取时，可以使用普通的一个集合，然后在使用线程的协作和线程同步可以实现生产者，消费者模式，主要的技术就是用好，wait,notify,notifyAll,sychronized 这些关键字。而在 java 5 之后，可以使用阻塞队列来实现，此方式大大简少了代码量，使得多线程编程更加容易，安全方面也有保障。</p>\r\n<p>BlockingQueue 接口是 Queue 的子接口，它的主要用途并不是作为容器，而是作为线程同步的的工具，因此他具有一个很明显的特性，当生产者线程试图向 BlockingQueue 放入元素时，如果队列已满，则线程被阻塞，当消费者线程试图从中取出一个元素时，如果队列为空，则该线程会被阻塞，正是因为它所具有这个特性，所以在程序中多个线程交替向 BlockingQueue 中放入元素，取出元素，它可以很好的控制线程之间的通信。</p>\r\n<p>阻塞队列使用最经典的场景就是 socket 客户端数据的读取和解析，读取数据的线程不断将数据放入队列，然后解析线程不断从队列取数据解析。</p>\r\n<h3><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"ConcurrentLinkedQueue_1778\"></a>并发容器之ConcurrentLinkedQueue详解与源码分析</h3>\r\n<h3><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"ArrayBlockingQueueLinkedBlockingQueue_1782\"></a>并发容器之ArrayBlockingQueue与LinkedBlockingQueue详解</h3>\r\n<h2><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"_1786\"></a>线程池</h2>\r\n<h3><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"Executors_1788\"></a>Executors类创建四种常见线程池</h3>\r\n<h4><a id=\"_1790\"></a>什么是线程池？有哪几种创建方式？</h4>\r\n<blockquote>\r\n<p>池化技术相比大家已经屡见不鲜了，线程池、数据库连接池、Http 连接池等等都是对这个思想的应用。池化技术的思想主要是为了减少每次获取资源的消耗，提高对资源的利用率。</p>\r\n</blockquote>\r\n<p>在面向对象编程中，创建和销毁对象是很费时间的，因为创建一个对象要获取内存资源或者其它更多资源。在 Java 中更是如此，虚拟机将试图跟踪每一个对象，以便能够在对象销毁后进行垃圾回收。所以提高服务程序效率的一个手段就是尽可能减少创建和销毁对象的次数，特别是一些很耗资源的对象创建和销毁，这就是”池化资源”技术产生的原因。</p>\r\n<p>线程池顾名思义就是事先创建若干个可执行的线程放入一个池（容器）中，需要的时候从池中获取线程不用自行创建，使用完毕不需要销毁线程而是放回池中，从而减少创建和销毁线程对象的开销。Java 5+中的 Executor 接口定义一个执行线程的工具。它的子类型即线程池接口是 ExecutorService。要配置一个线程池是比较复杂的，尤其是对于线程池的原理不是很清楚的情况下，因此在工具类 Executors 面提供了一些静态工厂方法，生成一些常用的线程池，如下所示：</p>\r\n<p>（1）newSingleThreadExecutor：创建一个单线程的线程池。这个线程池只有一个线程在工作，也就是相当于单线程串行执行所有任务。如果这个唯一的线程因为异常结束，那么会有一个新的线程来替代它。此线程池保证所有任务的执行顺序按照任务的提交顺序执行。</p>\r\n<p>（2）newFixedThreadPool：创建固定大小的线程池。每次提交一个任务就创建一个线程，直到线程达到线程池的最大大小。线程池的大小一旦达到最大值就会保持不变，如果某个线程因为执行异常而结束，那么线程池会补充一个新线程。如果希望在服务器上使用线程池，建议使用 newFixedThreadPool方法来创建线程池，这样能获得更好的性能。</p>\r\n<p>（3） newCachedThreadPool：创建一个可缓存的线程池。如果线程池的大小超过了处理任务所需要的线程，那么就会回收部分空闲（60 秒不执行任务）的线程，当任务数增加时，此线程池又可以智能的添加新线程来处理任务。此线程池不会对线程池大小做限制，线程池大小完全依赖于操作系统（或者说 JVM）能够创建的最大线程大小。</p>\r\n<p>（4）newScheduledThreadPool：创建一个大小无限的线程池。此线程池支持定时以及周期性执行任务的需求。</p>\r\n<h4><a id=\"_1808\"></a>线程池有什么优点？</h4>\r\n<ul><li> <p>降低资源消耗：重用存在的线程，减少对象创建销毁的开销。</p> </li><li> <p>提高响应速度。可有效的控制最大并发线程数，提高系统资源的使用率，同时避免过多资源竞争，避免堵塞。当任务到达时，任务可以不需要的等到线程创建就能立即执行。</p> </li><li> <p>提高线程的可管理性。线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一的分配，调优和监控。</p> </li><li> <p>附加功能：提供定时执行、定期执行、单线程、并发数控制等功能。</p> </li></ul>\r\n<p>综上所述使用线程池框架 Executor 能更好的管理线程、提供系统资源使用率。</p>\r\n<h4><a id=\"_1822\"></a>线程池都有哪些状态？</h4>\r\n<ul><li>RUNNING：这是最正常的状态，接受新的任务，处理等待队列中的任务。</li><li>SHUTDOWN：不接受新的任务提交，但是会继续处理等待队列中的任务。</li><li>STOP：不接受新的任务提交，不再处理等待队列中的任务，中断正在执行任务的线程。</li><li>TIDYING：所有的任务都销毁了，workCount 为 0，线程池的状态在转换为 TIDYING 状态时，会执行钩子方法 terminated()。</li><li>TERMINATED：terminated()方法结束后，线程池的状态就会变成这个。</li></ul>\r\n<h4><a id=\"_Executor__Executor__1832\"></a>什么是 Executor 框架？为什么使用 Executor 框架？</h4>\r\n<p>Executor 框架是一个根据一组执行策略调用，调度，执行和控制的异步任务的框架。</p>\r\n<p>每次执行任务创建线程 new Thread()比较消耗性能，创建一个线程是比较耗时、耗资源的，而且无限制的创建线程会引起应用程序内存溢出。</p>\r\n<p>所以创建一个线程池是个更好的的解决方案，因为可以限制线程的数量并且可以回收再利用这些线程。利用Executors 框架可以非常方便的创建一个线程池。</p>\r\n<h4><a id=\"_Java__Executor__Executors__1842\"></a>在 Java 中 Executor 和 Executors 的区别？</h4>\r\n<ul><li> <p>Executors 工具类的不同方法按照我们的需求创建了不同的线程池，来满足业务的需求。</p> </li><li> <p>Executor 接口对象能执行我们的线程任务。</p> </li><li> <p>ExecutorService 接口继承了 Executor 接口并进行了扩展，提供了更多的方法我们能获得任务执行的状态并且可以获取任务的返回值。</p> </li><li> <p>使用 ThreadPoolExecutor 可以创建自定义线程池。</p> </li><li> <p>Future 表示异步计算的结果，他提供了检查计算是否完成的方法，以等待计算的完成，并可以使用 get()方法获取计算的结果。</p> </li></ul>\r\n<h4><a id=\"_submit__execute__1856\"></a>线程池中 submit() 和 execute() 方法有什么区别？</h4>\r\n<p>接收参数：execute()只能执行 Runnable 类型的任务。submit()可以执行 Runnable 和 Callable 类型的任务。</p>\r\n<p>返回值：submit()方法可以返回持有计算结果的 Future 对象，而execute()没有</p>\r\n<p>异常处理：submit()方便Exception处理</p>\r\n<h4><a id=\"_Java__1866\"></a>什么是线程组，为什么在 Java 中不推荐使用？</h4>\r\n<p>ThreadGroup 类，可以把线程归属到某一个线程组中，线程组中可以有线程对象，也可以有线程组，组中还可以有线程，这样的组织结构有点类似于树的形式。</p>\r\n<p>线程组和线程池是两个不同的概念，他们的作用完全不同，前者是为了方便线程的管理，后者是为了管理线程的生命周期，复用线程，减少创建销毁线程的开销。</p>\r\n<p>为什么不推荐使用线程组？因为使用有很多的安全隐患吧，没有具体追究，如果需要使用，推荐使用线程池。</p>\r\n<h3><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"ThreadPoolExecutor_1878\"></a>线程池之ThreadPoolExecutor详解</h3>\r\n<h4><a id=\"ExecutorsThreaPoolExecutor_1880\"></a>Executors和ThreaPoolExecutor创建线程池的区别</h4>\r\n<p>《阿里巴巴Java开发手册》中强制线程池不允许使用 Executors 去创建，而是通过 ThreadPoolExecutor 的方式，这样的处理方式让写的同学更加明确线程池的运行规则，规避资源耗尽的风险</p>\r\n<p>Executors 各个方法的弊端：</p>\r\n<ul><li> <p>newFixedThreadPool 和 newSingleThreadExecutor:<br> 主要问题是堆积的请求处理队列可能会耗费非常大的内存，甚至 OOM。</p> </li><li> <p>newCachedThreadPool 和 newScheduledThreadPool:<br> 主要问题是线程数最大数是 Integer.MAX_VALUE，可能会创建数量非常多的线程，甚至 OOM。</p> </li></ul>\r\n<p>ThreaPoolExecutor创建线程池方式只有一种，就是走它的构造函数，参数自己指定</p>\r\n<h4><a id=\"_1896\"></a>你知道怎么创建线程池吗？</h4>\r\n<p>创建线程池的方式有多种，这里你只需要答 ThreadPoolExecutor 即可。</p>\r\n<p>ThreadPoolExecutor() 是最原始的线程池创建，也是阿里巴巴 Java 开发手册中明确规范的创建线程池的方式。</p>\r\n<h4><a id=\"ThreadPoolExecutor_1904\"></a>ThreadPoolExecutor构造函数重要参数分析</h4>\r\n<p><strong><code>ThreadPoolExecutor</code></strong> <strong>3 个最重要的参数：</strong></p>\r\n<ul><li><strong><code>corePoolSize</code></strong> ：核心线程数，线程数定义了最小可以同时运行的线程数量。</li><li><strong><code>maximumPoolSize</code></strong> ：线程池中允许存在的工作线程的最大数量</li><li><strong><code>workQueue</code></strong>：当新任务来的时候会先判断当前运行的线程数量是否达到核心线程数，如果达到的话，任务就会被存放在队列中。</li></ul>\r\n<p><code>ThreadPoolExecutor</code>其他常见参数:</p>\r\n<ol><li><strong><code>keepAliveTime</code></strong>：线程池中的线程数量大于 <code>corePoolSize</code> 的时候，如果这时没有新的任务提交，核心线程外的线程不会立即销毁，而是会等待，直到等待的时间超过了 <code>keepAliveTime</code>才会被回收销毁；</li><li><strong><code>unit</code></strong> ：<code>keepAliveTime</code> 参数的时间单位。</li><li><strong><code>threadFactory</code></strong>：为线程池提供创建新线程的线程工厂</li><li><strong><code>handler</code></strong> ：线程池任务队列超过 maxinumPoolSize 之后的拒绝策略</li></ol>\r\n<h4><a id=\"ThreadPoolExecutor_1921\"></a>ThreadPoolExecutor饱和策略</h4>\r\n<p><strong><code>ThreadPoolExecutor</code></strong> <strong>饱和策略定义:</strong></p>\r\n<p>如果当前同时运行的线程数量达到最大线程数量并且队列也已经被放满了任时，<code>ThreadPoolTaskExecutor</code> 定义一些策略:</p>\r\n<ul><li><strong><code>ThreadPoolExecutor.AbortPolicy</code></strong>：抛出 <code>RejectedExecutionException</code>来拒绝新任务的处理。</li><li><strong><code>ThreadPoolExecutor.CallerRunsPolicy</code></strong>：调用执行自己的线程运行任务。您不会任务请求。但是这种策略会降低对于新任务提交速度，影响程序的整体性能。另外，这个策略喜欢增加队列容量。如果您的应用程序可以承受此延迟并且你不能任务丢弃任何一个任务请求的话，你可以选择这个策略。</li><li><strong><code>ThreadPoolExecutor.DiscardPolicy</code></strong>：不处理新任务，直接丢弃掉。</li><li><strong><code>ThreadPoolExecutor.DiscardOldestPolicy</code></strong>： 此策略将丢弃最早的未处理的任务请求。</li></ul>\r\n<p>举个例子： Spring 通过 <code>ThreadPoolTaskExecutor</code> 或者我们直接通过 <code>ThreadPoolExecutor</code> 的构造函数创建线程池的时候，当我们不指定 <code>RejectedExecutionHandler</code> 饱和策略的话来配置线程池的时候默认使用的是 <code>ThreadPoolExecutor.AbortPolicy</code>。在默认情况下，<code>ThreadPoolExecutor</code> 将抛出 <code>RejectedExecutionException</code> 来拒绝新来的任务 ，这代表你将丢失对这个任务的处理。 对于可伸缩的应用程序，建议使用 <code>ThreadPoolExecutor.CallerRunsPolicy</code>。当最大池被填满时，此策略为我们提供可伸缩队列。（这个直接查看 <code>ThreadPoolExecutor</code> 的构造函数源码就可以看出，比较简单的原因，这里就不贴代码了）</p>\r\n<h4><a id=\"DemoRunnableThreadPoolExecutor_1936\"></a>一个简单的线程池Demo:<code>Runnable</code>+<code>ThreadPoolExecutor</code></h4>\r\n<p>线程池实现原理</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8xMS8yNS8xNmVhMDQ3NjEyOTVlNzY2?x-oss-process=image/format,png\" alt=\"图解线程池实现原理\"></p>\r\n<p>为了让大家更清楚上面的面试题中的一些概念，我写了一个简单的线程池 Demo。</p>\r\n<p>首先创建一个 <code>Runnable</code> 接口的实现类（当然也可以是 <code>Callable</code> 接口，我们上面也说了两者的区别。）</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>Date<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">/**\r\n * 这是一个简单的Runnable类，需要大约5秒钟来执行其任务。\r\n */</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyRunnable</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span> String command<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">MyRunnable</span><span class=\"token punctuation\">(</span>String s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>command <span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" Start. Time = \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\">processCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" End. Time = \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">processCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            Thread<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>command<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li></ul></pre>\r\n<p>编写测试程序，我们这里以阿里巴巴推荐的使用 <code>ThreadPoolExecutor</code> 构造函数自定义参数的方式来创建线程池。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span>ArrayBlockingQueue<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span>ThreadPoolExecutor<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span>TimeUnit<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ThreadPoolExecutorDemo</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> CORE_POOL_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> MAX_POOL_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> QUEUE_CAPACITY <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> Long KEEP_ALIVE_TIME <span class=\"token operator\">=</span> <span class=\"token number\">1</span>L<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n        <span class=\"token comment\">//使用阿里巴巴推荐的创建线程池的方式</span>\r\n        <span class=\"token comment\">//通过ThreadPoolExecutor构造函数自定义参数创建</span>\r\n        ThreadPoolExecutor executor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">(</span>\r\n                CORE_POOL_SIZE<span class=\"token punctuation\">,</span>\r\n                MAX_POOL_SIZE<span class=\"token punctuation\">,</span>\r\n                KEEP_ALIVE_TIME<span class=\"token punctuation\">,</span>\r\n                TimeUnit<span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">,</span>\r\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBlockingQueue</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>QUEUE_CAPACITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor<span class=\"token punctuation\">.</span>CallerRunsPolicy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token comment\">//创建WorkerThread对象（WorkerThread类实现了Runnable 接口）</span>\r\n            Runnable worker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyRunnable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">//执行Runnable</span>\r\n            executor<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>worker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token comment\">//终止线程池</span>\r\n        executor<span class=\"token punctuation\">.</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>executor<span class=\"token punctuation\">.</span><span class=\"token function\">isTerminated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token punctuation\">}</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Finished all threads\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li></ul></pre>\r\n<p>可以看到我们上面的代码指定了：</p>\r\n<ol><li><code>corePoolSize</code>: 核心线程数为 5。</li><li><code>maximumPoolSize</code> ：最大线程数 10</li><li><code>keepAliveTime</code> : 等待时间为 1L。</li><li><code>unit</code>: 等待时间的单位为 TimeUnit.SECONDS。</li><li><code>workQueue</code>：任务队列为 <code>ArrayBlockingQueue</code>，并且容量为 100;</li><li><code>handler</code>:饱和策略为 <code>CallerRunsPolicy</code>。</li></ol>\r\n<p><strong>Output：</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">pool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">2</span> Start<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">44</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">5</span> Start<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">44</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">4</span> Start<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">44</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">1</span> Start<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">44</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">3</span> Start<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">44</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">5</span> End<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">49</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">3</span> End<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">49</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">2</span> End<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">49</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">4</span> End<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">49</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">1</span> End<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">49</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">2</span> Start<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">49</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">1</span> Start<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">49</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">4</span> Start<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">49</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">3</span> Start<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">49</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">5</span> Start<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">49</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">2</span> End<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">54</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">3</span> End<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">54</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">4</span> End<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">54</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">5</span> End<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">54</span> CST <span class=\"token number\">2019</span>\r\npool<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>thread<span class=\"token operator\">-</span><span class=\"token number\">1</span> End<span class=\"token punctuation\">.</span> Time <span class=\"token operator\">=</span> Tue Nov <span class=\"token number\">12</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">54</span> CST <span class=\"token number\">2019</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li></ul></pre>\r\n<h3><a name=\"t32\"></a><a name=\"t32\"></a><a id=\"ScheduledThreadPoolExecutor_2060\"></a>线程池之ScheduledThreadPoolExecutor详解</h3>\r\n<h3><a name=\"t33\"></a><a name=\"t33\"></a><a id=\"FutureTask_2064\"></a>FutureTask详解</h3>\r\n<h2><a name=\"t34\"></a><a name=\"t34\"></a><a id=\"_2068\"></a>原子操作类</h2>\r\n<h4><a id=\"_Java_Concurrency_API_atomic_classes_2070\"></a>什么是原子操作？在 Java Concurrency API 中有哪些原子类(atomic classes)？</h4>\r\n<p>原子操作（atomic operation）意为”不可被中断的一个或一系列操作” 。</p>\r\n<p>处理器使用基于对缓存加锁或总线加锁的方式来实现多处理器之间的原子操作。在 Java 中可以通过锁和循环 CAS 的方式来实现原子操作。 CAS 操作——Compare &amp; Set，或是 Compare &amp; Swap，现在几乎所有的 CPU 指令都支持 CAS 的原子操作。</p>\r\n<p>原子操作是指一个不受其他操作影响的操作任务单元。原子操作是在多线程环境下避免数据不一致必须的手段。</p>\r\n<p>int++并不是一个原子操作，所以当一个线程读取它的值并加 1 时，另外一个线程有可能会读到之前的值，这就会引发错误。</p>\r\n<p>为了解决这个问题，必须保证增加操作是原子的，在 JDK1.5 之前我们可以使用同步技术来做到这一点。到 JDK1.5，java.util.concurrent.atomic 包提供了 int 和long 类型的原子包装类，它们可以自动的保证对于他们的操作是原子的并且不需要使用同步。</p>\r\n<p>java.util.concurrent 这个包里面提供了一组原子类。其基本的特性就是在多线程环境下，当有多个线程同时执行这些类的实例包含的方法时，具有排他性，即当某个线程进入方法，执行其中的指令时，不会被其他线程打断，而别的线程就像自旋锁一样，一直等到该方法执行完成，才由 JVM 从等待队列中选择另一个线程进入，这只是一种逻辑上的理解。</p>\r\n<p>原子类：AtomicBoolean，AtomicInteger，AtomicLong，AtomicReference</p>\r\n<p>原子数组：AtomicIntegerArray，AtomicLongArray，AtomicReferenceArray</p>\r\n<p>原子属性更新器：AtomicLongFieldUpdater，AtomicIntegerFieldUpdater，AtomicReferenceFieldUpdater</p>\r\n<p>解决 ABA 问题的原子类：AtomicMarkableReference（通过引入一个 boolean来反映中间有没有变过），AtomicStampedReference（通过引入一个 int 来累加来反映中间有没有变过）</p>\r\n<h4><a id=\"_atomic__2094\"></a>说一下 atomic 的原理？</h4>\r\n<p>Atomic包中的类基本的特性就是在多线程环境下，当有多个线程同时对单个（包括基本类型及引用类型）变量进行操作时，具有排他性，即当多个线程同时对该变量的值进行更新时，仅有一个线程能成功，而未成功的线程可以向自旋锁一样，继续尝试，一直等到执行成功。</p>\r\n<p>AtomicInteger 类的部分源码：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">// setup to use Unsafe.compareAndSwapInt for updates（更新操作时提供“比较并替换”的作用）</span>\r\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> Unsafe unsafe <span class=\"token operator\">=</span> Unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">getUnsafe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> valueOffset<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">static</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\t\tvalueOffset <span class=\"token operator\">=</span> unsafe<span class=\"token punctuation\">.</span>objectFieldOffset\r\n\t\t<span class=\"token punctuation\">(</span>AtomicInteger<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">volatile</span> <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li></ul></pre>\r\n<p>AtomicInteger 类主要利用 CAS (compare and swap) + volatile 和 native 方法来保证原子操作，从而避免 synchronized 的高开销，执行效率大为提升。</p>\r\n<p>CAS的原理是拿期望的值和原本的一个值作比较，如果相同则更新成新的值。UnSafe 类的 objectFieldOffset() 方法是一个本地方法，这个方法是用来拿到“原来的值”的内存地址，返回值是 valueOffset。另外 value 是一个volatile变量，在内存中可见，因此 JVM 可以保证任何时刻任何线程总能拿到该变量的最新值。</p>\r\n<h2><a name=\"t35\"></a><a name=\"t35\"></a><a id=\"_2123\"></a>并发工具</h2>\r\n<h3><a name=\"t36\"></a><a name=\"t36\"></a><a id=\"CountDownLatchCyclicBarrier_2125\"></a>并发工具之CountDownLatch与CyclicBarrier</h3>\r\n<h4><a id=\"_Java__CycliBarriar__CountdownLatch__2127\"></a>在 Java 中 CycliBarriar 和 CountdownLatch 有什么区别？</h4>\r\n<p>CountDownLatch与CyclicBarrier都是用于控制并发的工具类，都可以理解成维护的就是一个计数器，但是这两者还是各有不同侧重点的：</p>\r\n<ul><li> <p>CountDownLatch一般用于某个线程A等待若干个其他线程执行完任务之后，它才执行；而CyclicBarrier一般用于一组线程互相等待至某个状态，然后这一组线程再同时执行；CountDownLatch强调一个线程等多个线程完成某件事情。CyclicBarrier是多个线程互等，等大家都完成，再携手共进。</p> </li><li> <p>调用CountDownLatch的countDown方法后，当前线程并不会阻塞，会继续往下执行；而调用CyclicBarrier的await方法，会阻塞当前线程，直到CyclicBarrier指定的线程全部都到达了指定点的时候，才能继续往下执行；</p> </li><li> <p>CountDownLatch方法比较少，操作比较简单，而CyclicBarrier提供的方法更多，比如能够通过getNumberWaiting()，isBroken()这些方法获取当前多个线程的状态，并且CyclicBarrier的构造方法可以传入barrierAction，指定当所有线程都到达时执行的业务功能；</p> </li><li> <p>CountDownLatch是不能复用的，而CyclicLatch是可以复用的。</p> </li></ul>\r\n<h3><a name=\"t37\"></a><a name=\"t37\"></a><a id=\"SemaphoreExchanger_2144\"></a>并发工具之Semaphore与Exchanger</h3>\r\n<h4><a id=\"Semaphore__2146\"></a>Semaphore 有什么作用</h4>\r\n<p>Semaphore 就是一个信号量，它的作用是限制某段代码块的并发数。Semaphore有一个构造函数，可以传入一个 int 型整数 n，表示某段代码最多只有 n 个线程可以访问，如果超出了 n，那么请等待，等到某个线程执行完毕这段代码块，下一个线程再进入。由此可以看出如果 Semaphore 构造函数中传入的 int 型整数 n=1，相当于变成了一个 synchronized 了。</p>\r\n<p><strong>Semaphore(信号量)-允许多个线程同时访问：</strong> synchronized 和 ReentrantLock 都是一次只允许一个线程访问某个资源，Semaphore(信号量)可以指定多个线程同时访问某个资源。</p>\r\n<h4><a id=\"Exchanger_2154\"></a>什么是线程间交换数据的工具Exchanger</h4>\r\n<p>Exchanger是一个用于线程间协作的工具类，用于两个线程间交换数据。它提供了一个交换的同步点，在这个同步点两个线程能够交换数据。交换数据是通过exchange方法来实现的，如果一个线程先执行exchange方法，那么它会同步等待另一个线程也执行exchange方法，这个时候两个线程就都达到了同步点，两个线程就可以交换数据。</p>\r\n<h4><a id=\"_2160\"></a>常用的并发工具类有哪些？</h4>\r\n<ul><li><strong>Semaphore(信号量)-允许多个线程同时访问：</strong> synchronized 和 ReentrantLock 都是一次只允许一个线程访问某个资源，Semaphore(信号量)可以指定多个线程同时访问某个资源。</li><li><strong>CountDownLatch(倒计时器)：</strong> CountDownLatch是一个同步工具类，用来协调多个线程之间的同步。这个工具通常用来控制线程等待，它可以让某一个线程等待直到倒计时结束，再开始执行。</li><li><strong>CyclicBarrier(循环栅栏)：</strong> CyclicBarrier 和 CountDownLatch 非常类似，它也可以实现线程间的技术等待，但是它的功能比 CountDownLatch 更加复杂和强大。主要应用场景和 CountDownLatch 类似。CyclicBarrier 的字面意思是可循环使用（Cyclic）的屏障（Barrier）。它要做的事情是，让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续干活。CyclicBarrier默认的构造方法是 CyclicBarrier(int parties)，其参数表示屏障拦截的线程数量，每个线程调用await()方法告诉 CyclicBarrier 我已经到达了屏障，然后当前线程被阻塞。</li></ul>\r\n<h2><a name=\"t38\"></a><a name=\"t38\"></a><a id=\"_2168\"></a>并发实践</h2>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_java_concurrent.vue?vue&type=template&id=18ddb61e\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>Java虚拟机(JVM)面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"Java_36\"></a>Java内存区域</h2>\r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"_JVM__38\"></a>说一下 JVM 的主要组成部分及其作用？</h3>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200103213149526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"\"></p>\r\n<p>JVM包含两个子系统和两个组件，两个子系统为Class loader(类装载)、Execution engine(执行引擎)；两个组件为Runtime data area(运行时数据区)、Native Interface(本地接口)。</p>\r\n<ul><li> <p>Class loader(类装载)：根据给定的全限定名类名(如：java.lang.Object)来装载class文件到Runtime data area中的method area。</p> </li><li> <p>Execution engine（执行引擎）：执行classes中的指令。</p> </li><li> <p>Native Interface(本地接口)：与native libraries交互，是其它编程语言交互的接口。</p> </li><li> <p>Runtime data area(运行时数据区域)：这就是我们常说的JVM的内存。</p> </li></ul>\r\n<p><strong>作用</strong> ：首先通过编译器把 Java 代码转换成字节码，类加载器（ClassLoader）再把字节码加载到内存中，将其放在运行时数据区（Runtime data area）的方法区内，而字节码文件只是 JVM 的一套指令集规范，并不能直接交给底层操作系统去执行，因此需要特定的命令解析器执行引擎（Execution Engine），将字节码翻译成底层系统指令，再交由 CPU 去执行，而这个过程中需要调用其他语言的本地库接口（Native Interface）来实现整个程序的功能。</p>\r\n<p><strong>下面是Java程序运行机制详细说明</strong></p>\r\n<p>Java程序运行机制步骤</p>\r\n<ul><li>首先利用IDE集成开发工具编写Java源代码，源文件的后缀为.java；</li><li>再利用编译器(javac命令)将源代码编译成字节码文件，字节码文件的后缀名为.class；</li><li>运行字节码的工作是由解释器(java命令)来完成的。</li></ul>\r\n<p><img src=\"https://img-blog.csdnimg.cn/2020031416414486.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\r\n<p>从上图可以看，java文件通过编译器变成了.class文件，接下来类加载器又将这些.class文件加载到JVM中。<br> 其实可以一句话来解释：类的加载指的是将类的.class文件中的二进制数据读入到内存中，将其放在运行时数据区的方法区内，然后在堆区创建一个 java.lang.Class对象，用来封装类在方法区内的数据结构。</p>\r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"_JVM__69\"></a>说一下 JVM 运行时数据区</h3>\r\n<p><strong>Java 虚拟机在执行 Java 程序的过程中会把它所管理的内存区域划分为若干个不同的数据区域</strong>。这些区域都有各自的用途，以及创建和销毁的时间，有些区域随着虚拟机进程的启动而存在，有些区域则是依赖线程的启动和结束而建立和销毁。Java 虚拟机所管理的内存被划分为如下几个区域：</p>\r\n<img src=\"https://img-blog.csdnimg.cn/20200103213220764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"img\">\r\n<p>不同虚拟机的运行时数据区可能略微有所不同，但都会遵从 Java 虚拟机规范， Java 虚拟机规范规定的区域分为以下 5 个部分：</p>\r\n<ul><li>程序计数器（Program Counter Register）：当前线程所执行的字节码的行号指示器，字节码解析器的工作是通过改变这个计数器的值，来选取下一条需要执行的字节码指令，分支、循环、跳转、异常处理、线程恢复等基础功能，都需要依赖这个计数器来完成；</li><li>Java 虚拟机栈（Java Virtual Machine Stacks）：用于存储局部变量表、操作数栈、动态链接、方法出口等信息；</li><li>本地方法栈（Native Method Stack）：与虚拟机栈的作用是一样的，只不过虚拟机栈是服务 Java 方法的，而本地方法栈是为虚拟机调用 Native 方法服务的；</li><li>Java 堆（Java Heap）：Java 虚拟机中内存最大的一块，是被所有线程共享的，几乎所有的对象实例都在这里分配内存；</li><li>方法区（Methed Area）：用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译后的代码等数据。</li></ul>\r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"_89\"></a>深拷贝和浅拷贝</h3>\r\n<p>浅拷贝（shallowCopy）只是增加了一个指针指向已存在的内存地址，</p>\r\n<p>深拷贝（deepCopy）是增加了一个指针并且申请了一个新的内存，使这个增加的指针指向这个新的内存，</p>\r\n<p>使用深拷贝的情况下，释放内存的时候不会因为出现浅拷贝时释放同一个内存的错误。</p>\r\n<p>浅复制：仅仅是指向被复制的内存地址，如果原地址发生改变，那么浅复制出来的对象也会相应的改变。</p>\r\n<p>深复制：在计算机中开辟一块<strong>新的内存地址</strong>用于存放复制的对象。</p>\r\n<h3><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"_105\"></a>说一下堆栈的区别？</h3>\r\n<p>物理地址</p>\r\n<p>堆的物理地址分配对对象是不连续的。因此性能慢些。在GC的时候也要考虑到不连续的分配，所以有各种算法。比如，标记-消除，复制，标记-压缩，分代（即新生代使用复制算法，老年代使用标记——压缩）</p>\r\n<p>栈使用的是数据结构中的栈，先进后出的原则，物理地址分配是连续的。所以性能快。</p>\r\n<p>内存分别</p>\r\n<p>堆因为是不连续的，所以分配的内存是在<code>运行期</code>确认的，因此大小不固定。一般堆大小远远大于栈。</p>\r\n<p>栈是连续的，所以分配的内存大小要在<code>编译期</code>就确认，大小是固定的。</p>\r\n<p>存放的内容</p>\r\n<p>堆存放的是对象的实例和数组。因此该区更关注的是数据的存储</p>\r\n<p>栈存放：局部变量，操作数栈，返回结果。该区更关注的是程序方法的执行。</p>\r\n<p>PS：</p>\r\n<ol><li>静态变量放在方法区</li><li>静态的对象还是放在堆。</li></ol>\r\n<p>程序的可见度</p>\r\n<p>堆对于整个应用程序都是共享、可见的。</p>\r\n<p>栈只对于线程是可见的。所以也是线程私有。他的生命周期和线程相同。</p>\r\n<h3><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"_144\"></a>队列和栈是什么？有什么区别？</h3>\r\n<p>队列和栈都是被用来预存储数据的。</p>\r\n<ul><li>操作的名称不同。队列的插入称为入队，队列的删除称为出队。栈的插入称为进栈，栈的删除称为出栈。</li><li>可操作的方式不同。队列是在队尾入队，队头出队，即两边都可操作。而栈的进栈和出栈都是在栈顶进行的，无法对栈底直接进行操作。</li><li>操作的方法不同。队列是先进先出（FIFO），即队列的修改是依先进先出的原则进行的。新来的成员总是加入队尾（不能从中间插入），每次离开的成员总是队列头上（不允许中途离队）。而栈为后进先出（LIFO）,即每次删除（出栈）的总是当前栈中最新的元素，即最后插入（进栈）的元素，而最先插入的被放在栈的底部，要到最后才能删除。</li></ul>\r\n<h2><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"HotSpot_154\"></a>HotSpot虚拟机对象探秘</h2>\r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"_156\"></a>对象的创建</h3>\r\n<p>说到对象的创建，首先让我们看看 <code>Java</code> 中提供的几种对象创建方式：</p>\r\n<div class=\"table-box\"><table><thead><tr><th align=\"left\">Header</th><th align=\"left\">解释</th></tr></thead><tbody><tr><td align=\"left\">使用new关键字</td><td align=\"left\">调用了构造函数</td></tr><tr><td align=\"left\">使用Class的newInstance方法</td><td align=\"left\">调用了构造函数</td></tr><tr><td align=\"left\">使用Constructor类的newInstance方法</td><td align=\"left\">调用了构造函数</td></tr><tr><td align=\"left\">使用clone方法</td><td align=\"left\">没有调用构造函数</td></tr><tr><td align=\"left\">使用反序列化</td><td align=\"left\">没有调用构造函数</td></tr></tbody></table></div>\r\n<p>下面是对象创建的主要流程:</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200103213726902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"img\"></p>\r\n<p>虚拟机遇到一条new指令时，先检查常量池是否已经加载相应的类，如果没有，必须先执行相应的类加载。类加载通过后，接下来分配内存。若Java堆中内存是绝对规整的，使用“指针碰撞“方式分配内存；如果不是规整的，就从空闲列表中分配，叫做”空闲列表“方式。划分内存时还需要考虑一个问题-并发，也有两种方式: CAS同步处理，或者本地线程分配缓冲(Thread Local Allocation Buffer, TLAB)。然后内存空间初始化操作，接着是做一些必要的对象设置(元信息、哈希码…)，最后执行<code>&lt;init&gt;</code>方法。</p>\r\n<h3><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"_176\"></a>为对象分配内存</h3>\r\n<p>类加载完成后，接着会在Java堆中划分一块内存分配给对象。内存分配根据Java堆是否规整，有两种方式：</p>\r\n<ul><li>指针碰撞：如果Java堆的内存是规整，即所有用过的内存放在一边，而空闲的的放在另一边。分配内存时将位于中间的指针指示器向空闲的内存移动一段与对象大小相等的距离，这样便完成分配内存工作。</li><li>空闲列表：如果Java堆的内存不是规整的，则需要由虚拟机维护一个列表来记录那些内存是可用的，这样在分配的时候可以从列表中查询到足够大的内存分配给对象，并在分配后更新列表记录。</li></ul>\r\n<p>选择哪种分配方式是由 Java 堆是否规整来决定的，而 Java 堆是否规整又由所采用的垃圾收集器是否带有压缩整理功能决定。</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200103213812259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"内存分配的两种方式\"></p>\r\n<h3><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"_189\"></a>处理并发安全问题</h3>\r\n<p>对象的创建在虚拟机中是一个非常频繁的行为，哪怕只是修改一个指针所指向的位置，在并发情况下也是不安全的，可能出现正在给对象 A 分配内存，指针还没来得及修改，对象 B 又同时使用了原来的指针来分配内存的情况。解决这个问题有两种方案：</p>\r\n<ul><li>对分配内存空间的动作进行同步处理（采用 CAS + 失败重试来保障更新操作的原子性）；</li><li>把内存分配的动作按照线程划分在不同的空间之中进行，即每个线程在 Java 堆中预先分配一小块内存，称为本地线程分配缓冲（Thread Local Allocation Buffer, TLAB）。哪个线程要分配内存，就在哪个线程的 TLAB 上分配。只有 TLAB 用完并分配新的 TLAB 时，才需要同步锁。通过-XX:+/-UserTLAB参数来设定虚拟机是否使用TLAB。</li></ul>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200103213833317.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"内存分配时保证线程安全的两种方式\"></p>\r\n<h3><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"_200\"></a>对象的访问定位</h3>\r\n<p><code>Java</code>程序需要通过 <code>JVM</code> 栈上的引用访问堆中的具体对象。对象的访问方式取决于 <code>JVM</code> 虚拟机的实现。目前主流的访问方式有 <strong>句柄</strong> 和 <strong>直接指针</strong> 两种方式。</p>\r\n<blockquote>\r\n<p><strong>指针：</strong> 指向对象，代表一个对象在内存中的起始地址。</p>\r\n<p><strong>句柄：</strong> 可以理解为指向指针的指针，维护着对象的指针。句柄不直接指向对象，而是指向对象的指针（句柄不发生变化，指向固定内存地址），再由对象的指针指向对象的真实内存地址。</p>\r\n</blockquote>\r\n<h4><a id=\"_208\"></a>句柄访问</h4>\r\n<p><code>Java</code>堆中划分出一块内存来作为<strong>句柄池</strong>，引用中存储对象的<strong>句柄地址</strong>，而句柄中包含了<strong>对象实例数据</strong>与<strong>对象类型数据</strong>各自的<strong>具体地址</strong>信息，具体构造如下图所示：</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200103213926911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"img\"></p>\r\n<p><strong>优势</strong>：引用中存储的是<strong>稳定</strong>的句柄地址，在对象被移动（垃圾收集时移动对象是非常普遍的行为）时只会改变<strong>句柄中</strong>的<strong>实例数据指针</strong>，而<strong>引用</strong>本身不需要修改。</p>\r\n<h4><a id=\"_218\"></a>直接指针</h4>\r\n<p>如果使用<strong>直接指针</strong>访问，<strong>引用</strong> 中存储的直接就是<strong>对象地址</strong>，那么<code>Java</code>堆对象内部的布局中就必须考虑如何放置访问<strong>类型数据</strong>的相关信息。</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200103213948956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"img\"></p>\r\n<p><strong>优势</strong>：速度更<strong>快</strong>，节省了<strong>一次指针定位</strong>的时间开销。由于对象的访问在<code>Java</code>中非常频繁，因此这类开销积少成多后也是非常可观的执行成本。HotSpot 中采用的就是这种方式。</p>\r\n<h2><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"_228\"></a>内存溢出异常</h2>\r\n<h3><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"Java_230\"></a>Java会存在内存泄漏吗？请简单描述</h3>\r\n<p>内存泄漏是指不再被使用的对象或者变量一直被占据在内存中。理论上来说，Java是有GC垃圾回收机制的，也就是说，不再被使用的对象，会被GC自动回收掉，自动从内存中清除。</p>\r\n<p>但是，即使这样，Java也还是存在着内存泄漏的情况，java导致内存泄露的原因很明确：长生命周期的对象持有短生命周期对象的引用就很可能发生内存泄露，尽管短生命周期对象已经不再需要，但是因为长生命周期对象持有它的引用而导致不能被回收，这就是java中内存泄露的发生场景。</p>\r\n<h2><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"_238\"></a>垃圾收集器</h2>\r\n<h3><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"Java_240\"></a>简述Java垃圾回收机制</h3>\r\n<p>在java中，程序员是不需要显示的去释放一个对象的内存的，而是由虚拟机自行执行。在JVM中，有一个垃圾回收线程，它是低优先级的，在正常情况下是不会执行的，只有在虚拟机空闲或者当前堆内存不足时，才会触发执行，扫面那些没有被任何引用的对象，并将它们添加到要回收的集合中，进行回收。</p>\r\n<h3><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"GCGC_246\"></a>GC是什么？为什么要GC</h3>\r\n<p>GC 是垃圾收集的意思（Gabage Collection）,内存处理是编程人员容易出现问题的地方，忘记或者错误的内存</p>\r\n<p>回收会导致程序或系统的不稳定甚至崩溃，Java 提供的 GC 功能可以自动监测对象是否超过作用域从而达到自动</p>\r\n<p>回收内存的目的，Java 语言没有提供释放已分配内存的显示操作方法。</p>\r\n<h3><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"2_256\"></a>垃圾回收的优点和原理。并考虑2种回收机制</h3>\r\n<p>java语言最显著的特点就是引入了垃圾回收机制，它使java程序员在编写程序时不再考虑内存管理的问题。</p>\r\n<p>由于有这个垃圾回收机制，java中的对象不再有“作用域”的概念，只有引用的对象才有“作用域”。</p>\r\n<p>垃圾回收机制有效的防止了内存泄露，可以有效的使用可使用的内存。</p>\r\n<p>垃圾回收器通常作为一个单独的低级别的线程运行，在不可预知的情况下对内存堆中已经死亡的或很长时间没有用过的对象进行清除和回收。</p>\r\n<p>程序员不能实时的对某个对象或所有对象调用垃圾回收器进行垃圾回收。</p>\r\n<p>垃圾回收有分代复制垃圾回收、标记垃圾回收、增量垃圾回收。</p>\r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"_271\"></a>垃圾回收器的基本原理是什么？垃圾回收器可以马上回收内存吗？有什么办法主动通知虚拟机进行垃圾回收？</h3>\r\n<p>对于GC来说，当程序员创建对象时，GC就开始监控这个对象的地址、大小以及使用情况。</p>\r\n<p>通常，GC采用有向图的方式记录和管理堆(heap)中的所有对象。通过这种方式确定哪些对象是\"可达的\"，哪些对象是\"不可达的\"。当GC确定一些对象为\"不可达\"时，GC就有责任回收这些内存空间。</p>\r\n<p>可以。程序员可以手动执行System.gc()，通知GC运行，但是Java语言规范并不保证GC一定会执行。</p>\r\n<h3><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"Java__281\"></a>Java 中都有哪些引用类型？</h3>\r\n<ul><li>强引用：发生 gc 的时候不会被回收。</li><li>软引用：有用但不是必须的对象，在发生内存溢出之前会被回收。</li><li>弱引用：有用但不是必须的对象，在下一次GC时会被回收。</li><li>虚引用（幽灵引用/幻影引用）：无法通过虚引用获得对象，用 PhantomReference 实现虚引用，虚引用的用途是在 gc 时返回一个通知。</li></ul>\r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"_290\"></a>怎么判断对象是否可以被回收？</h3>\r\n<p>垃圾收集器在做垃圾回收的时候，首先需要判定的就是哪些内存是需要被回收的，哪些对象是「存活」的，是不可以被回收的；哪些对象已经「死掉」了，需要被回收。</p>\r\n<p>一般有两种方法来判断：</p>\r\n<ul><li>引用计数器法：为每个对象创建一个引用计数，有对象引用时计数器 +1，引用被释放时计数 -1，当计数器为 0 时就可以被回收。它有一个缺点不能解决循环引用的问题；</li><li>可达性分析算法：从 GC Roots 开始向下搜索，搜索所走过的路径称为引用链。当一个对象到 GC Roots 没有任何引用链相连时，则证明此对象是可以被回收的。</li></ul>\r\n<h3><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"Java_301\"></a>在Java中，对象什么时候可以被垃圾回收</h3>\r\n<p>当对象对当前使用这个对象的应用程序变得不可触及的时候，这个对象就可以被回收了。<br> 垃圾回收不会发生在永久代，如果永久代满了或者是超过了临界值，会触发完全垃圾回收(Full GC)。如果你仔细查看垃圾收集器的输出信息，就会发现永久代也是被回收的。这就是为什么正确的永久代大小对避免Full GC是非常重要的原因。</p>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"JVM_308\"></a>JVM中的永久代中会发生垃圾回收吗</h3>\r\n<p>垃圾回收不会发生在永久代，如果永久代满了或者是超过了临界值，会触发完全垃圾回收(Full GC)。如果你仔细查看垃圾收集器的输出信息，就会发现永久代也是被回收的。这就是为什么正确的永久代大小对避免Full GC是非常重要的原因。请参考下Java8：从永久代到元数据区<br> (译者注：Java8中已经移除了永久代，新加了一个叫做元数据区的native内存区)</p>\r\n<h3><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"_JVM__315\"></a>说一下 JVM 有哪些垃圾回收算法？</h3>\r\n<ul><li>标记-清除算法：标记无用对象，然后进行清除回收。缺点：效率不高，无法清除垃圾碎片。</li><li>复制算法：按照容量划分二个大小相等的内存区域，当一块用完的时候将活着的对象复制到另一块上，然后再把已使用的内存空间一次清理掉。缺点：内存使用率不高，只有原来的一半。</li><li>标记-整理算法：标记无用对象，让所有存活的对象都向一端移动，然后直接清除掉端边界以外的内存。</li><li>分代算法：根据对象存活周期的不同将内存划分为几块，一般是新生代和老年代，新生代基本采用复制算法，老年代采用标记整理算法。</li></ul>\r\n<h4><a id=\"_324\"></a>标记-清除算法</h4>\r\n<p>标记无用对象，然后进行清除回收。</p>\r\n<p>标记-清除算法（Mark-Sweep）是一种常见的基础垃圾收集算法，它将垃圾收集分为两个阶段：</p>\r\n<ul><li>标记阶段：标记出可以回收的对象。</li><li>清除阶段：回收被标记的对象所占用的空间。</li></ul>\r\n<p>标记-清除算法之所以是基础的，是因为后面讲到的垃圾收集算法都是在此算法的基础上进行改进的。</p>\r\n<p><strong>优点</strong>：实现简单，不需要对象进行移动。</p>\r\n<p><strong>缺点</strong>：标记、清除过程效率低，产生大量不连续的内存碎片，提高了垃圾回收的频率。</p>\r\n<p>标记-清除算法的执行的过程如下图所示</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200104115917418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"img\"></p>\r\n<h4><a id=\"_345\"></a>复制算法</h4>\r\n<p>为了解决标记-清除算法的效率不高的问题，产生了复制算法。它把内存空间划为两个相等的区域，每次只使用其中一个区域。垃圾收集时，遍历当前使用的区域，把存活对象复制到另外一个区域中，最后将当前使用的区域的可回收的对象进行回收。</p>\r\n<p><strong>优点</strong>：按顺序分配内存即可，实现简单、运行高效，不用考虑内存碎片。</p>\r\n<p><strong>缺点</strong>：可用的内存大小缩小为原来的一半，对象存活率高时会频繁进行复制。</p>\r\n<p>复制算法的执行过程如下图所示</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200104115940771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"img\"></p>\r\n<h4><a id=\"_359\"></a>标记-整理算法</h4>\r\n<p>在新生代中可以使用复制算法，但是在老年代就不能选择复制算法了，因为老年代的对象存活率会较高，这样会有较多的复制操作，导致效率变低。标记-清除算法可以应用在老年代中，但是它效率不高，在内存回收后容易产生大量内存碎片。因此就出现了一种标记-整理算法（Mark-Compact）算法，与标记-整理算法不同的是，在标记可回收的对象后将所有存活的对象压缩到内存的一端，使他们紧凑的排列在一起，然后对端边界以外的内存进行回收。回收后，已用和未用的内存都各自一边。</p>\r\n<p><strong>优点</strong>：解决了标记-清理算法存在的内存碎片问题。</p>\r\n<p><strong>缺点</strong>：仍需要进行局部对象移动，一定程度上降低了效率。</p>\r\n<p>标记-整理算法的执行过程如下图所示</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200104120006513.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"img\"></p>\r\n<h4><a id=\"_373\"></a>分代收集算法</h4>\r\n<p>当前商业虚拟机都采用<strong>分代收集</strong>的垃圾收集算法。分代收集算法，顾名思义是根据对象的<strong>存活周期</strong>将内存划分为几块。一般包括<strong>年轻代</strong>、<strong>老年代</strong> 和 <strong>永久代</strong>，如图所示：</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200104120031885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"img\"></p>\r\n<h3><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"_JVM__381\"></a>说一下 JVM 有哪些垃圾回收器？</h3>\r\n<p>如果说垃圾收集算法是内存回收的方法论，那么垃圾收集器就是内存回收的具体实现。下图展示了7种作用于不同分代的收集器，其中用于回收新生代的收集器包括Serial、PraNew、Parallel Scavenge，回收老年代的收集器包括Serial Old、Parallel Old、CMS，还有用于回收整个Java堆的G1收集器。不同收集器之间的连线表示它们可以搭配使用。</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200104120144820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"img\"></p>\r\n<ul><li>Serial收集器（复制算法): 新生代单线程收集器，标记和清理都是单线程，优点是简单高效；</li><li>ParNew收集器 (复制算法): 新生代收并行集器，实际上是Serial收集器的多线程版本，在多核CPU环境下有着比Serial更好的表现；</li><li>Parallel Scavenge收集器 (复制算法): 新生代并行收集器，追求高吞吐量，高效利用 CPU。吞吐量 = 用户线程时间/(用户线程时间+GC线程时间)，高吞吐量可以高效率的利用CPU时间，尽快完成程序的运算任务，适合后台应用等对交互相应要求不高的场景；</li><li>Serial Old收集器 (标记-整理算法): 老年代单线程收集器，Serial收集器的老年代版本；</li><li>Parallel Old收集器 (标记-整理算法)： 老年代并行收集器，吞吐量优先，Parallel Scavenge收集器的老年代版本；</li><li>CMS(Concurrent Mark Sweep)收集器（标记-清除算法）： 老年代并行收集器，以获取最短回收停顿时间为目标的收集器，具有高并发、低停顿的特点，追求最短GC回收停顿时间。</li><li>G1(Garbage First)收集器 (标记-整理算法)： Java堆并行收集器，G1收集器是JDK1.7提供的一个新收集器，G1收集器基于“标记-整理”算法实现，也就是说不会产生内存碎片。此外，G1收集器不同于之前的收集器的一个重要特点是：G1回收的范围是整个Java堆(包括新生代，老年代)，而前六种收集器回收的范围仅限于新生代或老年代。</li></ul>\r\n<h3><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"_CMS__397\"></a>详细介绍一下 CMS 垃圾回收器？</h3>\r\n<p>CMS 是英文 Concurrent Mark-Sweep 的简称，是以牺牲吞吐量为代价来获得最短回收停顿时间的垃圾回收器。对于要求服务器响应速度的应用上，这种垃圾回收器非常适合。在启动 JVM 的参数加上“-XX:+UseConcMarkSweepGC”来指定使用 CMS 垃圾回收器。</p>\r\n<p>CMS 使用的是标记-清除的算法实现的，所以在 gc 的时候回产生大量的内存碎片，当剩余内存不能满足程序运行要求时，系统将会出现 Concurrent Mode Failure，临时 CMS 会采用 Serial Old 回收器进行垃圾清除，此时的性能将会被降低。</p>\r\n<h3><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"_405\"></a>新生代垃圾回收器和老年代垃圾回收器都有哪些？有什么区别？</h3>\r\n<ul><li>新生代回收器：Serial、ParNew、Parallel Scavenge</li><li>老年代回收器：Serial Old、Parallel Old、CMS</li><li>整堆回收器：G1</li></ul>\r\n<p>新生代垃圾回收器一般采用的是复制算法，复制算法的优点是效率高，缺点是内存利用率低；老年代回收器一般采用的是标记-整理的算法进行垃圾回收。</p>\r\n<h3><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"_415\"></a>简述分代垃圾回收器是怎么工作的？</h3>\r\n<p>分代回收器有两个分区：老生代和新生代，新生代默认的空间占比总空间的 1/3，老生代的默认占比是 2/3。</p>\r\n<p>新生代使用的是复制算法，新生代里有 3 个分区：Eden、To Survivor、From Survivor，它们的默认占比是 8:1:1，它的执行流程如下：</p>\r\n<ul><li>把 Eden + From Survivor 存活的对象放入 To Survivor 区；</li><li>清空 Eden 和 From Survivor 分区；</li><li>From Survivor 和 To Survivor 分区交换，From Survivor 变 To Survivor，To Survivor 变 From Survivor。</li></ul>\r\n<p>每次在 From Survivor 到 To Survivor 移动时都存活的对象，年龄就 +1，当年龄到达 15（默认配置是 15）时，升级为老生代。大对象也会直接进入老生代。</p>\r\n<p>老生代当空间占用到达某个值之后就会触发全局垃圾收回，一般使用标记整理的执行算法。以上这些循环往复就构成了整个分代垃圾回收的整体执行流程。</p>\r\n<h2><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"_433\"></a>内存分配策略</h2>\r\n<h3><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"javaMinor_GCMajor_GC_435\"></a>简述java内存分配与回收策率以及Minor GC和Major GC</h3>\r\n<p>所谓自动内存管理，最终要解决的也就是内存分配和内存回收两个问题。前面我们介绍了内存回收，这里我们再来聊聊内存分配。</p>\r\n<p>对象的内存分配通常是在 Java 堆上分配（随着虚拟机优化技术的诞生，某些场景下也会在栈上分配，后面会详细介绍），对象主要分配在新生代的 Eden 区，如果启动了本地线程缓冲，将按照线程优先在 TLAB 上分配。少数情况下也会直接在老年代上分配。总的来说分配规则不是百分百固定的，其细节取决于哪一种垃圾收集器组合以及虚拟机相关参数有关，但是虚拟机对于内存的分配还是会遵循以下几种「普世」规则：</p>\r\n<h4><a id=\"_Eden__441\"></a>对象优先在 Eden 区分配</h4>\r\n<p>多数情况，对象都在新生代 Eden 区分配。当 Eden 区分配没有足够的空间进行分配时，虚拟机将会发起一次 Minor GC。如果本次 GC 后还是没有足够的空间，则将启用分配担保机制在老年代中分配内存。</p>\r\n<p>这里我们提到 Minor GC，如果你仔细观察过 GC 日常，通常我们还能从日志中发现 Major GC/Full GC。</p>\r\n<ul><li><strong>Minor GC</strong> 是指发生在新生代的 GC，因为 Java 对象大多都是朝生夕死，所有 Minor GC 非常频繁，一般回收速度也非常快；</li><li><strong>Major GC/Full GC</strong> 是指发生在老年代的 GC，出现了 Major GC 通常会伴随至少一次 Minor GC。Major GC 的速度通常会比 Minor GC 慢 10 倍以上。</li></ul>\r\n<h4><a id=\"_452\"></a>大对象直接进入老年代</h4>\r\n<p>所谓大对象是指需要大量连续内存空间的对象，频繁出现大对象是致命的，会导致在内存还有不少空间的情况下提前触发 GC 以获取足够的连续空间来安置新对象。</p>\r\n<p>前面我们介绍过新生代使用的是标记-清除算法来处理垃圾回收的，如果大对象直接在新生代分配就会导致 Eden 区和两个 Survivor 区之间发生大量的内存复制。因此对于大对象都会直接在老年代进行分配。</p>\r\n<h4><a id=\"_460\"></a>长期存活对象将进入老年代</h4>\r\n<p>虚拟机采用分代收集的思想来管理内存，那么内存回收时就必须判断哪些对象应该放在新生代，哪些对象应该放在老年代。因此虚拟机给每个对象定义了一个对象年龄的计数器，如果对象在 Eden 区出生，并且能够被 Survivor 容纳，将被移动到 Survivor 空间中，这时设置对象年龄为 1。对象在 Survivor 区中每「熬过」一次 Minor GC 年龄就加 1，当年龄达到一定程度（默认 15） 就会被晋升到老年代。</p>\r\n<h2><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"_468\"></a>虚拟机类加载机制</h2>\r\n<h3><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"java_470\"></a>简述java类加载机制?</h3>\r\n<p>虚拟机把描述类的数据从Class文件加载到内存，并对数据进行校验，解析和初始化，最终形成可以被虚拟机直接使用的java类型。</p>\r\n<h3><a name=\"t32\"></a><a name=\"t32\"></a><a id=\"JVMClass_476\"></a>描述一下JVM加载Class文件的原理机制</h3>\r\n<p>Java中的所有类，都需要由类加载器装载到JVM中才能运行。类加载器本身也是一个类，而它的工作就是把class文件从硬盘读取到内存中。在写程序的时候，我们几乎不需要关心类的加载，因为这些都是隐式装载的，除非我们有特殊的用法，像是反射，就需要显式的加载所需要的类。</p>\r\n<p>类装载方式，有两种 ：</p>\r\n<p>1.隐式装载， 程序在运行过程中当碰到通过new 等方式生成对象时，隐式调用类装载器加载对应的类到jvm中，</p>\r\n<p>2.显式装载， 通过class.forname()等方法，显式加载需要的类</p>\r\n<p>Java类的加载是动态的，它并不会一次性将所有类全部加载后再运行，而是保证程序运行的基础类(像是基类)完全加载到jvm中，至于其他类，则在需要的时候才加载。这当然就是为了节省内存开销。</p>\r\n<h3><a name=\"t33\"></a><a name=\"t33\"></a><a id=\"_490\"></a>什么是类加载器，类加载器有哪些?</h3>\r\n<p>实现通过类的权限定名获取该类的二进制字节流的代码块叫做类加载器。</p>\r\n<p>主要有一下四种类加载器:</p>\r\n<ol><li>启动类加载器(Bootstrap ClassLoader)用来加载java核心类库，无法被java程序直接引用。</li><li>扩展类加载器(extensions class loader):它用来加载 Java 的扩展库。Java 虚拟机的实现会提供一个扩展库目录。该类加载器在此目录里面查找并加载 Java 类。</li><li>系统类加载器（system class loader）：它根据 Java 应用的类路径（CLASSPATH）来加载 Java 类。一般来说，Java 应用的类都是由它来完成加载的。可以通过 ClassLoader.getSystemClassLoader()来获取它。</li><li>用户自定义类加载器，通过继承 java.lang.ClassLoader类的方式实现。</li></ol>\r\n<h3><a name=\"t34\"></a><a name=\"t34\"></a><a id=\"_503\"></a>说一下类装载的执行过程？</h3>\r\n<p>类装载分为以下 5 个步骤：</p>\r\n<ul><li>加载：根据查找路径找到相应的 class 文件然后导入；</li><li>验证：检查加载的 class 文件的正确性；</li><li>准备：给类中的静态变量分配内存空间；</li><li>解析：虚拟机将常量池中的符号引用替换成直接引用的过程。符号引用就理解为一个标示，而在直接引用直接指向内存中的地址；</li><li>初始化：对静态变量和静态代码块执行初始化工作。</li></ul>\r\n<h3><a name=\"t35\"></a><a name=\"t35\"></a><a id=\"_515\"></a>什么是双亲委派模型？</h3>\r\n<p>在介绍双亲委派模型之前先说下类加载器。对于任意一个类，都需要由加载它的类加载器和这个类本身一同确立在 JVM 中的唯一性，每一个类加载器，都有一个独立的类名称空间。类加载器就是根据指定全限定名称将 class 文件加载到 JVM 内存，然后再转化为 class 对象。</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200104165551656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"\"></p>\r\n<p>类加载器分类：</p>\r\n<ul><li>启动类加载器（Bootstrap ClassLoader），是虚拟机自身的一部分，用来加载Java_HOME/lib/目录中的，或者被 -Xbootclasspath 参数所指定的路径中并且被虚拟机识别的类库；</li><li>其他类加载器：</li><li>扩展类加载器（Extension ClassLoader）：负责加载\\lib\\ext目录或Java. ext. dirs系统变量指定的路径中的所有类库；</li><li>应用程序类加载器（Application ClassLoader）。负责加载用户类路径（classpath）上的指定类库，我们可以直接使用这个类加载器。一般情况，如果我们没有自定义类加载器默认就是用这个加载器。</li></ul>\r\n<p>双亲委派模型：如果一个类加载器收到了类加载的请求，它首先不会自己去加载这个类，而是把这个请求委派给父类加载器去完成，每一层的类加载器都是如此，这样所有的加载请求都会被传送到顶层的启动类加载器中，只有当父加载无法完成加载请求（它的搜索范围中没找到所需的类）时，子加载器才会尝试去加载类。</p>\r\n<p>当一个类收到了类加载请求时，不会自己先去加载这个类，而是将其委派给父类，由父类去加载，如果此时父类不能加载，反馈给子类，由子类去完成类的加载。</p>\r\n<h2><a name=\"t36\"></a><a name=\"t36\"></a><a id=\"JVM_536\"></a>JVM调优</h2>\r\n<h3><a name=\"t37\"></a><a name=\"t37\"></a><a id=\"_JVM__538\"></a>说一下 JVM 调优的工具？</h3>\r\n<p>JDK 自带了很多监控工具，都位于 JDK 的 bin 目录下，其中最常用的是 jconsole 和 jvisualvm 这两款视图监控工具。</p>\r\n<ul><li>jconsole：用于对 JVM 中的内存、线程和类等进行监控；</li><li>jvisualvm：JDK 自带的全能分析工具，可以分析：内存快照、线程快照、程序死锁、监控内存的变化、gc 变化等。</li></ul>\r\n<h3><a name=\"t38\"></a><a name=\"t38\"></a><a id=\"_JVM__547\"></a>常用的 JVM 调优的参数都有哪些？</h3>\r\n<ul><li>-Xms2g：初始化推大小为 2g；</li><li>-Xmx2g：堆最大内存为 2g；</li><li>-XX:NewRatio=4：设置年轻的和老年代的内存比例为 1:4；</li><li>-XX:SurvivorRatio=8：设置新生代 Eden 和 Survivor 比例为 8:2；</li><li>–XX:+UseParNewGC：指定使用 ParNew + Serial Old 垃圾回收器组合；</li><li>-XX:+UseParallelOldGC：指定使用 ParNew + ParNew Old 垃圾回收器组合；</li><li>-XX:+UseConcMarkSweepGC：指定使用 CMS + Serial Old 垃圾回收器组合；</li><li>-XX:+PrintGC：开启打印 gc 信息；</li><li>-XX:+PrintGCDetails：打印 gc 详细信息。</li></ul>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_java_jvm.vue?vue&type=template&id=5912172c\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>Spring面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"Spring10_37\"></a>Spring概述（10）</h2>\r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"spring_39\"></a>什么是spring?</h3>\r\n<p>Spring是<strong>一个轻量级Java开发框架</strong>，最早有<strong>Rod Johnson</strong>创建，目的是为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。它是一个分层的JavaSE/JavaEE full-stack（一站式）轻量级开源框架，为开发Java应用程序提供全面的基础架构支持。Spring负责基础架构，因此Java开发者可以专注于应用程序的开发。</p>\r\n<p>Spring最根本的使命是<strong>解决企业级应用开发的复杂性，即简化Java开发</strong>。</p>\r\n<p>Spring可以做很多事情，它为企业级开发提供给了丰富的功能，但是这些功能的底层都依赖于它的两个核心特性，也就是<strong>依赖注入（dependency injection，DI）<strong>和</strong>面向切面编程（aspect-oriented programming，AOP）</strong>。</p>\r\n<p>为了降低Java开发的复杂性，Spring采取了以下4种关键策略</p>\r\n<ul><li>基于POJO的轻量级和最小侵入性编程；</li><li>通过依赖注入和面向接口实现松耦合；</li><li>基于切面和惯例进行声明式编程；</li><li>通过切面和模板减少样板式代码。</li></ul>\r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"Spring_58\"></a>Spring框架的设计目标，设计理念，和核心是什么</h3>\r\n<p><strong>Spring设计目标</strong>：Spring为开发者提供一个一站式轻量级应用开发平台；</p>\r\n<p><strong>Spring设计理念</strong>：在JavaEE开发中，支持POJO和JavaBean开发方式，使应用面向接口开发，充分支持OO（面向对象）设计方法；Spring通过IoC容器实现对象耦合关系的管理，并实现依赖反转，将对象之间的依赖关系交给IoC容器，实现解耦；</p>\r\n<p><strong>Spring框架的核心</strong>：IoC容器和AOP模块。通过IoC容器管理POJO对象以及他们之间的耦合关系；通过AOP以动态非侵入的方式增强服务。</p>\r\n<p>IoC让相互协作的组件保持松散的耦合，而AOP编程允许你把遍布于应用各层的功能分离出来形成可重用的功能组件。</p>\r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"Spring_70\"></a>Spring的优缺点是什么？</h3>\r\n<p>优点</p>\r\n<ul><li> <p>方便解耦，简化开发</p> <p>Spring就是一个大工厂，可以将所有对象的创建和依赖关系的维护，交给Spring管理。</p> </li><li> <p>AOP编程的支持</p> <p>Spring提供面向切面编程，可以方便的实现对程序进行权限拦截、运行监控等功能。</p> </li><li> <p>声明式事务的支持</p> <p>只需要通过配置就可以完成对事务的管理，而无需手动编程。</p> </li><li> <p>方便程序的测试</p> <p>Spring对Junit4支持，可以通过注解方便的测试Spring程序。</p> </li><li> <p>方便集成各种优秀框架</p> <p>Spring不排斥各种优秀的开源框架，其内部提供了对各种优秀框架的直接支持（如：Struts、Hibernate、MyBatis等）。</p> </li><li> <p>降低JavaEE API的使用难度</p> <p>Spring对JavaEE开发中非常难用的一些API（JDBC、JavaMail、远程调用等），都提供了封装，使这些API应用难度大大降低。</p> </li></ul>\r\n<p>缺点</p>\r\n<ul><li>Spring明明一个很轻量级的框架，却给人感觉大而全</li><li>Spring依赖反射，反射影响性能</li><li>使用门槛升高，入门Spring需要较长时间</li></ul>\r\n<h3><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"Spring_108\"></a>Spring有哪些应用场景</h3>\r\n<p><strong>应用场景</strong>：JavaEE企业应用开发，包括SSH、SSM等</p>\r\n<p><strong>Spring价值</strong>：</p>\r\n<ul><li>Spring是非侵入式的框架，目标是使应用程序代码对框架依赖最小化；</li><li>Spring提供一个一致的编程模型，使应用直接使用POJO开发，与运行环境隔离开来；</li><li>Spring推动应用设计风格向面向对象和面向接口开发转变，提高了代码的重用性和可测试性；</li></ul>\r\n<h3><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"Spring_120\"></a>Spring由哪些模块组成？</h3>\r\n<p>Spring 总共大约有 20 个模块， 由 1300 多个不同的文件构成。 而这些组件被分别整合在<code>核心容器（Core Container）</code> 、 <code>AOP（Aspect Oriented Programming）和设备支持（Instrmentation）</code> 、<code>数据访问与集成（Data Access/Integeration）</code> 、 <code>Web</code>、 <code>消息（Messaging）</code> 、 <code>Test</code>等 6 个模块中。 以下是 Spring 5 的模块结构图：</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/2019102923475419.png\" alt=\"在这里插入图片描述\"></p>\r\n<ul><li>spring core：提供了框架的基本组成部分，包括控制反转（Inversion of Control，IOC）和依赖注入（Dependency Injection，DI）功能。</li><li>spring beans：提供了BeanFactory，是工厂模式的一个经典实现，Spring将管理对象称为Bean。</li><li>spring context：构建于 core 封装包基础上的 context 封装包，提供了一种框架式的对象访问方法。</li><li>spring jdbc：提供了一个JDBC的抽象层，消除了烦琐的JDBC编码和数据库厂商特有的错误代码解析， 用于简化JDBC。</li><li>spring aop：提供了面向切面的编程实现，让你可以自定义拦截器、切点等。</li><li>spring Web：提供了针对 Web 开发的集成特性，例如文件上传，利用 servlet listeners 进行 ioc 容器初始化和针对 Web 的 ApplicationContext。</li><li>spring test：主要为测试提供支持的，支持使用JUnit或TestNG对Spring组件进行单元测试和集成测试。</li></ul>\r\n<h3><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"Spring__136\"></a>Spring 框架中都用到了哪些设计模式？</h3>\r\n<ol><li>工厂模式：BeanFactory就是简单工厂模式的体现，用来创建对象的实例；</li><li>单例模式：Bean默认为单例模式。</li><li>代理模式：Spring的AOP功能用到了JDK的动态代理和CGLIB字节码生成技术；</li><li>模板方法：用来解决代码重复的问题。比如. RestTemplate, JmsTemplate, JpaTemplate。</li><li>观察者模式：定义对象键一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都会得到通知被制动更新，如Spring中listener的实现–ApplicationListener。</li></ol>\r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"spring_context__146\"></a>详细讲解一下核心容器（spring context应用上下文) 模块</h3>\r\n<p>这是基本的Spring模块，提供spring 框架的基础功能，BeanFactory 是 任何以spring为基础的应用的核心。Spring 框架建立在此模块之上，它使Spring成为一个容器。</p>\r\n<p>Bean 工厂是工厂模式的一个实现，提供了控制反转功能，用来把应用的配置和依赖从真正的应用代码中分离。最常用的就是org.springframework.beans.factory.xml.XmlBeanFactory ，它根据XML文件中的定义加载beans。该容器从XML 文件读取配置元数据并用它去创建一个完全配置的系统或应用。</p>\r\n<h3><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"Spring_154\"></a>Spring框架中有哪些不同类型的事件</h3>\r\n<p>Spring 提供了以下5种标准的事件：</p>\r\n<ol><li> <p>上下文更新事件（ContextRefreshedEvent）：在调用ConfigurableApplicationContext 接口中的refresh()方法时被触发。</p> </li><li> <p>上下文开始事件（ContextStartedEvent）：当容器调用ConfigurableApplicationContext的Start()方法开始/重新开始容器时触发该事件。</p> </li><li> <p>上下文停止事件（ContextStoppedEvent）：当容器调用ConfigurableApplicationContext的Stop()方法停止容器时触发该事件。</p> </li><li> <p>上下文关闭事件（ContextClosedEvent）：当ApplicationContext被关闭时触发该事件。容器被关闭时，其管理的所有单例Bean都被销毁。</p> </li><li> <p>请求处理事件（RequestHandledEvent）：在Web应用中，当一个http请求（request）结束触发该事件。如果一个bean实现了ApplicationListener接口，当一个ApplicationEvent 被发布以后，bean会自动被通知。</p> </li></ol>\r\n<h3><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"Spring__171\"></a>Spring 应用程序有哪些不同组件？</h3>\r\n<p>Spring 应用一般有以下组件：</p>\r\n<ul><li>接口 - 定义功能。</li><li>Bean 类 - 它包含属性，setter 和 getter 方法，函数等。</li><li>Bean 配置文件 - 包含类的信息以及如何配置它们。</li><li>Spring 面向切面编程（AOP） - 提供面向切面编程的功能。</li><li>用户程序 - 它使用接口。</li></ul>\r\n<h3><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"_Spring__183\"></a>使用 Spring 有哪些方式？</h3>\r\n<p>使用 Spring 有以下方式：</p>\r\n<ul><li>作为一个成熟的 Spring Web 应用程序。</li><li>作为第三方 Web 框架，使用 Spring Frameworks 中间层。</li><li>作为企业级 Java Bean，它可以包装现有的 POJO（Plain Old Java Objects）。</li><li>用于远程使用。</li></ul>\r\n<h2><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"SpringIOC13_196\"></a>Spring控制反转(IOC)（13）</h2>\r\n<h3><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"Spring_IOC__198\"></a>什么是Spring IOC 容器？</h3>\r\n<p>控制反转即IoC (Inversion of Control)，它把传统上由程序代码直接操控的对象的调用权交给容器，通过容器来实现对象组件的装配和管理。所谓的“控制反转”概念就是对组件对象控制权的转移，从程序代码本身转移到了外部容器。</p>\r\n<p>Spring IOC 负责创建对象，管理对象（通过依赖注入（DI），装配对象，配置对象，并且管理这些对象的整个生命周期。</p>\r\n<h3><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"IoC_206\"></a>控制反转(IoC)有什么作用</h3>\r\n<ul><li> <p>管理对象的创建和依赖关系的维护。对象的创建并不是一件简单的事，在对象关系比较复杂时，如果依赖关系需要程序猿来维护的话，那是相当头疼的</p> </li><li> <p>解耦，由容器去维护具体的对象</p> </li><li> <p>托管了类的产生过程，比如我们需要在类的产生过程中做一些处理，最直接的例子就是代理，如果有容器程序可以把这部分处理交给容器，应用程序则无需去关心类是如何完成代理的</p> </li></ul>\r\n<h3><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"IOC_215\"></a>IOC的优点是什么？</h3>\r\n<ul><li>IOC 或 依赖注入把应用的代码量降到最低。</li><li>它使应用容易测试，单元测试不再需要单例和JNDI查找机制。</li><li>最小的代价和最小的侵入性使松散耦合得以实现。</li><li>IOC容器支持加载服务时的饿汉式初始化和懒加载。</li></ul>\r\n<h3><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"Spring_IoC__224\"></a>Spring IoC 的实现机制</h3>\r\n<p>Spring 中的 IoC 的实现原理就是工厂模式加反射机制。</p>\r\n<p>示例：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Fruit</span> <span class=\"token punctuation\">{<!-- --></span>\r\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Apple</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Fruit</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Apple\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Orange</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Fruit</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Orange\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Factory</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> Fruit <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span>String ClassName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        Fruit f<span class=\"token operator\">=</span>null<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            f<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>Fruit<span class=\"token punctuation\">)</span>Class<span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span>ClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">return</span> f<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Client</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        Fruit f<span class=\"token operator\">=</span>Factory<span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"io.github.dunwu.spring.Apple\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>f<span class=\"token operator\">!=</span>null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n            f<span class=\"token punctuation\">.</span><span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li></ul></pre>\r\n<h3><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"Spring__IoC_271\"></a>Spring 的 IoC支持哪些功能</h3>\r\n<p>Spring 的 IoC 设计支持以下功能：</p>\r\n<ul><li>依赖注入</li><li>依赖检查</li><li>自动装配</li><li>支持集合</li><li>指定初始化方法和销毁方法</li><li>支持回调某些方法（但是需要实现 Spring 接口，略有侵入）</li></ul>\r\n<p>其中，最重要的就是依赖注入，从 XML 的配置上说，即 ref 标签。对应 Spring RuntimeBeanReference 对象。</p>\r\n<p>对于 IoC 来说，最重要的就是容器。容器管理着 Bean 的生命周期，控制着 Bean 的依赖注入。</p>\r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"BeanFactory__ApplicationContext_288\"></a>BeanFactory 和 ApplicationContext有什么区别？</h3>\r\n<p>BeanFactory和ApplicationContext是Spring的两大核心接口，都可以当做Spring的容器。其中ApplicationContext是BeanFactory的子接口。</p>\r\n<p>依赖关系</p>\r\n<p>BeanFactory：是Spring里面最底层的接口，包含了各种Bean的定义，读取bean配置文档，管理bean的加载、实例化，控制bean的生命周期，维护bean之间的依赖关系。</p>\r\n<p>ApplicationContext接口作为BeanFactory的派生，除了提供BeanFactory所具有的功能外，还提供了更完整的框架功能：</p>\r\n<ul><li> <p>继承MessageSource，因此支持国际化。</p> </li><li> <p>统一的资源文件访问方式。</p> </li><li> <p>提供在监听器中注册bean的事件。</p> </li><li> <p>同时加载多个配置文件。</p> </li><li> <p>载入多个（有继承关系）上下文 ，使得每一个上下文都专注于一个特定的层次，比如应用的web层。</p> </li></ul>\r\n<p>加载方式</p>\r\n<p>BeanFactroy采用的是延迟加载形式来注入Bean的，即只有在使用到某个Bean时(调用getBean())，才对该Bean进行加载实例化。这样，我们就不能发现一些存在的Spring的配置问题。如果Bean的某一个属性没有注入，BeanFacotry加载后，直至第一次使用调用getBean方法才会抛出异常。</p>\r\n<p>ApplicationContext，它是在容器启动时，一次性创建了所有的Bean。这样，在容器启动时，我们就可以发现Spring中存在的配置错误，这样有利于检查所依赖属性是否注入。 ApplicationContext启动后预载入所有的单实例Bean，通过预载入单实例bean ,确保当你需要的时候，你就不用等待，因为它们已经创建好了。</p>\r\n<p>相对于基本的BeanFactory，ApplicationContext 唯一的不足是占用内存空间。当应用程序配置Bean较多时，程序启动较慢。</p>\r\n<p>创建方式</p>\r\n<p>BeanFactory通常以编程的方式被创建，ApplicationContext还能以声明的方式创建，如使用ContextLoader。</p>\r\n<p>注册方式</p>\r\n<p>BeanFactory和ApplicationContext都支持BeanPostProcessor、BeanFactoryPostProcessor的使用，但两者之间的区别是：BeanFactory需要手动注册，而ApplicationContext则是自动注册。</p>\r\n<h3><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"Spring_BeanFactoryApplicationContext_333\"></a>Spring 如何设计容器的，BeanFactory和ApplicationContext的关系详解</h3>\r\n<p>Spring 作者 Rod Johnson 设计了两个接口用以表示容器。</p>\r\n<ul><li>BeanFactory</li><li>ApplicationContext</li></ul>\r\n<p>BeanFactory 简单粗暴，可以理解为就是个 HashMap，Key 是 BeanName，Value 是 Bean 实例。通常只提供注册（put），获取（get）这两个功能。我们可以称之为 <strong>“低级容器”</strong>。</p>\r\n<p>ApplicationContext 可以称之为 <strong>“高级容器”</strong>。因为他比 BeanFactory 多了更多的功能。他继承了多个接口。因此具备了更多的功能。例如资源的获取，支持多种消息（例如 JSP tag 的支持），对 BeanFactory 多了工具级别的支持等待。所以你看他的名字，已经不是 BeanFactory 之类的工厂了，而是 “应用上下文”， 代表着整个大容器的所有功能。该接口定义了一个 refresh 方法，此方法是所有阅读 Spring 源码的人的最熟悉的方法，用于刷新整个容器，即重新加载/刷新所有的 bean。</p>\r\n<p>当然，除了这两个大接口，还有其他的辅助接口，这里就不介绍他们了。</p>\r\n<p>BeanFactory和ApplicationContext的关系</p>\r\n<p>为了更直观的展示 “低级容器” 和 “高级容器” 的关系，这里通过常用的 ClassPathXmlApplicationContext 类来展示整个容器的层级 UML 关系。</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20191105111441363.png\" alt=\"img\"></p>\r\n<p>有点复杂？ 先不要慌，我来解释一下。</p>\r\n<p>最上面的是 BeanFactory，下面的 3 个绿色的，都是功能扩展接口，这里就不展开讲。</p>\r\n<p>看下面的隶属 ApplicationContext 粉红色的 “高级容器”，依赖着 “低级容器”，这里说的是依赖，不是继承哦。他依赖着 “低级容器” 的 getBean 功能。而高级容器有更多的功能：支持不同的信息源头，可以访问文件资源，支持应用事件（Observer 模式）。</p>\r\n<p>通常用户看到的就是 “高级容器”。 但 BeanFactory 也非常够用啦！</p>\r\n<p>左边灰色区域的是 “低级容器”， 只负载加载 Bean，获取 Bean。容器其他的高级功能是没有的。例如上图画的 refresh 刷新 Bean 工厂所有配置，生命周期事件回调等。</p>\r\n<p>小结</p>\r\n<p>说了这么多，不知道你有没有理解Spring IoC？ 这里小结一下：IoC 在 Spring 里，只需要低级容器就可以实现，2 个步骤：</p>\r\n<ol><li> <p>加载配置文件，解析成 BeanDefinition 放在 Map 里。</p> </li><li> <p>调用 getBean 的时候，从 BeanDefinition 所属的 Map 里，拿出 Class 对象进行实例化，同时，如果有依赖关系，将递归调用 getBean 方法 —— 完成依赖注入。</p> </li></ol>\r\n<p>上面就是 Spring 低级容器（BeanFactory）的 IoC。</p>\r\n<p>至于高级容器 ApplicationContext，他包含了低级容器的功能，当他执行 refresh 模板方法的时候，将刷新整个容器的 Bean。同时其作为高级容器，包含了太多的功能。一句话，他不仅仅是 IoC。他支持不同信息源头，支持 BeanFactory 工具类，支持层级容器，支持访问文件资源，支持事件发布通知，支持接口回调等等。</p>\r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"ApplicationContext_381\"></a>ApplicationContext通常的实现是什么？</h3>\r\n<p><strong>FileSystemXmlApplicationContext</strong> ：此容器从一个XML文件中加载beans的定义，XML Bean 配置文件的全路径名必须提供给它的构造函数。</p>\r\n<p><strong>ClassPathXmlApplicationContext</strong>：此容器也从一个XML文件中加载beans的定义，这里，你需要正确设置classpath因为这个容器将在classpath里找bean配置。</p>\r\n<p><strong>WebXmlApplicationContext</strong>：此容器加载一个XML文件，此文件定义了一个WEB应用的所有bean。</p>\r\n<h3><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"Spring_391\"></a>什么是Spring的依赖注入？</h3>\r\n<p>控制反转IoC是一个很大的概念，可以用不同的方式来实现。其主要实现方式有两种：依赖注入和依赖查找</p>\r\n<p>依赖注入：相对于IoC而言，依赖注入(DI)更加准确地描述了IoC的设计理念。所谓依赖注入（Dependency Injection），即组件之间的依赖关系由容器在应用系统运行期来决定，也就是由容器动态地将某种依赖关系的目标对象实例注入到应用系统中的各个关联的组件之中。组件不做定位查询，只提供普通的Java方法让容器去决定依赖关系。</p>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"_399\"></a>依赖注入的基本原则</h3>\r\n<p>依赖注入的基本原则是：应用组件不应该负责查找资源或者其他依赖的协作对象。配置对象的工作应该由IoC容器负责，“查找资源”的逻辑应该从应用组件的代码中抽取出来，交给IoC容器负责。容器全权负责组件的装配，它会把符合依赖关系的对象通过属性（JavaBean中的setter）或者是构造器传递给需要的对象。</p>\r\n<h3><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"_405\"></a>依赖注入有什么优势</h3>\r\n<p>依赖注入之所以更流行是因为它是一种更可取的方式：让容器全权负责依赖查询，受管组件只需要暴露JavaBean的setter方法或者带参数的构造器或者接口，使容器可以在初始化时组装对象的依赖关系。其与依赖查找方式相比，主要优势为：</p>\r\n<ul><li>查找定位操作与应用代码完全无关。</li><li>不依赖于容器的API，可以很容易地在任何容器以外使用应用对象。</li><li>不需要特殊的接口，绝大多数对象可以做到完全不必依赖容器。</li></ul>\r\n<h3><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"_415\"></a>有哪些不同类型的依赖注入实现方式？</h3>\r\n<p>依赖注入是时下最流行的IoC实现方式，依赖注入分为接口注入（Interface Injection），Setter方法注入（Setter Injection）和构造器注入（Constructor Injection）三种方式。其中接口注入由于在灵活性和易用性比较差，现在从Spring4开始已被废弃。</p>\r\n<p><strong>构造器依赖注入</strong>：构造器依赖注入通过容器触发一个类的构造器来实现的，该类有一系列参数，每个参数代表一个对其他类的依赖。</p>\r\n<p><strong>Setter方法注入</strong>：Setter方法注入是容器通过调用无参构造器或无参static工厂 方法实例化bean之后，调用该bean的setter方法，即实现了基于setter的依赖注入。</p>\r\n<h3><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"_Setter_425\"></a>构造器依赖注入和 Setter方法注入的区别</h3>\r\n<div class=\"table-box\"><table><thead><tr><th><strong>构造函数注入</strong></th><th><strong>setter</strong> <strong>注入</strong></th></tr></thead><tbody><tr><td>没有部分注入</td><td>有部分注入</td></tr><tr><td>不会覆盖 setter 属性</td><td>会覆盖 setter 属性</td></tr><tr><td>任意修改都会创建一个新实例</td><td>任意修改不会创建一个新实例</td></tr><tr><td>适用于设置很多属性</td><td>适用于设置少量属性</td></tr></tbody></table></div>\r\n<p>两种依赖方式都可以使用，构造器注入和Setter方法注入。最好的解决方案是用构造器参数实现强制依赖，setter方法实现可选依赖。</p>\r\n<h2><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"Spring_Beans19_440\"></a>Spring Beans（19）</h2>\r\n<h3><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"Spring_beans_442\"></a>什么是Spring beans？</h3>\r\n<p>Spring beans 是那些形成Spring应用的主干的java对象。它们被Spring IOC容器初始化，装配，和管理。这些beans通过容器中配置的元数据创建。比如，以XML文件中 的形式定义。</p>\r\n<h3><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"_Spring_Bean___448\"></a>一个 Spring Bean 定义 包含什么？</h3>\r\n<p>一个Spring Bean 的定义包含容器必知的所有配置元数据，包括如何创建一个bean，它的生命周期详情及它的依赖。</p>\r\n<h3><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"Spring_Spring_454\"></a>如何给Spring 容器提供配置元数据？Spring有几种配置方式</h3>\r\n<p>这里有三种重要的方法给Spring 容器提供配置元数据。</p>\r\n<ul><li>XML配置文件。</li><li>基于注解的配置。</li><li>基于java的配置。</li></ul>\r\n<h3><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"Spring_464\"></a>Spring配置文件包含了哪些信息</h3>\r\n<p>Spring配置文件是个XML 文件，这个文件包含了类信息，描述了如何配置它们，以及如何相互调用。</p>\r\n<h3><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"Springxmlbean_470\"></a>Spring基于xml注入bean的几种方式</h3>\r\n<ol><li> <p>Set方法注入；</p> </li><li> <p>构造器注入：①通过index设置参数的位置；②通过type设置参数类型；</p> </li><li> <p>静态工厂注入；</p> </li><li> <p>实例工厂；</p> </li></ol>\r\n<h3><a name=\"t32\"></a><a name=\"t32\"></a><a id=\"_483\"></a>你怎样定义类的作用域？</h3>\r\n<p>当定义一个 在Spring里，我们还能给这个bean声明一个作用域。它可以通过bean 定义中的scope属性来定义。如，当Spring要在需要的时候每次生产一个新的bean实例，bean的scope属性被指定为prototype。另一方面，一个bean每次使用的时候必须返回同一个实例，这个bean的scope 属性 必须设为 singleton。</p>\r\n<h3><a name=\"t33\"></a><a name=\"t33\"></a><a id=\"Springbean_489\"></a>解释Spring支持的几种bean的作用域</h3>\r\n<p>Spring框架支持以下五种bean的作用域：</p>\r\n<ul><li><strong>singleton :</strong> bean在每个Spring ioc 容器中只有一个实例。</li><li><strong>prototype</strong>：一个bean的定义可以有多个实例。</li><li><strong>request</strong>：每次http请求都会创建一个bean，该作用域仅在基于web的Spring ApplicationContext情形下有效。</li><li><strong>session</strong>：在一个HTTP Session中，一个bean定义对应一个实例。该作用域仅在基于web的Spring ApplicationContext情形下有效。</li><li><strong>global-session</strong>：在一个全局的HTTP Session中，一个bean定义对应一个实例。该作用域仅在基于web的Spring ApplicationContext情形下有效。</li></ul>\r\n<p><strong>注意：</strong> 缺省的Spring bean 的作用域是Singleton。使用 prototype 作用域需要慎重的思考，因为频繁创建和销毁 bean 会带来很大的性能开销。</p>\r\n<h3><a name=\"t34\"></a><a name=\"t34\"></a><a id=\"Springbean_503\"></a>Spring框架中的单例bean是线程安全的吗？</h3>\r\n<p>不是，Spring框架中的单例bean不是线程安全的。</p>\r\n<p>spring 中的 bean 默认是单例模式，spring 框架并没有对单例 bean 进行多线程的封装处理。</p>\r\n<p>实际上大部分时候 spring bean 无状态的（比如 dao 类），所有某种程度上来说 bean 也是安全的，但如果 bean 有状态的话（比如 view model 对象），那就要开发者自己去保证线程安全了，最简单的就是改变 bean 的作用域，把“singleton”变更为“prototype”，这样请求 bean 相当于 new Bean()了，所以就可以保证线程安全了。</p>\r\n<ul><li>有状态就是有数据存储功能。</li><li>无状态就是不会保存数据。</li></ul>\r\n<h3><a name=\"t35\"></a><a name=\"t35\"></a><a id=\"Spring_516\"></a>Spring如何处理线程并发问题？</h3>\r\n<p>在一般情况下，只有无状态的Bean才可以在多线程环境下共享，在Spring中，绝大部分Bean都可以声明为singleton作用域，因为Spring对一些Bean中非线程安全状态采用ThreadLocal进行处理，解决线程安全问题。</p>\r\n<p>ThreadLocal和线程同步机制都是为了解决多线程中相同变量的访问冲突问题。同步机制采用了“时间换空间”的方式，仅提供一份变量，不同的线程在访问前需要获取锁，没获得锁的线程则需要排队。而ThreadLocal采用了“空间换时间”的方式。</p>\r\n<p>ThreadLocal会为每一个线程提供一个独立的变量副本，从而隔离了多个线程对数据的访问冲突。因为每一个线程都拥有自己的变量副本，从而也就没有必要对该变量进行同步了。ThreadLocal提供了线程安全的共享对象，在编写多线程代码时，可以把不安全的变量封装进ThreadLocal。</p>\r\n<h3><a name=\"t36\"></a><a name=\"t36\"></a><a id=\"Springbean_526\"></a>解释Spring框架中bean的生命周期</h3>\r\n<p>在传统的Java应用中，bean的生命周期很简单。使用Java关键字new进行bean实例化，然后该bean就可以使用了。一旦该bean不再被使用，则由Java自动进行垃圾回收。相比之下，Spring容器中的bean的生命周期就显得相对复杂多了。正确理解Spring bean的生命周期非常重要，因为你或许要利用Spring提供的扩展点来自定义bean的创建过程。下图展示了bean装载到Spring应用上下文中的一个典型的生命周期过程。</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/201911012343410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\" alt=\"\"></p>\r\n<p>bean在Spring容器中从创建到销毁经历了若干阶段，每一阶段都可以针对Spring如何管理bean进行个性化定制。</p>\r\n<p>正如你所见，在bean准备就绪之前，bean工厂执行了若干启动步骤。</p>\r\n<p>我们对上图进行详细描述：</p>\r\n<p>Spring对bean进行实例化；</p>\r\n<p>Spring将值和bean的引用注入到bean对应的属性中；</p>\r\n<p>如果bean实现了BeanNameAware接口，Spring将bean的ID传递给setBean-Name()方法；</p>\r\n<p>如果bean实现了BeanFactoryAware接口，Spring将调用setBeanFactory()方法，将BeanFactory容器实例传入；</p>\r\n<p>如果bean实现了ApplicationContextAware接口，Spring将调用setApplicationContext()方法，将bean所在的应用上下文的引用传入进来；</p>\r\n<p>如果bean实现了BeanPostProcessor接口，Spring将调用它们的post-ProcessBeforeInitialization()方法；</p>\r\n<p>如果bean实现了InitializingBean接口，Spring将调用它们的after-PropertiesSet()方法。类似地，如果bean使用initmethod声明了初始化方法，该方法也会被调用；</p>\r\n<p>如果bean实现了BeanPostProcessor接口，Spring将调用它们的post-ProcessAfterInitialization()方法；</p>\r\n<p>此时，bean已经准备就绪，可以被应用程序使用了，它们将一直驻留在应用上下文中，直到该应用上下文被销毁；</p>\r\n<p>如果bean实现了DisposableBean接口，Spring将调用它的destroy()接口方法。同样，如果bean使用destroy-method声明了销毁方法，该方法也会被调用。</p>\r\n<p>现在你已经了解了如何创建和加载一个Spring容器。但是一个空的容器并没有太大的价值，在你把东西放进去之前，它里面什么都没有。为了从Spring的DI(依赖注入)中受益，我们必须将应用对象装配进Spring容器中。</p>\r\n<h3><a name=\"t37\"></a><a name=\"t37\"></a><a id=\"bean__562\"></a>哪些是重要的bean生命周期方法？ 你能重载它们吗？</h3>\r\n<p>有两个重要的bean 生命周期方法，第一个是setup ， 它是在容器加载bean的时候被调用。第二个方法是 teardown 它是在容器卸载类的时候被调用。</p>\r\n<p>bean 标签有两个重要的属性（init-method和destroy-method）。用它们你可以自己定制初始化和注销方法。它们也有相应的注解（@PostConstruct和@PreDestroy）。</p>\r\n<h3><a name=\"t38\"></a><a name=\"t38\"></a><a id=\"SpringbeanSpring_inner_beans_570\"></a>什么是Spring的内部bean？什么是Spring inner beans？</h3>\r\n<p>在Spring框架中，当一个bean仅被用作另一个bean的属性时，它能被声明为一个内部bean。内部bean可以用setter注入“属性”和构造方法注入“构造参数”的方式来实现，内部bean通常是匿名的，它们的Scope一般是prototype。</p>\r\n<h3><a name=\"t39\"></a><a name=\"t39\"></a><a id=\"_Springjava_576\"></a>在 Spring中如何注入一个java集合？</h3>\r\n<p>Spring提供以下几种集合的配置元素：</p>\r\n<p>类型用于注入一列值，允许有相同的值。</p>\r\n<p> 类型用于注入一组值，不允许有相同的值。</p>\r\n<p><map> 类型用于注入一组键值对，键和值都可以为任意类型。</map></p>\r\n<p>类型用于注入一组键值对，键和值都只能为String类型。</p>\r\n<h3><a name=\"t40\"></a><a name=\"t40\"></a><a id=\"bean_590\"></a>什么是bean装配？</h3>\r\n<p>装配，或bean 装配是指在Spring 容器中把bean组装到一起，前提是容器需要知道bean的依赖关系，如何通过依赖注入来把它们装配到一起。</p>\r\n<h3><a name=\"t41\"></a><a name=\"t41\"></a><a id=\"bean_596\"></a>什么是bean的自动装配？</h3>\r\n<p>在Spring框架中，在配置文件中设定bean的依赖关系是一个很好的机制，Spring 容器能够自动装配相互合作的bean，这意味着容器不需要和配置，能通过Bean工厂自动处理bean之间的协作。这意味着 Spring可以通过向Bean Factory中注入的方式自动搞定bean之间的依赖关系。自动装配可以设置在每个bean上，也可以设定在特定的bean上。</p>\r\n<h3><a name=\"t42\"></a><a name=\"t42\"></a><a id=\"spring__bean__602\"></a>解释不同方式的自动装配，spring 自动装配 bean 有哪些方式？</h3>\r\n<p>在spring中，对象无需自己查找或创建与其关联的其他对象，由容器负责把需要相互协作的对象引用赋予各个对象，使用autowire来配置自动装载模式。</p>\r\n<p>在Spring框架xml配置中共有5种自动装配：</p>\r\n<ul><li> <p>no：默认的方式是不进行自动装配的，通过手工设置ref属性来进行装配bean。</p> </li><li> <p>byName：通过bean的名称进行自动装配，如果一个bean的 property 与另一bean 的name 相同，就进行自动装配。</p> </li><li> <p>byType：通过参数的数据类型进行自动装配。</p> </li><li> <p>constructor：利用构造函数进行装配，并且构造函数的参数通过byType进行装配。</p> </li><li> <p>autodetect：自动探测，如果有构造方法，通过 construct的方式自动装配，否则使用 byType的方式自动装配。</p> </li></ul>\r\n<h3><a name=\"t43\"></a><a name=\"t43\"></a><a id=\"Autowired_620\"></a>使用@Autowired注解自动装配的过程是怎样的？</h3>\r\n<p>使用@Autowired注解来自动装配指定的bean。在使用@Autowired注解之前需要在Spring配置文件进行配置，&lt;context:annotation-config /&gt;。</p>\r\n<p>在启动spring IoC时，容器自动装载了一个AutowiredAnnotationBeanPostProcessor后置处理器，当容器扫描到@Autowied、@Resource或@Inject时，就会在IoC容器自动查找需要的bean，并装配给该对象的属性。在使用@Autowired时，首先在容器中查询对应类型的bean：</p>\r\n<ul><li> <p>如果查询结果刚好为一个，就将该bean装配给@Autowired指定的数据；</p> </li><li> <p>如果查询的结果不止一个，那么@Autowired会根据名称来查找；</p> </li><li> <p>如果上述查找的结果为空，那么会抛出异常。解决方法时，使用required=false。</p> </li></ul>\r\n<h3><a name=\"t44\"></a><a name=\"t44\"></a><a id=\"_635\"></a>自动装配有哪些局限性？</h3>\r\n<p>自动装配的局限性是：</p>\r\n<p><strong>重写</strong>：你仍需用 和 配置来定义依赖，意味着总要重写自动装配。</p>\r\n<p><strong>基本数据类型</strong>：你不能自动装配简单的属性，如基本数据类型，String字符串，和类。</p>\r\n<p><strong>模糊特性</strong>：自动装配不如显式装配精确，如果有可能，建议使用显式装配。</p>\r\n<h3><a name=\"t45\"></a><a name=\"t45\"></a><a id=\"Springnull__647\"></a>你可以在Spring中注入一个null 和一个空字符串吗？</h3>\r\n<p>可以。</p>\r\n<h2><a name=\"t46\"></a><a name=\"t46\"></a><a id=\"Spring8_655\"></a>Spring注解（8）</h2>\r\n<h3><a name=\"t47\"></a><a name=\"t47\"></a><a id=\"JavaSpring__657\"></a>什么是基于Java的Spring注解配置? 给一些注解的例子</h3>\r\n<p>基于Java的配置，允许你在少量的Java注解的帮助下，进行你的大部分Spring配置而非通过XML文件。</p>\r\n<p>以@Configuration 注解为例，它用来标记类可以当做一个bean的定义，被Spring IOC容器使用。</p>\r\n<p>另一个例子是@Bean注解，它表示此方法将要返回一个对象，作为一个bean注册进Spring应用上下文。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token annotation punctuation\">@Configuration</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StudentConfig</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token annotation punctuation\">@Bean</span>\r\n    <span class=\"token keyword\">public</span> StudentBean <span class=\"token function\">myStudent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StudentBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h3><a name=\"t48\"></a><a name=\"t48\"></a><a id=\"_677\"></a>怎样开启注解装配？</h3>\r\n<p>注解装配在默认情况下是不开启的，为了使用注解装配，我们必须在Spring配置文件中配置 <code>&lt;context:annotation-config/&gt;</code>元素。</p>\r\n<h3><a name=\"t49\"></a><a name=\"t49\"></a><a id=\"Component_Controller_Repository_Service__683\"></a>@Component, @Controller, @Repository, @Service 有何区别？</h3>\r\n<p>@Component：这将 java 类标记为 bean。它是任何 Spring 管理组件的通用构造型。spring 的组件扫描机制现在可以将其拾取并将其拉入应用程序环境中。</p>\r\n<p>@Controller：这将一个类标记为 Spring Web MVC 控制器。标有它的 Bean 会自动导入到 IoC 容器中。</p>\r\n<p>@Service：此注解是组件注解的特化。它不会对 @Component 注解提供任何其他行为。您可以在服务层类中使用 @Service 而不是 @Component，因为它以更好的方式指定了意图。</p>\r\n<p>@Repository：这个注解是具有类似用途和功能的 @Component 注解的特化。它为 DAO 提供了额外的好处。它将 DAO 导入 IoC 容器，并使未经检查的异常有资格转换为 Spring DataAccessException。</p>\r\n<h3><a name=\"t50\"></a><a name=\"t50\"></a><a id=\"Required___695\"></a>@Required 注解有什么作用</h3>\r\n<p>这个注解表明bean的属性必须在配置的时候设置，通过一个bean定义的显式的属性值或通过自动装配，若@Required注解的bean属性未被设置，容器将抛出BeanInitializationException。示例：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">private</span> String name<span class=\"token punctuation\">;</span>\r\n    <span class=\"token annotation punctuation\">@Required</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>String name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">public</span> string <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<h3><a name=\"t51\"></a><a name=\"t51\"></a><a id=\"Autowired__714\"></a>@Autowired 注解有什么作用</h3>\r\n<p>@Autowired默认是按照类型装配注入的，默认情况下它要求依赖对象必须存在（可以设置它required属性为false）。@Autowired 注解提供了更细粒度的控制，包括在何处以及如何完成自动装配。它的用法和@Required一样，修饰setter方法、构造器、属性或者具有任意名称和/或多个参数的PN方法。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">private</span> String name<span class=\"token punctuation\">;</span>\r\n    <span class=\"token annotation punctuation\">@Autowired</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>String name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">public</span> string <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<h3><a name=\"t52\"></a><a name=\"t52\"></a><a id=\"AutowiredResource_733\"></a>@Autowired和@Resource之间的区别</h3>\r\n<p>@Autowired可用于：构造函数、成员变量、Setter方法</p>\r\n<p>@Autowired和@Resource之间的区别</p>\r\n<ul><li> <p>@Autowired默认是按照类型装配注入的，默认情况下它要求依赖对象必须存在（可以设置它required属性为false）。</p> </li><li> <p>@Resource默认是按照名称来装配注入的，只有当找不到与名称匹配的bean才会按照类型来装配注入。</p> </li></ul>\r\n<h3><a name=\"t53\"></a><a name=\"t53\"></a><a id=\"Qualifier__745\"></a>@Qualifier 注解有什么作用</h3>\r\n<p>当您创建多个相同类型的 bean 并希望仅使用属性装配其中一个 bean 时，您可以使用@Qualifier 注解和 @Autowired 通过指定应该装配哪个确切的 bean 来消除歧义。</p>\r\n<h3><a name=\"t54\"></a><a name=\"t54\"></a><a id=\"RequestMapping__751\"></a>@RequestMapping 注解有什么用？</h3>\r\n<p>@RequestMapping 注解用于将特定 HTTP 请求方法映射到将处理相应请求的控制器中的特定类/方法。此注释可应用于两个级别：</p>\r\n<ul><li>类级别：映射请求的 URL</li><li>方法级别：映射 URL 以及 HTTP 请求方法</li></ul>\r\n<h2><a name=\"t55\"></a><a name=\"t55\"></a><a id=\"Spring14_762\"></a>Spring数据访问（14）</h2>\r\n<h3><a name=\"t56\"></a><a name=\"t56\"></a><a id=\"_764\"></a>解释对象/关系映射集成模块</h3>\r\n<p>Spring 通过提供ORM模块，支持我们在直接JDBC之上使用一个对象/关系映射映射(ORM)工具，Spring 支持集成主流的ORM框架，如Hiberate，JDO和 iBATIS，JPA，TopLink，JDO，OJB 。Spring的事务管理同样支持以上所有ORM框架及JDBC。</p>\r\n<h3><a name=\"t57\"></a><a name=\"t57\"></a><a id=\"SpringJDBC_770\"></a>在Spring框架中如何更有效地使用JDBC？</h3>\r\n<p>使用Spring JDBC 框架，资源管理和错误处理的代价都会被减轻。所以开发者只需写statements 和 queries从数据存取数据，JDBC也可以在Spring框架提供的模板类的帮助下更有效地被使用，这个模板叫JdbcTemplate</p>\r\n<h3><a name=\"t58\"></a><a name=\"t58\"></a><a id=\"JDBCDAO_776\"></a>解释JDBC抽象和DAO模块</h3>\r\n<p>通过使用JDBC抽象和DAO模块，保证数据库代码的简洁，并能避免数据库资源错误关闭导致的问题，它在各种不同的数据库的错误信息之上，提供了一个统一的异常访问层。它还利用Spring的AOP 模块给Spring应用中的对象提供事务管理服务。</p>\r\n<h3><a name=\"t59\"></a><a name=\"t59\"></a><a id=\"spring_DAO__782\"></a>spring DAO 有什么用？</h3>\r\n<p>Spring DAO（数据访问对象） 使得 JDBC，Hibernate 或 JDO 这样的数据访问技术更容易以一种统一的方式工作。这使得用户容易在持久性技术之间切换。它还允许您在编写代码时，无需考虑捕获每种技术不同的异常。</p>\r\n<h3><a name=\"t60\"></a><a name=\"t60\"></a><a id=\"spring_JDBC_API__788\"></a>spring JDBC API 中存在哪些类？</h3>\r\n<p>JdbcTemplate</p>\r\n<p>SimpleJdbcTemplate</p>\r\n<p>NamedParameterJdbcTemplate</p>\r\n<p>SimpleJdbcInsert</p>\r\n<p>SimpleJdbcCall</p>\r\n<h3><a name=\"t61\"></a><a name=\"t61\"></a><a id=\"JdbcTemplate_802\"></a>JdbcTemplate是什么</h3>\r\n<p>JdbcTemplate 类提供了很多便利的方法解决诸如把数据库数据转变成基本数据类型或对象，执行写好的或可调用的数据库操作语句，提供自定义的数据错误处理。</p>\r\n<h3><a name=\"t62\"></a><a name=\"t62\"></a><a id=\"SpringHibernate_Spring__Hibernate__808\"></a>使用Spring通过什么方式访问Hibernate？使用 Spring 访问 Hibernate 的方法有哪些？</h3>\r\n<p>在Spring中有两种方式访问Hibernate：</p>\r\n<ul><li>使用 Hibernate 模板和回调进行控制反转</li><li>扩展 HibernateDAOSupport 并应用 AOP 拦截器节点</li></ul>\r\n<h3><a name=\"t63\"></a><a name=\"t63\"></a><a id=\"HibernateDaoSupportSpringHibernate_817\"></a>如何通过HibernateDaoSupport将Spring和Hibernate结合起来？</h3>\r\n<p>用Spring的 SessionFactory 调用 LocalSessionFactory。集成过程分三步：</p>\r\n<ul><li>配置the Hibernate SessionFactory</li><li>继承HibernateDaoSupport实现一个DAO</li><li>在AOP支持的事务中装配</li></ul>\r\n<h3><a name=\"t64\"></a><a name=\"t64\"></a><a id=\"Spring_spring__827\"></a>Spring支持的事务管理类型， spring 事务实现方式有哪些？</h3>\r\n<p>Spring支持两种类型的事务管理：</p>\r\n<p><strong>编程式事务管理</strong>：这意味你通过编程的方式管理事务，给你带来极大的灵活性，但是难维护。</p>\r\n<p><strong>声明式事务管理</strong>：这意味着你可以将业务代码和事务管理分离，你只需用注解和XML配置来管理事务。</p>\r\n<h3><a name=\"t65\"></a><a name=\"t65\"></a><a id=\"Spring_837\"></a>Spring事务的实现方式和实现原理</h3>\r\n<p>Spring事务的本质其实就是数据库对事务的支持，没有数据库的事务支持，spring是无法提供事务功能的。真正的数据库层的事务提交和回滚是通过binlog或者redo log实现的。</p>\r\n<h3><a name=\"t66\"></a><a name=\"t66\"></a><a id=\"Spring_843\"></a>说一下Spring的事务传播行为</h3>\r\n<p>spring事务的传播行为说的是，当多个事务同时存在的时候，spring如何处理这些事务的行为。</p>\r\n<blockquote>\r\n<p>① PROPAGATION_REQUIRED：如果当前没有事务，就创建一个新事务，如果当前存在事务，就加入该事务，该设置是最常用的设置。</p>\r\n<p>② PROPAGATION_SUPPORTS：支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就以非事务执行。</p>\r\n<p>③ PROPAGATION_MANDATORY：支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就抛出异常。</p>\r\n<p>④ PROPAGATION_REQUIRES_NEW：创建新事务，无论当前存不存在事务，都创建新事务。</p>\r\n<p>⑤ PROPAGATION_NOT_SUPPORTED：以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。</p>\r\n<p>⑥ PROPAGATION_NEVER：以非事务方式执行，如果当前存在事务，则抛出异常。</p>\r\n<p>⑦ PROPAGATION_NESTED：如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则按REQUIRED属性执行。</p>\r\n</blockquote>\r\n<h3><a name=\"t67\"></a><a name=\"t67\"></a><a id=\"_spring__863\"></a>说一下 spring 的事务隔离？</h3>\r\n<p>spring 有五大隔离级别，默认值为 ISOLATION_DEFAULT（使用数据库的设置），其他四个隔离级别和数据库的隔离级别一致：</p>\r\n<ol><li> <p>ISOLATION_DEFAULT：用底层数据库的设置隔离级别，数据库设置的是什么我就用什么；</p> </li><li> <p>ISOLATION_READ_UNCOMMITTED：未提交读，最低隔离级别、事务未提交前，就可被其他事务读取（会出现幻读、脏读、不可重复读）；</p> </li><li> <p>ISOLATION_READ_COMMITTED：提交读，一个事务提交后才能被其他事务读取到（会造成幻读、不可重复读），SQL server 的默认级别；</p> </li><li> <p>ISOLATION_REPEATABLE_READ：可重复读，保证多次读取同一个数据时，其值都和事务开始时候的内容是一致，禁止读取到别的事务未提交的数据（会造成幻读），MySQL 的默认级别；</p> </li><li> <p>ISOLATION_SERIALIZABLE：序列化，代价最高最可靠的隔离级别，该隔离级别能防止脏读、不可重复读、幻读。</p> </li></ol>\r\n<p><strong>脏读</strong> ：表示一个事务能够读取另一个事务中还未提交的数据。比如，某个事务尝试插入记录 A，此时该事务还未提交，然后另一个事务尝试读取到了记录 A。</p>\r\n<p><strong>不可重复读</strong> ：是指在一个事务内，多次读同一数据。</p>\r\n<p><strong>幻读</strong> ：指同一个事务内多次查询返回的结果集不一样。比如同一个事务 A 第一次查询时候有 n 条记录，但是第二次同等条件下查询却有 n+1 条记录，这就好像产生了幻觉。发生幻读的原因也是另外一个事务新增或者删除或者修改了第一个事务结果集里面的数据，同一个记录的数据内容被修改了，所有数据行的记录就变多或者变少了。</p>\r\n<h3><a name=\"t68\"></a><a name=\"t68\"></a><a id=\"Spring_886\"></a>Spring框架的事务管理有哪些优点？</h3>\r\n<ul><li>为不同的事务API 如 JTA，JDBC，Hibernate，JPA 和JDO，提供一个不变的编程模式。</li><li>为编程式事务管理提供了一套简单的API而不是一些复杂的事务API</li><li>支持声明式事务管理。</li><li>和Spring各种数据访问抽象层很好得集成。</li></ul>\r\n<h3><a name=\"t69\"></a><a name=\"t69\"></a><a id=\"_895\"></a>你更倾向用那种事务管理类型？</h3>\r\n<p>大多数Spring框架的用户选择声明式事务管理，因为它对应用代码的影响最小，因此更符合一个无侵入的轻量级容器的思想。声明式事务管理要优于编程式事务管理，虽然比编程式事务管理（这种方式允许你通过代码控制事务）少了一点灵活性。唯一不足地方是，最细粒度只能作用到方法级别，无法做到像编程式事务那样可以作用到代码块级别。</p>\r\n<h2><a name=\"t70\"></a><a name=\"t70\"></a><a id=\"SpringAOP13_903\"></a>Spring面向切面编程(AOP)（13）</h2>\r\n<h3><a name=\"t71\"></a><a name=\"t71\"></a><a id=\"AOP_905\"></a>什么是AOP</h3>\r\n<p>OOP(Object-Oriented Programming)面向对象编程，允许开发者定义纵向的关系，但并适用于定义横向的关系，导致了大量代码的重复，而不利于各个模块的重用。</p>\r\n<p>AOP(Aspect-Oriented Programming)，一般称为面向切面编程，作为面向对象的一种补充，用于将那些与业务无关，但却对多个对象产生影响的公共行为和逻辑，抽取并封装为一个可重用的模块，这个模块被命名为“切面”（Aspect），减少系统中的重复代码，降低了模块间的耦合度，同时提高了系统的可维护性。可用于权限认证、日志、事务处理等。</p>\r\n<h3><a name=\"t72\"></a><a name=\"t72\"></a><a id=\"Spring_AOP_and_AspectJ_AOP_AOP__913\"></a>Spring AOP and AspectJ AOP 有什么区别？AOP 有哪些实现方式？</h3>\r\n<p>AOP实现的关键在于 代理模式，AOP代理主要分为静态代理和动态代理。静态代理的代表为AspectJ；动态代理则以Spring AOP为代表。</p>\r\n<p>（1）AspectJ是静态代理的增强，所谓静态代理，就是AOP框架会在编译阶段生成AOP代理类，因此也称为编译时增强，他会在编译阶段将AspectJ(切面)织入到Java字节码中，运行的时候就是增强之后的AOP对象。</p>\r\n<p>（2）Spring AOP使用的动态代理，所谓的动态代理就是说AOP框架不会去修改字节码，而是每次运行时在内存中临时为方法生成一个AOP对象，这个AOP对象包含了目标对象的全部方法，并且在特定的切点做了增强处理，并回调原对象的方法。</p>\r\n<h3><a name=\"t73\"></a><a name=\"t73\"></a><a id=\"JDKCGLIB_923\"></a>JDK动态代理和CGLIB动态代理的区别</h3>\r\n<p>Spring AOP中的动态代理主要有两种方式，JDK动态代理和CGLIB动态代理：</p>\r\n<ul><li> <p>JDK动态代理只提供接口的代理，不支持类的代理。核心InvocationHandler接口和Proxy类，InvocationHandler 通过invoke()方法反射来调用目标类中的代码，动态地将横切逻辑和业务编织在一起；接着，Proxy利用 InvocationHandler动态创建一个符合某一接口的的实例, 生成目标类的代理对象。</p> </li><li> <p>如果代理类没有实现 InvocationHandler 接口，那么Spring AOP会选择使用CGLIB来动态代理目标类。CGLIB（Code Generation Library），是一个代码生成的类库，可以在运行时动态的生成指定类的一个子类对象，并覆盖其中特定方法并添加增强代码，从而实现AOP。CGLIB是通过继承的方式做的动态代理，因此如果某个类被标记为final，那么它是无法使用CGLIB做动态代理的。</p> </li></ul>\r\n<p>静态代理与动态代理区别在于生成AOP代理对象的时机不同，相对来说AspectJ的静态代理方式具有更好的性能，但是AspectJ需要特定的编译器进行处理，而Spring AOP则无需特定的编译器处理。</p>\r\n<blockquote>\r\n<p>InvocationHandler 的 invoke(Object proxy,Method method,Object[] args)：proxy是最终生成的代理实例; method 是被代理目标实例的某个具体方法; args 是被代理目标实例某个方法的具体入参, 在方法反射调用时使用。</p>\r\n</blockquote>\r\n<h3><a name=\"t74\"></a><a name=\"t74\"></a><a id=\"_Spring__938\"></a>如何理解 Spring 中的代理？</h3>\r\n<p>将 Advice 应用于目标对象后创建的对象称为代理。在客户端对象的情况下，目标对象和代理对象是相同的。</p>\r\n<p>Advice + Target Object = Proxy</p>\r\n<h3><a name=\"t75\"></a><a name=\"t75\"></a><a id=\"Spring_AOP_946\"></a>解释一下Spring AOP里面的几个名词</h3>\r\n<p>（1）切面（Aspect）：切面是通知和切点的结合。通知和切点共同定义了切面的全部内容。 在Spring AOP中，切面可以使用通用类（基于模式的风格） 或者在普通类中以 @AspectJ 注解来实现。</p>\r\n<p>（2）连接点（Join point）：指方法，在Spring AOP中，一个连接点 总是 代表一个方法的执行。 应用可能有数以千计的时机应用通知。这些时机被称为连接点。连接点是在应用执行过程中能够插入切面的一个点。这个点可以是调用方法时、抛出异常时、甚至修改一个字段时。切面代码可以利用这些点插入到应用的正常流程之中，并添加新的行为。</p>\r\n<p>（3）通知（Advice）：在AOP术语中，切面的工作被称为通知。</p>\r\n<p>（4）切入点（Pointcut）：切点的定义会匹配通知所要织入的一个或多个连接点。我们通常使用明确的类和方法名称，或是利用正则表达式定义所匹配的类和方法名称来指定这些切点。</p>\r\n<p>（5）引入（Introduction）：引入允许我们向现有类添加新方法或属性。</p>\r\n<p>（6）目标对象（Target Object）： 被一个或者多个切面（aspect）所通知（advise）的对象。它通常是一个代理对象。也有人把它叫做 被通知（adviced） 对象。 既然Spring AOP是通过运行时代理实现的，这个对象永远是一个 被代理（proxied） 对象。</p>\r\n<p>（7）织入（Weaving）：织入是把切面应用到目标对象并创建新的代理对象的过程。在目标对象的生命周期里有多少个点可以进行织入：</p>\r\n<ul><li>编译期：切面在目标类编译时被织入。AspectJ的织入编译器是以这种方式织入切面的。</li><li>类加载期：切面在目标类加载到JVM时被织入。需要特殊的类加载器，它可以在目标类被引入应用之前增强该目标类的字节码。AspectJ5的加载时织入就支持以这种方式织入切面。</li><li>运行期：切面在应用运行的某个时刻被织入。一般情况下，在织入切面时，AOP容器会为目标对象动态地创建一个代理对象。SpringAOP就是以这种方式织入切面。</li></ul>\r\n<h3><a name=\"t76\"></a><a name=\"t76\"></a><a id=\"Spring_968\"></a>Spring在运行时通知对象</h3>\r\n<p>通过在代理类中包裹切面，Spring在运行期把切面织入到Spring管理的bean中。代理封装了目标类，并拦截被通知方法的调用，再把调用转发给真正的目标bean。当代理拦截到方法调用时，在调用目标bean方法之前，会执行切面逻辑。</p>\r\n<p>直到应用需要被代理的bean时，Spring才创建代理对象。如果使用的是ApplicationContext的话，在ApplicationContext从BeanFactory中加载所有bean的时候，Spring才会创建被代理的对象。因为Spring运行时才创建代理对象，所以我们不需要特殊的编译器来织入SpringAOP的切面。</p>\r\n<h3><a name=\"t77\"></a><a name=\"t77\"></a><a id=\"Spring_976\"></a>Spring只支持方法级别的连接点</h3>\r\n<p>因为Spring基于动态代理，所以Spring只支持方法连接点。Spring缺少对字段连接点的支持，而且它不支持构造器连接点。方法之外的连接点拦截功能，我们可以利用Aspect来补充。</p>\r\n<h3><a name=\"t78\"></a><a name=\"t78\"></a><a id=\"Spring_AOP__spring_aop__concern__crosscutting_concern__981\"></a>在Spring AOP 中，关注点和横切关注的区别是什么？在 spring aop 中 concern 和 cross-cutting concern 的不同之处</h3>\r\n<p>关注点（concern）是应用中一个模块的行为，一个关注点可能会被定义成一个我们想实现的一个功能。</p>\r\n<p>横切关注点（cross-cutting concern）是一个关注点，此关注点是整个应用都会使用的功能，并影响整个应用，比如日志，安全和数据传输，几乎应用的每个模块都需要的功能。因此这些都属于横切关注点。</p>\r\n<h3><a name=\"t79\"></a><a name=\"t79\"></a><a id=\"Spring_989\"></a>Spring通知有哪些类型？</h3>\r\n<p>在AOP术语中，切面的工作被称为通知，实际上是程序执行时要通过SpringAOP框架触发的代码段。</p>\r\n<p>Spring切面可以应用5种类型的通知：</p>\r\n<ol><li>前置通知（Before）：在目标方法被调用之前调用通知功能；</li><li>后置通知（After）：在目标方法完成之后调用通知，此时不会关心方法的输出是什么；</li><li>返回通知（After-returning ）：在目标方法成功执行之后调用通知；</li><li>异常通知（After-throwing）：在目标方法抛出异常后调用通知；</li><li>环绕通知（Around）：通知包裹了被通知的方法，在被通知的方法调用之前和调用之后执行自定义的行为。</li></ol>\r\n<blockquote>\r\n<p>同一个aspect，不同advice的执行顺序：</p>\r\n<p>①没有异常情况下的执行顺序：</p>\r\n<p>around before advice<br> before advice<br> target method 执行<br> around after advice<br> after advice<br> afterReturning</p>\r\n<p>②有异常情况下的执行顺序：</p>\r\n<p>around before advice<br> before advice<br> target method 执行<br> around after advice<br> after advice<br> afterThrowing:异常发生<br> java.lang.RuntimeException: 异常发生</p>\r\n</blockquote>\r\n<h3><a name=\"t80\"></a><a name=\"t80\"></a><a id=\"_Aspect_1026\"></a>什么是切面 Aspect？</h3>\r\n<p>aspect 由 pointcount 和 advice 组成，切面是通知和切点的结合。 它既包含了横切逻辑的定义, 也包括了连接点的定义. Spring AOP 就是负责实施切面的框架, 它将切面所定义的横切逻辑编织到切面所指定的连接点中.<br> AOP 的工作重心在于如何将增强编织目标对象的连接点上, 这里包含两个工作:</p>\r\n<ul><li>如何通过 pointcut 和 advice 定位到特定的 joinpoint 上</li><li>如何在 advice 中编写切面代码.</li></ul>\r\n<p>可以简单地认为, 使用 @Aspect 注解的类就是切面.</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/2020021212264438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\r\n<h3><a name=\"t81\"></a><a name=\"t81\"></a><a id=\"XML_Schema_1040\"></a>解释基于XML Schema方式的切面实现</h3>\r\n<p>在这种情况下，切面由常规类以及基于XML的配置实现。</p>\r\n<h3><a name=\"t82\"></a><a name=\"t82\"></a><a id=\"_1046\"></a>解释基于注解的切面实现</h3>\r\n<p>在这种情况下(基于@AspectJ的实现)，涉及到的切面声明的风格与带有java5标注的普通java类一致。</p>\r\n<h3><a name=\"t83\"></a><a name=\"t83\"></a><a id=\"_1052\"></a>有几种不同类型的自动代理？</h3>\r\n<p>BeanNameAutoProxyCreator</p>\r\n<p>DefaultAdvisorAutoProxyCreator</p>\r\n<p>Metadata autoproxying</p>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_java_spring.vue?vue&type=template&id=1cdb9524\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>Spring MVC面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"_37\"></a>概述</h2>\r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"Spring_MVCSpring_MVC_39\"></a>什么是Spring MVC？简单介绍下你对Spring MVC的理解？</h3>\r\n<p>Spring MVC是一个基于Java的实现了MVC设计模式的请求驱动类型的轻量级Web框架，通过把模型-视图-控制器分离，将web层进行职责解耦，把复杂的web应用分成逻辑清晰的几部分，简化开发，减少出错，方便组内开发人员之间的配合。</p>\r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"Spring_MVC_45\"></a>Spring MVC的优点</h3>\r\n<p>（1）可以支持各种视图技术,而不仅仅局限于JSP；</p>\r\n<p>（2）与Spring框架集成（如IoC容器、AOP等）；</p>\r\n<p>（3）清晰的角色分配：前端控制器(dispatcherServlet) , 请求到处理器映射（handlerMapping), 处理器适配器（HandlerAdapter), 视图解析器（ViewResolver）。</p>\r\n<p>（4） 支持各种请求资源的映射策略。</p>\r\n<h2><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"_59\"></a>核心组件</h2>\r\n<h3><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"Spring_MVC_61\"></a>Spring MVC的主要组件？</h3>\r\n<p>（1）前端控制器 DispatcherServlet（不需要程序员开发）</p>\r\n<p>作用：接收请求、响应结果，相当于转发器，有了DispatcherServlet 就减少了其它组件之间的耦合度。</p>\r\n<p>（2）处理器映射器HandlerMapping（不需要程序员开发）</p>\r\n<p>作用：根据请求的URL来查找Handler</p>\r\n<p>（3）处理器适配器HandlerAdapter</p>\r\n<p>注意：在编写Handler的时候要按照HandlerAdapter要求的规则去编写，这样适配器HandlerAdapter才可以正确的去执行Handler。</p>\r\n<p>（4）处理器Handler（需要程序员开发）</p>\r\n<p>（5）视图解析器 ViewResolver（不需要程序员开发）</p>\r\n<p>作用：进行视图的解析，根据视图逻辑名解析成真正的视图（view）</p>\r\n<p>（6）视图View（需要程序员开发jsp）</p>\r\n<p>View是一个接口， 它的实现类支持不同的视图类型（jsp，freemarker，pdf等等）</p>\r\n<h3><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"DispatcherServlet_87\"></a>什么是DispatcherServlet</h3>\r\n<p>Spring的MVC框架是围绕DispatcherServlet来设计的，它用来处理所有的HTTP请求和响应。</p>\r\n<h3><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"Spring_MVC_93\"></a>什么是Spring MVC框架的控制器？</h3>\r\n<p>控制器提供一个访问应用程序的行为，此行为通常通过服务接口实现。控制器解析用户输入并将其转换为一个由视图呈现给用户的模型。Spring用一个非常抽象的方式实现了一个控制层，允许用户创建多种用途的控制器。</p>\r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"Spring_MVC_99\"></a>Spring MVC的控制器是不是单例模式,如果是,有什么问题,怎么解决？</h3>\r\n<p>答：是单例模式,所以在多线程访问的时候有线程安全问题,不要用同步,会影响性能的,解决方案是在控制器里面不能写字段。</p>\r\n<h2><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"_107\"></a>工作原理</h2>\r\n<h3><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"Spring_MVC_DispatcherServlet__109\"></a>请描述Spring MVC的工作流程？描述一下 DispatcherServlet 的工作流程？</h3>\r\n<p>（1）用户发送请求至前端控制器DispatcherServlet；<br> （2） DispatcherServlet收到请求后，调用HandlerMapping处理器映射器，请求获取Handle；<br> （3）处理器映射器根据请求url找到具体的处理器，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet；<br> （4）DispatcherServlet 调用 HandlerAdapter处理器适配器；<br> （5）HandlerAdapter 经过适配调用 具体处理器(Handler，也叫后端控制器)；<br> （6）Handler执行完成返回ModelAndView；<br> （7）HandlerAdapter将Handler执行结果ModelAndView返回给DispatcherServlet；<br> （8）DispatcherServlet将ModelAndView传给ViewResolver视图解析器进行解析；<br> （9）ViewResolver解析后返回具体View；<br> （10）DispatcherServlet对View进行渲染视图（即将模型数据填充至视图中）<br> （11）DispatcherServlet响应用户。</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200208211439106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\" alt=\"img\"></p>\r\n<h2><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"MVC_129\"></a>MVC框架</h2>\r\n<h3><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"MVCMVC_131\"></a>MVC是什么？MVC设计模式的好处有哪些</h3>\r\n<p>mvc是一种设计模式（设计模式就是日常开发中编写代码的一种好的方法和经验的总结）。模型（model）-视图（view）-控制器（controller），三层架构的设计模式。用于实现前端页面的展现与后端业务数据处理的分离。</p>\r\n<p>mvc设计模式的好处</p>\r\n<p>1.分层设计，实现了业务系统各个组件之间的解耦，有利于业务系统的可扩展性，可维护性。</p>\r\n<p>2.有利于系统的并行开发，提升开发效率。</p>\r\n<h2><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"_145\"></a>常用注解</h2>\r\n<h3><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"_147\"></a>注解原理是什么</h3>\r\n<p>注解本质是一个继承了Annotation的特殊接口，其具体实现类是Java运行时生成的动态代理类。我们通过反射获取注解时，返回的是Java运行时生成的动态代理对象。通过代理对象调用自定义注解的方法，会最终调用AnnotationInvocationHandler的invoke方法。该方法会从memberValues这个Map中索引出对应的值。而memberValues的来源是Java常量池。</p>\r\n<h3><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"Spring_MVC_153\"></a>Spring MVC常用的注解有哪些？</h3>\r\n<p>@RequestMapping：用于处理请求 url 映射的注解，可用于类或方法上。用于类上，则表示类中的所有响应请求的方法都是以该地址作为父路径。</p>\r\n<p>@RequestBody：注解实现接收http请求的json数据，将json转换为java对象。</p>\r\n<p>@ResponseBody：注解实现将conreoller方法返回对象转化为json对象响应给客户。</p>\r\n<h3><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"SpingMvc_163\"></a>SpingMvc中的控制器的注解一般用哪个,有没有别的注解可以替代？</h3>\r\n<p>答：一般用@Controller注解,也可以使用@RestController,@RestController注解相当于@ResponseBody ＋ @Controller,表示是表现层,除此之外，一般不用别的注解代替。</p>\r\n<h3><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"Controller_169\"></a>@Controller注解的作用</h3>\r\n<p>在Spring MVC 中，控制器Controller 负责处理由DispatcherServlet 分发的请求，它把用户请求的数据经过业务处理层处理之后封装成一个Model ，然后再把该Model 返回给对应的View 进行展示。在Spring MVC 中提供了一个非常简便的定义Controller 的方法，你无需继承特定的类或实现特定的接口，只需使用@Controller 标记一个类是Controller ，然后使用@RequestMapping 和@RequestParam 等一些注解用以定义URL 请求和Controller 方法之间的映射，这样的Controller 就能被外界访问到。此外Controller 不会直接依赖于HttpServletRequest 和HttpServletResponse 等HttpServlet 对象，它们可以通过Controller 的方法参数灵活的获取到。</p>\r\n<p>@Controller 用于标记在一个类上，使用它标记的类就是一个Spring MVC Controller 对象。分发处理器将会扫描使用了该注解的类的方法，并检测该方法是否使用了@RequestMapping 注解。@Controller 只是定义了一个控制器类，而使用@RequestMapping 注解的方法才是真正处理请求的处理器。单单使用@Controller 标记在一个类上还不能真正意义上的说它就是Spring MVC 的一个控制器类，因为这个时候Spring 还不认识它。那么要如何做Spring 才能认识它呢？这个时候就需要我们把这个控制器类交给Spring 来管理。有两种方式：</p>\r\n<ul><li>在Spring MVC 的配置文件中定义MyController 的bean 对象。</li><li>在Spring MVC 的配置文件中告诉Spring 该到哪里去找标记为@Controller 的Controller 控制器。</li></ul>\r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"RequestMapping_180\"></a>@RequestMapping注解的作用</h3>\r\n<p>RequestMapping是一个用来处理请求地址映射的注解，可用于类或方法上。用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径。</p>\r\n<p>RequestMapping注解有六个属性，下面我们把她分成三类进行说明（下面有相应示例）。</p>\r\n<p><strong>value， method</strong></p>\r\n<p>value： 指定请求的实际地址，指定的地址可以是URI Template 模式（后面将会说明）；</p>\r\n<p>method： 指定请求的method类型， GET、POST、PUT、DELETE等；</p>\r\n<p><strong>consumes，produces</strong></p>\r\n<p>consumes： 指定处理请求的提交内容类型（Content-Type），例如application/json, text/html;</p>\r\n<p>produces: 指定返回的内容类型，仅当request请求头中的(Accept)类型中包含该指定类型才返回；</p>\r\n<p><strong>params，headers</strong></p>\r\n<p>params： 指定request中必须包含某些参数值是，才让该方法处理。</p>\r\n<p>headers： 指定request中必须包含某些指定的header值，才能让该方法处理请求。</p>\r\n<h3><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"ResponseBody_206\"></a>@ResponseBody注解的作用</h3>\r\n<p>作用： 该注解用于将Controller的方法返回的对象，通过适当的HttpMessageConverter转换为指定格式后，写入到Response对象的body数据区。</p>\r\n<p>使用时机：返回的数据不是html标签的页面，而是其他某种格式的数据时（如json、xml等）使用；</p>\r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"PathVariableRequestParam_214\"></a>@PathVariable和@RequestParam的区别</h3>\r\n<p>请求路径上有个id的变量值，可以通过@PathVariable来获取 @RequestMapping(value = “/page/{id}”, method = RequestMethod.GET)</p>\r\n<p>@RequestParam用来获得静态的URL请求入参 spring注解时action里用到。</p>\r\n<h2><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"_224\"></a>其他</h2>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"Spring_MVCStruts2_226\"></a>Spring MVC与Struts2区别</h3>\r\n<p>相同点</p>\r\n<p>都是基于mvc的表现层框架，都用于web项目的开发。</p>\r\n<p>不同点</p>\r\n<p>1.前端控制器不一样。Spring MVC的前端控制器是servlet：DispatcherServlet。struts2的前端控制器是filter：StrutsPreparedAndExcutorFilter。</p>\r\n<p>2.请求参数的接收方式不一样。Spring MVC是使用方法的形参接收请求的参数，基于方法的开发，线程安全，可以设计为单例或者多例的开发，推荐使用单例模式的开发（执行效率更高），默认就是单例开发模式。struts2是通过类的成员变量接收请求的参数，是基于类的开发，线程不安全，只能设计为多例的开发。</p>\r\n<p>3.Struts采用值栈存储请求和响应的数据，通过OGNL存取数据，Spring MVC通过参数解析器是将request请求内容解析，并给方法形参赋值，将数据和视图封装成ModelAndView对象，最后又将ModelAndView中的模型数据通过reques域传输到页面。Jsp视图解析器默认使用jstl。</p>\r\n<p>4.与spring整合不一样。Spring MVC是spring框架的一部分，不需要整合。在企业项目中，Spring MVC使用更多一些。</p>\r\n<h3><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"Spring_MVC_246\"></a>Spring MVC怎么样设定重定向和转发的？</h3>\r\n<p>（1）转发：在返回值前面加\"forward:\"，譬如\"forward:user.do?name=method4\"</p>\r\n<p>（2）重定向：在返回值前面加\"redirect:\"，譬如\"redirect:http://www.baidu.com\"</p>\r\n<h3><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"Spring_MVCAJAX_254\"></a>Spring MVC怎么和AJAX相互调用的？</h3>\r\n<p>通过Jackson框架就可以把Java里面的对象直接转化成Js可以识别的Json对象。具体步骤如下 ：</p>\r\n<p>（1）加入Jackson.jar</p>\r\n<p>（2）在配置文件中配置json的映射</p>\r\n<p>（3）在接受Ajax方法里面可以直接返回Object,List等,但方法前面要加上@ResponseBody注解。</p>\r\n<h3><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"POSTGET_266\"></a>如何解决POST请求中文乱码问题，GET的又如何处理呢？</h3>\r\n<p>（1）解决post请求乱码问题：</p>\r\n<p>在web.xml中配置一个CharacterEncodingFilter过滤器，设置成utf-8；</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter-name</span><span class=\"token punctuation\">&gt;</span></span>CharacterEncodingFilter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter-name</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter-class</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.web.filter.CharacterEncodingFilter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter-class</span><span class=\"token punctuation\">&gt;</span></span>\r\n\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>init-param</span><span class=\"token punctuation\">&gt;</span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-name</span><span class=\"token punctuation\">&gt;</span></span>encoding<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-name</span><span class=\"token punctuation\">&gt;</span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-value</span><span class=\"token punctuation\">&gt;</span></span>utf-8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-value</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>init-param</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter</span><span class=\"token punctuation\">&gt;</span></span>\r\n\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter-mapping</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter-name</span><span class=\"token punctuation\">&gt;</span></span>CharacterEncodingFilter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter-name</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">&gt;</span></span>/*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter-mapping</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li></ul></pre>\r\n<p>（2）get请求中文参数出现乱码解决方法有两个：</p>\r\n<p>①修改tomcat配置文件添加编码与工程编码一致，如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">&lt;ConnectorURIEncoding=\"utf-8\" connectionTimeout=\"20000\" port=\"8080\" protocol=\"HTTP/1.1\" redirectPort=\"8443\"/&gt;\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>②另外一种方法对参数进行重新编码：</p>\r\n<p>String userName = new String(request.getParamter(“userName”).getBytes(“ISO8859-1”),“utf-8”)</p>\r\n<p>ISO8859-1是tomcat默认编码，需要将tomcat编码后的内容按utf-8编码。</p>\r\n<h3><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"Spring_MVC_307\"></a>Spring MVC的异常处理？</h3>\r\n<p>答：可以将异常抛给Spring框架，由Spring框架来处理；我们只需要配置简单的异常处理器，在异常处理器中添视图页面即可。</p>\r\n<h3><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"get_313\"></a>如果在拦截请求中，我想拦截get方式提交的方法,怎么配置</h3>\r\n<p>答：可以在@RequestMapping注解里面加上method=RequestMethod.GET。</p>\r\n<h3><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"RequestSession_319\"></a>怎样在方法里面得到Request,或者Session？</h3>\r\n<p>答：直接在方法的形参中声明request,Spring MVC就自动把request对象传入。</p>\r\n<h3><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"_325\"></a>如果想在拦截的方法里面得到从前台传入的参数,怎么得到？</h3>\r\n<p>答：直接在形参里面声明这个参数就可以,但必须名字和传过来的参数一样。</p>\r\n<h3><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"_331\"></a>如果前台有很多个参数传入,并且这些参数都是一个对象的,那么怎么样快速得到这个对象？</h3>\r\n<p>答：直接在方法中声明这个对象,Spring MVC就自动会把属性赋值到这个对象里面。</p>\r\n<h3><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"Spring_MVC_337\"></a>Spring MVC中函数的返回值是什么？</h3>\r\n<p>答：返回值可以有很多类型,有String, ModelAndView。ModelAndView类把视图和数据都合并的一起的，但一般用String比较好。</p>\r\n<h3><a name=\"t32\"></a><a name=\"t32\"></a><a id=\"Spring_MVC_343\"></a>Spring MVC用什么对象从后台向前台传递数据的？</h3>\r\n<p>答：通过ModelMap对象,可以在这个对象里面调用put方法,把对象加到里面,前台就可以通过el表达式拿到。</p>\r\n<h3><a name=\"t33\"></a><a name=\"t33\"></a><a id=\"ModelMapSession_349\"></a>怎么样把ModelMap里面的数据放入Session里面？</h3>\r\n<p>答：可以在类上面加上@SessionAttributes注解,里面包含的字符串就是要放入session里面的key。</p>\r\n<h3><a name=\"t34\"></a><a name=\"t34\"></a><a id=\"Spring_MVC_355\"></a>Spring MVC里面拦截器是怎么写的</h3>\r\n<p>有两种写法,一种是实现HandlerInterceptor接口，另外一种是继承适配器类，接着在接口方法当中，实现处理逻辑；然后在Spring MVC的配置文件中配置拦截器即可：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">&lt;!-- 配置Spring MVC的拦截器 --&gt;</span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>interceptors</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token comment\">&lt;!-- 配置一个拦截器的Bean就可以了 默认是对所有请求都拦截 --&gt;</span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>myInterceptor<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>com.zwp.action.MyHandlerInterceptor<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token comment\">&lt;!-- 只针对部分请求拦截 --&gt;</span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>interceptor</span><span class=\"token punctuation\">&gt;</span></span>\r\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>mapping</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/modelMap.do<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\r\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>com.zwp.action.MyHandlerInterceptorAdapter<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">mvc:</span>interceptor</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">mvc:</span>interceptors</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<h3><a name=\"t35\"></a><a name=\"t35\"></a><a id=\"_WebApplicationContext_374\"></a>介绍一下 WebApplicationContext</h3>\r\n<p>WebApplicationContext 继承了ApplicationContext 并增加了一些WEB应用必备的特有功能，它不同于一般的ApplicationContext ，因为它能处理主题，并找到被关联的servlet。</p>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_java_springmvc.vue?vue&type=template&id=c7af9454\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>Spring Cloud面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"Spring_Cloud_37\"></a>为什么需要学习Spring Cloud</h2>\r\n<p>不论是商业应用还是用户应用，在业务初期都很简单，我们通常会把它实现为单体结构的应用。但是，随着业务逐渐发展，产品思想会变得越来越复杂，单体结构的应用也会越来越复杂。这就会给应用带来如下的几个问题：</p>\r\n<ul><li>代码结构混乱：业务复杂，导致代码量很大，管理会越来越困难。同时，这也会给业务的快速迭代带来巨大挑战；</li><li>开发效率变低：开发人员同时开发一套代码，很难避免代码冲突。开发过程会伴随着不断解决冲突的过程，这会严重的影响开发效率；</li><li>排查解决问题成本高：线上业务发现 bug，修复 bug 的过程可能很简单。但是，由于只有一套代码，需要重新编译、打包、上线，成本很高。</li></ul>\r\n<p>由于单体结构的应用随着系统复杂度的增高，会暴露出各种各样的问题。近些年来，微服务架构逐渐取代了单体架构，且这种趋势将会越来越流行。Spring Cloud是目前最常用的微服务开发框架，已经在企业级开发中大量的应用。</p>\r\n<h2><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"Spring_Cloud_49\"></a>什么是Spring Cloud</h2>\r\n<p>Spring Cloud是一系列框架的有序集合。它利用Spring Boot的开发便利性巧妙地简化了分布式系统基础设施的开发，如服务发现注册、配置中心、智能路由、消息总线、负载均衡、断路器、数据监控等，都可以用Spring Boot的开发风格做到一键启动和部署。Spring Cloud并没有重复制造轮子，它只是将各家公司开发的比较成熟、经得起实际考验的服务框架组合起来，通过Spring Boot风格进行再封装屏蔽掉了复杂的配置和实现原理，最终给开发者留出了一套简单易懂、易部署和易维护的分布式系统开发工具包。</p>\r\n<h2><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"_55\"></a>设计目标与优缺点</h2>\r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"_57\"></a>设计目标</h3>\r\n<p><strong>协调各个微服务，简化分布式系统开发</strong>。</p>\r\n<h3><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"_63\"></a>优缺点</h3>\r\n<p>微服务的框架那么多比如：dubbo、Kubernetes，为什么就要使用Spring Cloud的呢？</p>\r\n<p>优点：</p>\r\n<ul><li>产出于Spring大家族，Spring在企业级开发框架中无人能敌，来头很大，可以保证后续的更新、完善</li><li>组件丰富，功能齐全。Spring Cloud 为微服务架构提供了非常完整的支持。例如、配置管理、服务发现、断路器、微服务网关等；</li><li>Spring Cloud 社区活跃度很高，教程很丰富，遇到问题很容易找到解决方案</li><li>服务拆分粒度更细，耦合度比较低，有利于资源重复利用，有利于提高开发效率</li><li>可以更精准的制定优化服务方案，提高系统的可维护性</li><li>减轻团队的成本，可以并行开发，不用关注其他人怎么开发，先关注自己的开发</li><li>微服务可以是跨平台的，可以用任何一种语言开发</li><li>适于互联网时代，产品迭代周期更短</li></ul>\r\n<p>缺点：</p>\r\n<ul><li>微服务过多，治理成本高，不利于维护系统</li><li>分布式系统开发的成本高（容错，分布式事务等）对团队挑战大</li></ul>\r\n<p>总的来说优点大过于缺点，目前看来Spring Cloud是一套非常完善的分布式框架，目前很多企业开始用微服务、Spring Cloud的优势是显而易见的。因此对于想研究微服务架构的同学来说，学习Spring Cloud是一个不错的选择。</p>\r\n<h2><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"Spring_Cloud_89\"></a>Spring Cloud发展前景</h2>\r\n<p>Spring Cloud对于中小型互联网公司来说是一种福音，因为这类公司往往没有实力或者没有足够的资金投入去开发自己的分布式系统基础设施，使用Spring Cloud一站式解决方案能在从容应对业务发展的同时大大减少开发成本。同时，随着近几年微服务架构和Docker容器概念的火爆，也会让Spring Cloud在未来越来越“云”化的软件开发风格中立有一席之地，尤其是在五花八门的分布式解决方案中提供了标准化的、全站式的技术方案，意义可能会堪比当年Servlet规范的诞生，有效推进服务端软件系统技术水平的进步。</p>\r\n<h2><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"_95\"></a>整体架构</h2>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20191226143921760.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"\"></p>\r\n<h2><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"_101\"></a>主要项目</h2>\r\n<p>Spring Cloud的子项目，大致可分成两类，一类是对现有成熟框架\"Spring Boot化\"的封装和抽象，也是数量最多的项目；第二类是开发了一部分分布式系统的基础设施的实现，如Spring Cloud Stream扮演的就是kafka, ActiveMQ这样的角色。</p>\r\n<h3><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"Spring_Cloud_Config_105\"></a>Spring Cloud Config</h3>\r\n<p>集中配置管理工具，分布式系统中统一的外部配置管理，默认使用Git来存储配置，可以支持客户端配置的刷新及加密、解密操作。</p>\r\n<h3><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"Spring_Cloud_Netflix_109\"></a>Spring Cloud Netflix</h3>\r\n<p>Netflix OSS 开源组件集成，包括Eureka、Hystrix、Ribbon、Feign、Zuul等核心组件。</p>\r\n<ul><li>Eureka：服务治理组件，包括服务端的注册中心和客户端的服务发现机制；</li><li>Ribbon：负载均衡的服务调用组件，具有多种负载均衡调用策略；</li><li>Hystrix：服务容错组件，实现了断路器模式，为依赖服务的出错和延迟提供了容错能力；</li><li>Feign：基于Ribbon和Hystrix的声明式服务调用组件；</li><li>Zuul：API网关组件，对请求提供路由及过滤功能。</li></ul>\r\n<h3><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"Spring_Cloud_Bus_119\"></a>Spring Cloud Bus</h3>\r\n<p>用于传播集群状态变化的消息总线，使用轻量级消息代理链接分布式系统中的节点，可以用来动态刷新集群中的服务配置。</p>\r\n<h3><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"Spring_Cloud_Consul_123\"></a>Spring Cloud Consul</h3>\r\n<p>基于Hashicorp Consul的服务治理组件。</p>\r\n<h3><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"Spring_Cloud_Security_127\"></a>Spring Cloud Security</h3>\r\n<p>安全工具包，对Zuul代理中的负载均衡OAuth2客户端及登录认证进行支持。</p>\r\n<h3><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"Spring_Cloud_Sleuth_131\"></a>Spring Cloud Sleuth</h3>\r\n<p>Spring Cloud应用程序的分布式请求链路跟踪，支持使用Zipkin、HTrace和基于日志（例如ELK）的跟踪。</p>\r\n<h3><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"Spring_Cloud_Stream_135\"></a>Spring Cloud Stream</h3>\r\n<p>轻量级事件驱动微服务框架，可以使用简单的声明式模型来发送及接收消息，主要实现为Apache Kafka及RabbitMQ。</p>\r\n<h3><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"Spring_Cloud_Task_139\"></a>Spring Cloud Task</h3>\r\n<p>用于快速构建短暂、有限数据处理任务的微服务框架，用于向应用中添加功能性和非功能性的特性。</p>\r\n<h3><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"Spring_Cloud_Zookeeper_143\"></a>Spring Cloud Zookeeper</h3>\r\n<p>基于Apache Zookeeper的服务治理组件。</p>\r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"Spring_Cloud_Gateway_147\"></a>Spring Cloud Gateway</h3>\r\n<p>API网关组件，对请求提供路由及过滤功能。</p>\r\n<h3><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"Spring_Cloud_OpenFeign_151\"></a>Spring Cloud OpenFeign</h3>\r\n<p>基于Ribbon和Hystrix的声明式服务调用组件，可以动态创建基于Spring MVC注解的接口实现用于服务调用，在Spring Cloud 2.0中已经取代Feign成为了一等公民。</p>\r\n<h2><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"Spring_Cloud_157\"></a>Spring Cloud的版本关系</h2>\r\n<p>Spring Cloud是一个由许多子项目组成的综合项目，各子项目有不同的发布节奏。 为了管理Spring Cloud与各子项目的版本依赖关系，发布了一个清单，其中包括了某个Spring Cloud版本对应的子项目版本。 为了避免Spring Cloud版本号与子项目版本号混淆，Spring Cloud版本采用了名称而非版本号的命名，这些版本的名字采用了伦敦地铁站的名字，根据字母表的顺序来对应版本时间顺序，例如Angel是第一个版本，Brixton是第二个版本。 当Spring Cloud的发布内容积累到临界点或者一个重大BUG被解决后，会发布一个\"service releases\"版本，简称SRX版本，比如Greenwich.SR2就是Spring Cloud发布的Greenwich版本的第2个SRX版本。目前Spring Cloud的最新版本是Hoxton。</p>\r\n<h3><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"Spring_CloudSpringBoot_161\"></a>Spring Cloud和SpringBoot版本对应关系</h3>\r\n<div class=\"table-box\"><table><thead><tr><th>Spring Cloud Version</th><th>SpringBoot Version</th></tr></thead><tbody><tr><td>Hoxton</td><td>2.2.x</td></tr><tr><td>Greenwich</td><td>2.1.x</td></tr><tr><td>Finchley</td><td>2.0.x</td></tr><tr><td>Edgware</td><td>1.5.x</td></tr><tr><td>Dalston</td><td>1.5.x</td></tr></tbody></table></div>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"Spring_Cloud_171\"></a>Spring Cloud和各子项目版本对应关系</h3>\r\n<div class=\"table-box\"><table><thead><tr><th>Component</th><th>Edgware.SR6</th><th>Greenwich.SR2</th></tr></thead><tbody><tr><td>spring-cloud-bus</td><td>1.3.4.RELEASE</td><td>2.1.2.RELEASE</td></tr><tr><td>spring-cloud-commons</td><td>1.3.6.RELEASE</td><td>2.1.2.RELEASE</td></tr><tr><td>spring-cloud-config</td><td>1.4.7.RELEASE</td><td>2.1.3.RELEASE</td></tr><tr><td>spring-cloud-netflix</td><td>1.4.7.RELEASE</td><td>2.1.2.RELEASE</td></tr><tr><td>spring-cloud-security</td><td>1.2.4.RELEASE</td><td>2.1.3.RELEASE</td></tr><tr><td>spring-cloud-consul</td><td>1.3.6.RELEASE</td><td>2.1.2.RELEASE</td></tr><tr><td>spring-cloud-sleuth</td><td>1.3.6.RELEASE</td><td>2.1.1.RELEASE</td></tr><tr><td>spring-cloud-stream</td><td>Ditmars.SR5</td><td>Fishtown.SR3</td></tr><tr><td>spring-cloud-zookeeper</td><td>1.2.3.RELEASE</td><td>2.1.2.RELEASE</td></tr><tr><td>spring-boot</td><td>1.5.21.RELEASE</td><td>2.1.5.RELEASE</td></tr><tr><td>spring-cloud-task</td><td>1.2.4.RELEASE</td><td>2.1.2.RELEASE</td></tr><tr><td>spring-cloud-gateway</td><td>1.0.3.RELEASE</td><td>2.1.2.RELEASE</td></tr><tr><td>spring-cloud-openfeign</td><td>暂无</td><td>2.1.2.RELEASE</td></tr></tbody></table></div>\r\n<p><strong>注意：Hoxton版本是基于SpringBoot 2.2.x版本构建的，不适用于1.5.x版本。随着2019年8月SpringBoot 1.5.x版本停止维护，Edgware版本也将停止维护。</strong></p>\r\n<h2><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"SpringBootSpringCloud_193\"></a>SpringBoot和SpringCloud的区别？</h2>\r\n<p>SpringBoot专注于快速方便的开发单个个体微服务。</p>\r\n<p>SpringCloud是关注全局的微服务协调整理治理框架，它将SpringBoot开发的一个个单体微服务整合并管理起来，</p>\r\n<p>为各个微服务之间提供，配置管理、服务发现、断路器、路由、微代理、事件总线、全局锁、决策竞选、分布式会话等等集成服务</p>\r\n<p>SpringBoot可以离开SpringCloud独立使用开发项目， 但是SpringCloud离不开SpringBoot ，属于依赖的关系</p>\r\n<p>SpringBoot专注于快速、方便的开发单个微服务个体，SpringCloud关注全局的服务治理框架。</p>\r\n<h2><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"_Spring_Boot__209\"></a>使用 Spring Boot 开发分布式微服务时，我们面临以下问题</h2>\r\n<p>（1）与分布式系统相关的复杂性-这种开销包括网络问题，延迟开销，带宽问题，安全问题。</p>\r\n<p>（2）服务发现-服务发现工具管理群集中的流程和服务如何查找和互相交谈。它涉及一个服务目录，在该目录中注册服务，然后能够查找并连接到该目录中的服务。</p>\r\n<p>（3）冗余-分布式系统中的冗余问题。</p>\r\n<p>（4）负载平衡 --负载平衡改善跨多个计算资源的工作负荷，诸如计算机，计算机集群，网络链路，中央处理单元，或磁盘驱动器的分布。</p>\r\n<p>（5）性能-问题 由于各种运营开销导致的性能问题。</p>\r\n<p>（6）部署复杂性-Devops 技能的要求。</p>\r\n<h2><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"Spring_Cloud__225\"></a>服务注册和发现是什么意思？Spring Cloud 如何实现？</h2>\r\n<p>当我们开始一个项目时，我们通常在属性文件中进行所有的配置。随着越来越多的服务开发和部署，添加和修改这些属性变得更加复杂。有些服务可能会下降，而某些位置可能会发生变化。手动更改属性可能会产生问题。 Eureka 服务注册和发现可以在这种情况下提供帮助。由于所有服务都在 Eureka 服务器上注册并通过调用 Eureka 服务器完成查找，因此无需处理服务地点的任何更改和处理。</p>\r\n<h2><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"Spring_Cloud_dubbo_231\"></a>Spring Cloud 和dubbo区别?</h2>\r\n<p>（1）服务调用方式 dubbo是RPC springcloud Rest Api</p>\r\n<p>（2）注册中心,dubbo 是zookeeper springcloud是eureka，也可以是zookeeper</p>\r\n<p>（3）服务网关,dubbo本身没有实现，只能通过其他第三方技术整合，springcloud有Zuul路由网关，作为路由服务器，进行消费者的请求分发,springcloud支持断路器，与git完美集成配置文件支持版本控制，事物总线实现配置文件的更新与服务自动装配等等一系列的微服务架构要素。</p>\r\n<h2><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"_241\"></a>负载平衡的意义什么？</h2>\r\n<p>在计算中，负载平衡可以改善跨计算机，计算机集群，网络链接，中央处理单元或磁盘驱动器等多种计算资源的工作负载分布。负载平衡旨在优化资源使用，最大化吞吐量，最小化响应时间并避免任何单一资源的过载。使用多个组件进行负载平衡而不是单个组件可能会通过冗余来提高可靠性和可用性。负载平衡通常涉及专用软件或硬件，例如多层交换机或域名系统服务器进程。</p>\r\n<h2><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"_Hystrix_247\"></a>什么是 Hystrix？它如何实现容错？</h2>\r\n<p>Hystrix 是一个延迟和容错库，旨在隔离远程系统，服务和第三方库的访问点，当出现故障是不可避免的故障时，停止级联故障并在复杂的分布式系统中实现弹性。</p>\r\n<p>通常对于使用微服务架构开发的系统，涉及到许多微服务。这些微服务彼此协作。</p>\r\n<p>思考以下微服务</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8xMi8zMC8xNmY1NWZiZmQzZTNmZDI4?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>假设如果上图中的微服务 9 失败了，那么使用传统方法我们将传播一个异常。但这仍然会导致整个系统崩溃。</p>\r\n<p>随着微服务数量的增加，这个问题变得更加复杂。微服务的数量可以高达 1000.这是 hystrix 出现的地方 我们将使用 Hystrix 在这种情况下的 Fallback 方法功能。我们有两个服务 employee-consumer 使用由 employee-consumer 公开的服务。</p>\r\n<p>简化图如下所示</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8xMi8zMC8xNmY1NWZiZmNlNjcxYjgz?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>现在假设由于某种原因，employee-producer 公开的服务会抛出异常。我们在这种情况下使用 Hystrix 定义了一个回退方法。这种后备方法应该具有与公开服务相同的返回类型。如果暴露服务中出现异常，则回退方法将返回一些值。</p>\r\n<h2><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"_Hystrix__269\"></a>什么是 Hystrix 断路器？我们需要它吗？</h2>\r\n<p>由于某些原因，employee-consumer 公开服务会引发异常。在这种情况下使用Hystrix 我们定义了一个回退方法。如果在公开服务中发生异常，则回退方法返回一些默认值。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8xMi8zMC8xNmY1NWZiZmNlZWZhOTJh?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>如果 firstPage method() 中的异常继续发生，则 Hystrix 电路将中断，并且员工使用者将一起跳过 firtsPage 方法，并直接调用回退方法。 断路器的目的是给第一页方法或第一页方法可能调用的其他方法留出时间，并导致异常恢复。可能发生的情况是，在负载较小的情况下，导致异常的问题有更好的恢复机会 。</p>\r\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-nMSJX6ml-1582105816943)(https://user-gold-cdn.xitu.io/2019/12/30/16f55fbfd4e33ae7?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)]</p>\r\n<h2><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"_Netflix_Feign_281\"></a>什么是 Netflix Feign？它的优点是什么？</h2>\r\n<p>Feign 是受到 Retrofit，JAXRS-2.0 和 WebSocket 启发的 java 客户端联编程序。</p>\r\n<p>Feign 的第一个目标是将约束分母的复杂性统一到 http apis，而不考虑其稳定性。</p>\r\n<p>在 employee-consumer 的例子中，我们使用了 employee-producer 使用 REST模板公开的 REST 服务。</p>\r\n<p>但是我们必须编写大量代码才能执行以下步骤</p>\r\n<p>（1）使用功能区进行负载平衡。</p>\r\n<p>（2）获取服务实例，然后获取基本 URL。</p>\r\n<p>（3）利用 REST 模板来使用服务。 前面的代码如下</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token annotation punctuation\">@Controller</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConsumerControllerClient</span> <span class=\"token punctuation\">{<!-- --></span>\r\n<span class=\"token annotation punctuation\">@Autowired</span>\r\n<span class=\"token keyword\">private</span> LoadBalancerClient loadBalancer<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getEmployee</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> RestClientException<span class=\"token punctuation\">,</span> IOException <span class=\"token punctuation\">{<!-- --></span>\r\n\tServiceInstance serviceInstance<span class=\"token operator\">=</span>loadBalancer<span class=\"token punctuation\">.</span><span class=\"token function\">choose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"employee-producer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>serviceInstance<span class=\"token punctuation\">.</span><span class=\"token function\">getUri</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\tString baseUrl<span class=\"token operator\">=</span>serviceInstance<span class=\"token punctuation\">.</span><span class=\"token function\">getUri</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\tbaseUrl<span class=\"token operator\">=</span>baseUrl<span class=\"token operator\">+</span><span class=\"token string\">\"/employee\"</span><span class=\"token punctuation\">;</span>\r\n\tRestTemplate restTemplate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RestTemplate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\tResponseEntity<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">&gt;</span></span> response<span class=\"token operator\">=</span>null<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\r\n\t\tresponse<span class=\"token operator\">=</span>restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">exchange</span><span class=\"token punctuation\">(</span>baseUrl<span class=\"token punctuation\">,</span>\r\n\t\t\t\t\tHttpMethod<span class=\"token punctuation\">.</span>GET<span class=\"token punctuation\">,</span> <span class=\"token function\">getHeaders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>String<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\t<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\r\n\t\t<span class=\"token punctuation\">{<!-- --></span>\r\n\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li></ul></pre>\r\n<p>之前的代码，有像 NullPointer 这样的例外的机会，并不是最优的。我们将看到如何使用 Netflix Feign 使呼叫变得更加轻松和清洁。如果 Netflix Ribbon 依赖关系也在类路径中，那么 Feign 默认也会负责负载平衡。</p>\r\n<h2><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"_Spring_Cloud_Bus_325\"></a>什么是 Spring Cloud Bus？我们需要它吗？</h2>\r\n<p>考虑以下情况：我们有多个应用程序使用 Spring Cloud Config 读取属性，而Spring Cloud Config 从 GIT 读取这些属性。</p>\r\n<p>下面的例子中多个员工生产者模块从 Employee Config Module 获取 Eureka 注册的财产。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8xMi8zMC8xNmY1NWZiZmQ3NzQ0YzQ3?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>如果假设 GIT 中的 Eureka 注册属性更改为指向另一台 Eureka 服务器，会发生什么情况。在这种情况下，我们将不得不重新启动服务以获取更新的属性。</p>\r\n<p>还有另一种使用执行器端点/刷新的方式。但是我们将不得不为每个模块单独调用这个 url。例如，如果 Employee Producer1 部署在端口 8080 上，则调用 http：// localhost：8080 / refresh。同样对于 Employee Producer2 http：//localhost：8081 / refresh 等等。这又很麻烦。这就是 Spring Cloud Bus 发挥作用的地方。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8xMi8zMC8xNmY1NWZiZmY0OTgxYWU5?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>Spring Cloud Bus 提供了跨多个实例刷新配置的功能。因此，在上面的示例中，如果我们刷新 Employee Producer1，则会自动刷新所有其他必需的模块。如果我们有多个微服务启动并运行，这特别有用。这是通过将所有微服务连接到单个消息代理来实现的。无论何时刷新实例，此事件都会订阅到侦听此代理的所有微服务，并且它们也会刷新。可以通过使用端点/总线/刷新来实现对任何单个实例的刷新。</p>\r\n<h2><a name=\"t32\"></a><a name=\"t32\"></a><a id=\"Spring_Cloud_343\"></a>Spring Cloud断路器的作用</h2>\r\n<p>当一个服务调用另一个服务由于网络原因或自身原因出现问题，调用者就会等待被调用者的响应 当更多的服务请求到这些资源导致更多的请求等待，发生连锁效应（雪崩效应）</p>\r\n<p>断路器有完全打开状态:一段时间内 达到一定的次数无法调用 并且多次监测没有恢复的迹象 断路器完全打开 那么下次请求就不会请求到该服务</p>\r\n<p>半开:短时间内 有恢复迹象 断路器会将部分请求发给该服务，正常调用时 断路器关闭</p>\r\n<p>关闭：当服务一直处于正常状态 能正常调用</p>\r\n<h2><a name=\"t33\"></a><a name=\"t33\"></a><a id=\"Spring_Cloud_Config_355\"></a>什么是Spring Cloud Config?</h2>\r\n<p>在分布式系统中，由于服务数量巨多，为了方便服务配置文件统一管理，实时更新，所以需要分布式配置中心组件。在Spring Cloud中，有分布式配置中心组件spring cloud config ，它支持配置服务放在配置服务的内存中（即本地），也支持放在远程Git仓库中。在spring cloud config 组件中，分两个角色，一是config server，二是config client。</p>\r\n<p>使用：</p>\r\n<p>（1）添加pom依赖</p>\r\n<p>（2）配置文件添加相关配置</p>\r\n<p>（3）启动类添加注解@EnableConfigServer</p>\r\n<h2><a name=\"t34\"></a><a name=\"t34\"></a><a id=\"Spring_Cloud_Gateway_369\"></a>什么是Spring Cloud Gateway?</h2>\r\n<p>Spring Cloud Gateway是Spring Cloud官方推出的第二代网关框架，取代Zuul网关。网关作为流量的，在微服务系统中有着非常作用，网关常见的功能有路由转发、权限校验、限流控制等作用。</p>\r\n<p>使用了一个RouteLocatorBuilder的bean去创建路由，除了创建路由RouteLocatorBuilder可以让你添加各种predicates和filters，predicates断言的意思，顾名思义就是根据具体的请求的规则，由具体的route去处理，filters是各种过滤器，用来对请求做各种判断和修改。</p>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_java_springcloud.vue?vue&type=template&id=4ea6f1c5\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>MyBatis面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<blockquote>\r\n<p>整理好的MyBatis面试题库，史上最全的MyBatis面试题，MyBatis面试宝典，特此分享给大家</p>\r\n</blockquote>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200116223059664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"\"></p>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"MyBatis_41\"></a>MyBatis简介</h2>\r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"MyBatis_43\"></a>MyBatis是什么？</h3>\r\n<p>MyBatis 是一款优秀的持久层框架，一个半 ORM（对象关系映射）框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生类型、接口和 Java 的 POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。</p>\r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"ORM_49\"></a>ORM是什么</h3>\r\n<p>ORM（Object Relational Mapping），对象关系映射，是一种为了解决关系型数据库数据与简单Java对象（POJO）的映射关系的技术。简单的说，ORM是通过使用描述对象和数据库之间映射的元数据，将程序中的对象自动持久化到关系型数据库中。</p>\r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"MybatisORM_55\"></a>为什么说Mybatis是半自动ORM映射工具？它与全自动的区别在哪里？</h3>\r\n<p>Hibernate属于全自动ORM映射工具，使用Hibernate查询关联对象或者关联集合对象时，可以根据对象关系模型直接获取，所以它是全自动的。</p>\r\n<p>而Mybatis在查询关联对象或关联集合对象时，需要手动编写sql来完成，所以，称之为半自动ORM映射工具。</p>\r\n<h3><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"JDBC_63\"></a>传统JDBC开发存在的问题</h3>\r\n<ul><li>频繁创建数据库连接对象、释放，容易造成系统资源浪费，影响系统性能。可以使用连接池解决这个问题。但是使用jdbc需要自己实现连接池。</li><li>sql语句定义、参数设置、结果集处理存在硬编码。实际项目中sql语句变化的可能性较大，一旦发生变化，需要修改java代码，系统需要重新编译，重新发布。不好维护。</li><li>使用preparedStatement向占有位符号传参数存在硬编码，因为sql语句的where条件不一定，可能多也可能少，修改sql还要修改代码，系统不易维护。</li><li>结果集处理存在重复代码，处理麻烦。如果可以映射成Java对象会比较方便。</li></ul>\r\n<h3><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"JDBCMyBatis_72\"></a>JDBC编程有哪些不足之处，MyBatis是如何解决这些问题的？</h3>\r\n<p>1、数据库链接创建、释放频繁造成系统资源浪费从而影响系统性能，如果使用数据库连接池可解决此问题。</p>\r\n<p>解决：在mybatis-config.xml中配置数据链接池，使用连接池管理数据库连接。</p>\r\n<p>2、Sql语句写在代码中造成代码不易维护，实际应用sql变化的可能较大，sql变动需要改变java代码。</p>\r\n<p>解决：将Sql语句配置在XXXXmapper.xml文件中与java代码分离。</p>\r\n<p>3、向sql语句传参数麻烦，因为sql语句的where条件不一定，可能多也可能少，占位符需要和参数一一对应。</p>\r\n<p>解决： Mybatis自动将java对象映射至sql语句。</p>\r\n<p>4、对结果集解析麻烦，sql变化导致解析代码变化，且解析前需要遍历，如果能将数据库记录封装成pojo对象解析比较方便。</p>\r\n<p>解决：Mybatis自动将sql执行结果映射至java对象。</p>\r\n<h3><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"Mybatis_92\"></a>Mybatis优缺点</h3>\r\n<p><strong>优点</strong></p>\r\n<p>与传统的数据库访问技术相比，ORM有以下优点：</p>\r\n<ul><li>基于SQL语句编程，相当灵活，不会对应用程序或者数据库的现有设计造成任何影响，SQL写在XML里，解除sql与程序代码的耦合，便于统一管理；提供XML标签，支持编写动态SQL语句，并可重用</li><li>与JDBC相比，减少了50%以上的代码量，消除了JDBC大量冗余的代码，不需要手动开关连接</li><li>很好的与各种数据库兼容（因为MyBatis使用JDBC来连接数据库，所以只要JDBC支持的数据库MyBatis都支持）</li><li>提供映射标签，支持对象与数据库的ORM字段关系映射；提供对象关系映射标签，支持对象关系组件维护</li><li>能够与Spring很好的集成</li></ul>\r\n<p><strong>缺点</strong></p>\r\n<ul><li>SQL语句的编写工作量较大，尤其当字段多、关联表多时，对开发人员编写SQL语句的功底有一定要求</li><li>SQL语句依赖于数据库，导致数据库移植性差，不能随意更换数据库</li></ul>\r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"MyBatis_113\"></a>MyBatis框架适用场景</h3>\r\n<ul><li>MyBatis专注于SQL本身，是一个足够灵活的DAO层解决方案。</li><li>对性能的要求很高，或者需求变化较多的项目，如互联网项目，MyBatis将是不错的选择。</li></ul>\r\n<h3><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"Hibernate__MyBatis__120\"></a>Hibernate 和 MyBatis 的区别</h3>\r\n<p><strong>相同点</strong></p>\r\n<p>都是对jdbc的封装，都是持久层的框架，都用于dao层的开发。</p>\r\n<p><strong>不同点</strong></p>\r\n<p>映射关系</p>\r\n<ul><li>MyBatis 是一个半自动映射的框架，配置Java对象与sql语句执行结果的对应关系，多表关联关系配置简单</li><li>Hibernate 是一个全表映射的框架，配置Java对象与数据库表的对应关系，多表关联关系配置复杂</li></ul>\r\n<p>SQL优化和移植性</p>\r\n<ul><li>Hibernate 对SQL语句封装，提供了日志、缓存、级联（级联比 MyBatis 强大）等特性，此外还提供 HQL（Hibernate Query Language）操作数据库，数据库无关性支持好，但会多消耗性能。如果项目需要支持多种数据库，代码开发量少，但SQL语句优化困难。</li><li>MyBatis 需要手动编写 SQL，支持动态 SQL、处理列表、动态生成表名、支持存储过程。开发工作量相对大些。直接使用SQL语句操作数据库，不支持数据库无关性，但sql语句优化容易。</li></ul>\r\n<p>开发难易程度和学习成本</p>\r\n<ul><li> <p>Hibernate 是重量级框架，学习使用门槛高，适合于需求相对稳定，中小型的项目，比如：办公自动化系统</p> </li><li> <p>MyBatis 是轻量级框架，学习使用门槛低，适合于需求变化频繁，大型的项目，比如：互联网电子商务系统</p> </li></ul>\r\n<p><strong>总结</strong></p>\r\n<p>MyBatis 是一个小巧、方便、高效、简单、直接、半自动化的持久层框架，</p>\r\n<p>Hibernate 是一个强大、方便、高效、复杂、间接、全自动化的持久层框架。</p>\r\n<h2><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"MyBatis_154\"></a>MyBatis的解析和运行原理</h2>\r\n<h3><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"MyBatis_156\"></a>MyBatis编程步骤是什么样的？</h3>\r\n<p>1、 创建SqlSessionFactory</p>\r\n<p>2、 通过SqlSessionFactory创建SqlSession</p>\r\n<p>3、 通过sqlsession执行数据库操作</p>\r\n<p>4、 调用session.commit()提交事务</p>\r\n<p>5、 调用session.close()关闭会话</p>\r\n<h3><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"MyBatis_170\"></a>请说说MyBatis的工作原理</h3>\r\n<p>在学习 MyBatis 程序之前，需要了解一下 MyBatis 工作原理，以便于理解程序。MyBatis 的工作原理如下图</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvdXJXb24vaW1hZ2UvbWFzdGVyL015QmF0aXMlRTYlQTElODYlRTYlOUUlQjYlRTYlODAlQkIlRTclQkIlOTMvTXlCYXRpcyVFNSVCNyVBNSVFNCVCRCU5QyVFNSU4RSU5RiVFNyU5MCU4Ni5wbmc\" alt=\"MyBatis工作原理\"></p>\r\n<p>1）读取 MyBatis 配置文件：mybatis-config.xml 为 MyBatis 的全局配置文件，配置了 MyBatis 的运行环境等信息，例如数据库连接信息。</p>\r\n<p>2）加载映射文件。映射文件即 SQL 映射文件，该文件中配置了操作数据库的 SQL 语句，需要在 MyBatis 配置文件 mybatis-config.xml 中加载。mybatis-config.xml 文件可以加载多个映射文件，每个文件对应数据库中的一张表。</p>\r\n<p>3）构造会话工厂：通过 MyBatis 的环境等配置信息构建会话工厂 SqlSessionFactory。</p>\r\n<p>4）创建会话对象：由会话工厂创建 SqlSession 对象，该对象中包含了执行 SQL 语句的所有方法。</p>\r\n<p>5）Executor 执行器：MyBatis 底层定义了一个 Executor 接口来操作数据库，它将根据 SqlSession 传递的参数动态地生成需要执行的 SQL 语句，同时负责查询缓存的维护。</p>\r\n<p>6）MappedStatement 对象：在 Executor 接口的执行方法中有一个 MappedStatement 类型的参数，该参数是对映射信息的封装，用于存储要映射的 SQL 语句的 id、参数等信息。</p>\r\n<p>7）输入参数映射：输入参数类型可以是 Map、List 等集合类型，也可以是基本数据类型和 POJO 类型。输入参数映射过程类似于 JDBC 对 preparedStatement 对象设置参数的过程。</p>\r\n<p>8）输出结果映射：输出结果类型可以是 Map、 List 等集合类型，也可以是基本数据类型和 POJO 类型。输出结果映射过程类似于 JDBC 对结果集的解析过程。</p>\r\n<h3><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"MyBatis_196\"></a>MyBatis的功能架构是怎样的</h3>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvdXJXb24vaW1hZ2UvbWFzdGVyL015QmF0aXMlRTYlQTElODYlRTYlOUUlQjYlRTYlODAlQkIlRTclQkIlOTMvTXlCYXRpcyVFNSU4QSU5RiVFOCU4MyVCRCVFNiU5RSVCNiVFNiU5RSU4NC5wbmc\" alt=\"Mybatis功能框架\"><br> 我们把Mybatis的功能架构分为三层：</p>\r\n<ul><li>API接口层：提供给外部使用的接口API，开发人员通过这些本地API来操纵数据库。接口层一接收到调用请求就会调用数据处理层来完成具体的数据处理。</li><li>数据处理层：负责具体的SQL查找、SQL解析、SQL执行和执行结果映射处理等。它主要的目的是根据调用的请求完成一次数据库操作。</li><li>基础支撑层：负责最基础的功能支撑，包括连接管理、事务管理、配置加载和缓存处理，这些都是共用的东西，将他们抽取出来作为最基础的组件。为上层的数据处理层提供最基础的支撑。</li></ul>\r\n<h3><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"MyBatis_207\"></a>MyBatis的框架架构设计是怎么样的</h3>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvdXJXb24vaW1hZ2UvbWFzdGVyL015QmF0aXMlRTYlQTElODYlRTYlOUUlQjYlRTYlODAlQkIlRTclQkIlOTMvTXlCYXRpcyVFNiVBMSU4NiVFNiU5RSVCNiVFNiU5RSVCNiVFNiU5RSU4NC5wbmc\" alt=\"Mybatis框架架构\"></p>\r\n<p>这张图从上往下看。MyBatis的初始化，会从mybatis-config.xml配置文件，解析构造成Configuration这个类，就是图中的红框。</p>\r\n<p>(1)加载配置：配置来源于两个地方，一处是配置文件，一处是Java代码的注解，将SQL的配置信息加载成为一个个MappedStatement对象（包括了传入参数映射配置、执行的SQL语句、结果映射配置），存储在内存中。</p>\r\n<p>(2)SQL解析：当API接口层接收到调用请求时，会接收到传入SQL的ID和传入对象（可以是Map、JavaBean或者基本数据类型），Mybatis会根据SQL的ID找到对应的MappedStatement，然后根据传入参数对象对MappedStatement进行解析，解析后可以得到最终要执行的SQL语句和参数。</p>\r\n<p>(3)SQL执行：将最终得到的SQL和参数拿到数据库进行执行，得到操作数据库的结果。</p>\r\n<p>(4)结果映射：将操作数据库的结果按照映射的配置进行转换，可以转换成HashMap、JavaBean或者基本数据类型，并将最终结果返回。</p>\r\n<h3><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"_222\"></a>为什么需要预编译</h3>\r\n<ol><li> <p>定义：<br> SQL 预编译指的是数据库驱动在发送 SQL 语句和参数给 DBMS 之前对 SQL 语句进行编译，这样 DBMS 执行 SQL 时，就不需要重新编译。</p> </li><li> <p>为什么需要预编译<br> JDBC 中使用对象 PreparedStatement 来抽象预编译语句，使用预编译。预编译阶段可以优化 SQL 的执行。预编译之后的 SQL 多数情况下可以直接执行，DBMS 不需要再次编译，越复杂的SQL，编译的复杂度将越大，预编译阶段可以合并多次操作为一个操作。同时预编译语句对象可以重复利用。把一个 SQL 预编译后产生的 PreparedStatement 对象缓存下来，下次对于同一个SQL，可以直接使用这个缓存的 PreparedState 对象。Mybatis默认情况下，将对所有的 SQL 进行预编译。</p> </li></ol>\r\n<h3><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"MybatisExecutor_232\"></a>Mybatis都有哪些Executor执行器？它们之间的区别是什么？</h3>\r\n<p>Mybatis有三种基本的Executor执行器，SimpleExecutor、ReuseExecutor、BatchExecutor。</p>\r\n<p><strong>SimpleExecutor</strong>：每执行一次update或select，就开启一个Statement对象，用完立刻关闭Statement对象。</p>\r\n<p><strong>ReuseExecutor</strong>：执行update或select，以sql作为key查找Statement对象，存在就使用，不存在就创建，用完后，不关闭Statement对象，而是放置于Map&lt;String, Statement&gt;内，供下一次使用。简言之，就是重复使用Statement对象。</p>\r\n<p><strong>BatchExecutor</strong>：执行update（没有select，JDBC批处理不支持select），将所有sql都添加到批处理中（addBatch()），等待统一执行（executeBatch()），它缓存了多个Statement对象，每个Statement对象都是addBatch()完毕后，等待逐一执行executeBatch()批处理。与JDBC批处理相同。</p>\r\n<p>作用范围：Executor的这些特点，都严格限制在SqlSession生命周期范围内。</p>\r\n<h3><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"MybatisExecutor_246\"></a>Mybatis中如何指定使用哪一种Executor执行器？</h3>\r\n<p>在Mybatis配置文件中，在设置（settings）可以指定默认的ExecutorType执行器类型，也可以手动给DefaultSqlSessionFactory的创建SqlSession的方法传递ExecutorType类型参数，如SqlSession openSession(ExecutorType execType)。</p>\r\n<p>配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 执行器将重用语句并执行批量更新。</p>\r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"Mybatis_254\"></a>Mybatis是否支持延迟加载？如果支持，它的实现原理是什么？</h3>\r\n<p>Mybatis仅支持association关联对象和collection关联集合对象的延迟加载，association指的就是一对一，collection指的就是一对多查询。在Mybatis配置文件中，可以配置是否启用延迟加载lazyLoadingEnabled=true|false。</p>\r\n<p>它的原理是，使用CGLIB创建目标对象的代理对象，当调用目标方法时，进入拦截器方法，比如调用a.getB().getName()，拦截器invoke()方法发现a.getB()是null值，那么就会单独发送事先保存好的查询关联B对象的sql，把B查询上来，然后调用a.setB(b)，于是a的对象b属性就有值了，接着完成a.getB().getName()方法的调用。这就是延迟加载的基本原理。</p>\r\n<p>当然了，不光是Mybatis，几乎所有的包括Hibernate，支持延迟加载的原理都是一样的。</p>\r\n<h2><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"_266\"></a>映射器</h2>\r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"_268\"></a>#{}和${}的区别</h3>\r\n<ul><li> <p>#{}是占位符，预编译处理；${}是拼接符，字符串替换，没有预编译处理。</p> </li><li> <p>Mybatis在处理#{}时，#{}传入参数是以字符串传入，会将SQL中的#{}替换为?号，调用PreparedStatement的set方法来赋值。</p> </li><li> <p>Mybatis在处理<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\r\n\r\n\r\n\r\n\r\n\r\n          时\r\n\r\n\r\n          ，\r\n\r\n\r\n          是\r\n\r\n\r\n          原\r\n\r\n\r\n          值\r\n\r\n\r\n          传\r\n\r\n\r\n          入\r\n\r\n\r\n          ，\r\n\r\n\r\n          就\r\n\r\n\r\n          是\r\n\r\n\r\n          把\r\n\r\n\r\n\r\n         {}时，是原值传入，就是把\r\n\r\n\r\n      </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0em; vertical-align: 0em;\"></span><span class=\"mord\"></span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">原</span><span class=\"mord cjk_fallback\">值</span><span class=\"mord cjk_fallback\">传</span><span class=\"mord cjk_fallback\">入</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">就</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">把</span></span></span></span></span>{}替换成变量的值，相当于JDBC中的Statement编译</p> </li><li> <p>变量替换后，#{} 对应的变量自动加上单引号 ‘’；变量替换后，${} 对应的变量不会加上单引号 ‘’</p> </li><li> <p>#{} 可以有效的防止SQL注入，提高系统安全性；${} 不能防止SQL 注入</p> </li><li> <p>#{} 的变量替换是在DBMS 中；${} 的变量替换是在 DBMS 外</p> </li></ul>\r\n<h3><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"like_282\"></a>模糊查询like语句该怎么写</h3>\r\n<p>（1）’%${question}%’ 可能引起SQL注入，不推荐</p>\r\n<p>（2）\"%\"#{question}\"%\" 注意：因为#{…}解析成sql语句时候，会在变量外侧自动加单引号’ '，所以这里 % 需要使用双引号\" \"，不能使用单引号 ’ '，不然会查不到任何结果。</p>\r\n<p>（3）CONCAT(’%’,#{question},’%’) 使用CONCAT()函数，推荐</p>\r\n<p>（4）使用bind标签</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>listUserLikeUsername<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>com.jourwon.pojo.User<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n　　<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bind</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>%<span class=\"token punctuation\">'</span> + username + <span class=\"token punctuation\">'</span>%<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\r\n　　select id,sex,age,username,password from person where username LIKE #{pattern}\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"mapper_301\"></a>在mapper中如何传递多个参数</h3>\r\n<p><strong>方法1：顺序传参法</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> User <span class=\"token function\">selectUser</span><span class=\"token punctuation\">(</span>String name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> deptId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"selectUser\"</span> resultMap<span class=\"token operator\">=</span><span class=\"token string\">\"UserResultMap\"</span><span class=\"token operator\">&gt;</span>\r\n    select <span class=\"token operator\">*</span> from user\r\n    where user_name <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span> and dept_id <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p>#{}里面的数字代表传入参数的顺序。</p>\r\n<p>这种方法不建议使用，sql层表达不直观，且一旦顺序调整容易出错。</p>\r\n<p><strong>方法2：@Param注解传参法</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> User <span class=\"token function\">selectUser</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userName\"</span><span class=\"token punctuation\">)</span> String name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deptId\"</span><span class=\"token punctuation\">)</span> deptId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"selectUser\"</span> resultMap<span class=\"token operator\">=</span><span class=\"token string\">\"UserResultMap\"</span><span class=\"token operator\">&gt;</span>\r\n    select <span class=\"token operator\">*</span> from user\r\n    where user_name <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>userName<span class=\"token punctuation\">}</span> and dept_id <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>deptId<span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p>#{}里面的名称对应的是注解@Param括号里面修饰的名称。</p>\r\n<p>这种方法在参数不多的情况还是比较直观的，推荐使用。</p>\r\n<p><strong>方法3：Map传参法</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> User <span class=\"token function\">selectUser</span><span class=\"token punctuation\">(</span>Map<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">&gt;</span></span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"selectUser\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"java.util.Map\"</span> resultMap<span class=\"token operator\">=</span><span class=\"token string\">\"UserResultMap\"</span><span class=\"token operator\">&gt;</span>\r\n    select <span class=\"token operator\">*</span> from user\r\n    where user_name <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>userName<span class=\"token punctuation\">}</span> and dept_id <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>deptId<span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p>#{}里面的名称对应的是Map里面的key名称。</p>\r\n<p>这种方法适合传递多个参数，且参数易变能灵活传递的情况。</p>\r\n<p><strong>方法4：Java Bean传参法</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> User <span class=\"token function\">selectUser</span><span class=\"token punctuation\">(</span>User user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"selectUser\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"com.jourwon.pojo.User\"</span> resultMap<span class=\"token operator\">=</span><span class=\"token string\">\"UserResultMap\"</span><span class=\"token operator\">&gt;</span>\r\n    select <span class=\"token operator\">*</span> from user\r\n    where user_name <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>userName<span class=\"token punctuation\">}</span> and dept_id <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>deptId<span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p>#{}里面的名称对应的是User类里面的成员属性。</p>\r\n<p>这种方法直观，需要建一个实体类，扩展不容易，需要加属性，但代码可读性强，业务逻辑处理方便，推荐使用。</p>\r\n<h3><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"Mybatis_371\"></a>Mybatis如何执行批量操作</h3>\r\n<p><strong>使用foreach标签</strong></p>\r\n<p>foreach的主要用在构建in条件中，它可以在SQL语句中进行迭代一个集合。foreach标签的属性主要有item，index，collection，open，separator，close。</p>\r\n<ul><li>item　　表示集合中每一个元素进行迭代时的别名，随便起的变量名；</li><li>index　　指定一个名字，用于表示在迭代过程中，每次迭代到的位置，不常用；</li><li>open　　表示该语句以什么开始，常用“(”；</li><li>separator表示在每次进行迭代之间以什么符号作为分隔符，常用“,”；</li><li>close　　表示以什么结束，常用“)”。</li></ul>\r\n<p>在使用foreach的时候最关键的也是最容易出错的就是collection属性，该属性是必须指定的，但是在不同情况下，该属性的值是不一样的，主要有一下3种情况：</p>\r\n<ol><li>如果传入的是单参数且参数类型是一个List的时候，collection属性值为list</li><li>如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array</li><li>如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可以封装成map，实际上如果你在传入参数的时候，在MyBatis里面也是会把它封装成一个Map的，<br> map的key就是参数名，所以这个时候collection属性值就是传入的List或array对象在自己封装的map里面的key</li></ol>\r\n<p>具体用法如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">&lt;!-- 批量保存(foreach插入多条数据两种方法)\r\n       int addEmpsBatch(@Param(\"emps\") List&lt;Employee&gt; emps); --&gt;</span>\r\n<span class=\"token comment\">&lt;!-- MySQL下批量保存，可以foreach遍历 mysql支持values(),(),()语法 --&gt;</span> //推荐使用\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>addEmpsBatch<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n    INSERT INTO emp(ename,gender,email,did)\r\n    VALUES\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>foreach</span> <span class=\"token attr-name\">collection</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>emps<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">item</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>emp<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">separator</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>,<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n        (#{emp.eName},#{emp.gender},#{emp.email},#{emp.dept.id})\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>foreach</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">&lt;!-- 这种方式需要数据库连接属性allowMutiQueries=true的支持\r\n 如jdbc.url=jdbc:mysql://localhost:3306/mybatis?allowMultiQueries=true --&gt;</span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>addEmpsBatch<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>foreach</span> <span class=\"token attr-name\">collection</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>emps<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">item</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>emp<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">separator</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n        INSERT INTO emp(ename,gender,email,did)\r\n        VALUES(#{emp.eName},#{emp.gender},#{emp.email},#{emp.dept.id})\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>foreach</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<p><strong>使用ExecutorType.BATCH</strong></p>\r\n<p>Mybatis内置的ExecutorType有3种，默认为simple,该模式下它为每个语句的执行创建一个新的预处理语句，单条提交sql；而batch模式重复使用已经预处理的语句，并且批量执行所有更新语句，显然batch性能将更优； 但batch模式也有自己的问题，比如在Insert操作时，在事务没有提交之前，是没有办法获取到自增的id，这在某型情形下是不符合业务要求的</p>\r\n<p>具体用法如下</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">//批量保存方法测试</span>\r\n<span class=\"token annotation punctuation\">@Test</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testBatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> IOException<span class=\"token punctuation\">{<!-- --></span>\r\n    SqlSessionFactory sqlSessionFactory <span class=\"token operator\">=</span> <span class=\"token function\">getSqlSessionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">//可以执行批量操作的sqlSession</span>\r\n    SqlSession openSession <span class=\"token operator\">=</span> sqlSessionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span>ExecutorType<span class=\"token punctuation\">.</span>BATCH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token comment\">//批量保存执行前时间</span>\r\n    <span class=\"token keyword\">long</span> start <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        EmployeeMapper mapper <span class=\"token operator\">=</span> openSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span>EmployeeMapper<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            mapper<span class=\"token punctuation\">.</span><span class=\"token function\">addEmp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Employee</span><span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        openSession<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">long</span> end <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//批量保存执行后的时间</span>\r\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"执行时长\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//批量 预编译sql一次==》设置参数==》10000次==》执行1次   677</span>\r\n        <span class=\"token comment\">//非批量  （预编译=设置参数=执行 ）==》10000次   1121</span>\r\n\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        openSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li></ul></pre>\r\n<p>mapper和mapper.xml如下</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">EmployeeMapper</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token comment\">//批量保存员工</span>\r\n    Long <span class=\"token function\">addEmp</span><span class=\"token punctuation\">(</span>Employee employee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">namespace</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>com.jourwon.mapper.EmployeeMapper<span class=\"token punctuation\">\"</span></span>\r\n     <span class=\"token attr-name\">&lt;!--批量保存员工</span> <span class=\"token attr-name\">--</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>addEmp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n        insert into employee(lastName,email,gender)\r\n        values(#{lastName},#{email},#{gender})\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mapper</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h3><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"_478\"></a>如何获取生成的主键</h3>\r\n<p><strong>对于支持主键自增的数据库（MySQL）</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>insertUser<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">useGeneratedKeys</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keyProperty</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>userId<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">&gt;</span></span>\r\n    insert into user(\r\n    user_name, user_password, create_time)\r\n    values(#{userName}, #{userPassword} , #{createTime, jdbcType= TIMESTAMP})\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<p>parameterType 可以不写，Mybatis可以推断出传入的数据类型。如果想要访问主键，那么应当parameterType 应当是java实体或者Map。这样数据在插入之后 可以通过ava实体或者Map 来获取主键值。通过 getUserId获取主键</p>\r\n<p><strong>不支持主键自增的数据库（Oracle）</strong></p>\r\n<p>对于像Oracle这样的数据，没有提供主键自增的功能，而是使用序列的方式获取自增主键。<br> 可以使用<code>＜selectKey＞</code>标签来获取主键的值，这种方式不仅适用于不提供主键自增功能的数据库，也适用于提供主键自增功能的数据库<br> <code>＜selectKey＞</code>一般的用法</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>selectKey</span> <span class=\"token attr-name\">keyColumn</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>long<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keyProperty</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">order</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>BEFORE<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>selectKey</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<div class=\"table-box\"><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>keyProperty</td><td>selectKey 语句结果应该被设置的目标属性。如果希望得到多个生成的列，也可以是逗号分隔的属性名称列表。</td></tr><tr><td>keyColumn</td><td>匹配属性的返回结果集中的列名称。如果希望得到多个生成的列，也可以是逗号分隔的属性名称列表。</td></tr><tr><td>resultType</td><td>结果的类型，MyBatis 通常可以推算出来。MyBatis 允许任何简单类型用作主键的类型，包括字符串。如果希望作用于多个生成的列，则可以使用一个包含期望属性的 Object 或一个 Map。</td></tr><tr><td>order</td><td>值可为BEFORE 或 AFTER。如果是 BEFORE，那么它会先执行selectKey设置 keyProperty 然后执行插入语句。如果为AFTER则相反。</td></tr><tr><td>statementType</td><td>使用何种语句类型，默认PREPARED。 有STATEMENT，PREPARED 和 CALLABLE 语句的映射类型。</td></tr></tbody></table></div>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>insertUser<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">&gt;</span></span>\r\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>selectKey</span> <span class=\"token attr-name\">keyColumn</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>long<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keyProperty</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>userId<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">order</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>BEFORE<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n\t\tSELECT USER_ID.nextval as id from dual\r\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>selectKey</span><span class=\"token punctuation\">&gt;</span></span>\r\n\tinsert into user(\r\n\tuser_id,user_name, user_password, create_time)\r\n\tvalues(#{userId},#{userName}, #{userPassword} , #{createTime, jdbcType= TIMESTAMP})\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<p>此时会将Oracle生成的主键值赋予userId变量。这个userId 就是USER对象的属性，这样就可以将生成的主键值返回了。如果仅仅是在insert语句中使用但是不返回，此时keyProperty=“任意自定义变量名”，resultType 可以不写。<br> Oracle 数据库中的值要设置为 BEFORE ，这是因为 Oracle中需要先从序列获取值，然后将值作为主键插入到数据库中。</p>\r\n<p><strong>扩展</strong><br> 如果Mysql 使用selectKey的方式获取主键，需要注意下面两点：</p>\r\n<p>order ： AFTER<br> 获取递增主键值 ：SELECT LAST_INSERT_ID()</p>\r\n<h3><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"__537\"></a>当实体类中的属性名和表中的字段名不一样 ，怎么办</h3>\r\n<p>第1种： 通过在查询的SQL语句中定义字段名的别名，让字段名的别名和实体类的属性名一致。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>getOrder<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>int<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>com.jourwon.pojo.Order<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n       select order_id id, order_no orderno ,order_price price form orders where order_id=#{id};\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<p>第2种： 通过<code>&lt;resultMap&gt;</code>来映射字段名和实体类属性名的一一对应的关系。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>getOrder<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>int<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>orderResultMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n\tselect * from orders where order_id=#{id}\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\r\n\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resultMap</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>com.jourwon.pojo.Order<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>orderResultMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>!–用id属性来映射主键字段–</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>order_id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>!–用result属性来映射非主键字段，property为实体类属性名，column为数据库表中的属性–</span><span class=\"token punctuation\">&gt;</span></span>\r\n    &lt;result property =\"orderno\" column =\"order_no\"/&gt;\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>price<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>order_price<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>reslutMap</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li></ul></pre>\r\n<h3><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"Mapper__566\"></a>Mapper 编写有哪几种方式？</h3>\r\n<p>第一种：接口实现类继承 SqlSessionDaoSupport：使用此种方法需要编写mapper 接口，mapper 接口实现类、mapper.xml 文件。</p>\r\n<p>（1）在 sqlMapConfig.xml 中配置 mapper.xml 的位置</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mappers</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">resource</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mapper.xml 文件的地址<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">resource</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mapper.xml 文件的地址<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mappers</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>（2）定义 mapper 接口</p>\r\n<p>（3）实现类集成 SqlSessionDaoSupport</p>\r\n<p>mapper 方法中可以 this.getSqlSession()进行数据增删改查。</p>\r\n<p>（4）spring 配置</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span> <span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mapper 接口的实现<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sqlSessionFactory<span class=\"token punctuation\">\"</span></span>\r\n    <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sqlSessionFactory<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>第二种：使用 org.mybatis.spring.mapper.MapperFactoryBean：</p>\r\n<p>（1）在 sqlMapConfig.xml 中配置 mapper.xml 的位置，如果 mapper.xml 和mappre 接口的名称相同且在同一个目录，这里可以不用配置</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mappers</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">resource</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mapper.xml 文件的地址<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">resource</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mapper.xml 文件的地址<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mappers</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>（2）定义 mapper 接口：</p>\r\n<p>（3）mapper.xml 中的 namespace 为 mapper 接口的地址</p>\r\n<p>（4）mapper 接口中的方法名和 mapper.xml 中的定义的 statement 的 id 保持一致</p>\r\n<p>（5）Spring 中定义</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>org.mybatis.spring.mapper.MapperFactoryBean<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mapperInterface<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mapper 接口地址<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sqlSessionFactory<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sqlSessionFactory<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>第三种：使用 mapper 扫描器：</p>\r\n<p>（1）mapper.xml 文件编写：</p>\r\n<p>mapper.xml 中的 namespace 为 mapper 接口的地址；</p>\r\n<p>mapper 接口中的方法名和 mapper.xml 中的定义的 statement 的 id 保持一致；</p>\r\n<p>如果将 mapper.xml 和 mapper 接口的名称保持一致则不用在 sqlMapConfig.xml中进行配置。</p>\r\n<p>（2）定义 mapper 接口：</p>\r\n<p>注意 mapper.xml 的文件名和 mapper 的接口名称保持一致，且放在同一个目录</p>\r\n<p>（3）配置 mapper 扫描器：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-xml has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>org.mybatis.spring.mapper.MapperScannerConfigurer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>basePackage<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mapper 接口包地址\r\n    <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sqlSessionFactoryBeanName<span class=\"token punctuation\">\"</span></span>\r\n    <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sqlSessionFactory<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p>（4）使用扫描器后从 spring 容器中获取 mapper 的实现对象。</p>\r\n<h3><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"MyBatis_649\"></a>什么是MyBatis的接口绑定？有哪些实现方式？</h3>\r\n<p>接口绑定，就是在MyBatis中任意定义接口，然后把接口里面的方法和SQL语句绑定，我们直接调用接口方法就可以，这样比起原来了SqlSession提供的方法我们可以有更加灵活的选择和设置。</p>\r\n<p>接口绑定有两种实现方式</p>\r\n<p>通过注解绑定，就是在接口的方法上面加上 @Select、@Update等注解，里面包含Sql语句来绑定；</p>\r\n<p>通过xml里面写SQL来绑定， 在这种情况下，要指定xml映射文件里面的namespace必须为接口的全路径名。当Sql语句比较简单时候，用注解绑定， 当SQL语句比较复杂时候，用xml绑定，一般用xml绑定的比较多。</p>\r\n<h3><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"MyBatismapper_661\"></a>使用MyBatis的mapper接口调用时有哪些要求？</h3>\r\n<p>1、Mapper接口方法名和mapper.xml中定义的每个sql的id相同。</p>\r\n<p>2、Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql 的parameterType的类型相同。</p>\r\n<p>3、Mapper接口方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型相同。</p>\r\n<p>4、Mapper.xml文件中的namespace即是mapper接口的类路径。</p>\r\n<h3><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"XmlDaoDaoDao_673\"></a>最佳实践中，通常一个Xml映射文件，都会写一个Dao接口与之对应，请问，这个Dao接口的工作原理是什么？Dao接口里的方法，参数不同时，方法能重载吗</h3>\r\n<p>Dao接口，就是人们常说的Mapper接口，接口的全限名，就是映射文件中的namespace的值，接口的方法名，就是映射文件中MappedStatement的id值，接口方法内的参数，就是传递给sql的参数。Mapper接口是没有实现类的，当调用接口方法时，接口全限名+方法名拼接字符串作为key值，可唯一定位一个MappedStatement，举例：com.mybatis3.mappers.StudentDao.findStudentById，可以唯一找到namespace为com.mybatis3.mappers.StudentDao下面id = findStudentById的MappedStatement。在Mybatis中，每一个<code>&lt;select&gt;</code>、<code>&lt;insert&gt;</code>、<code>&lt;update&gt;</code>、<code>&lt;delete&gt;</code>标签，都会被解析为一个MappedStatement对象。</p>\r\n<p>Dao接口里的方法，是不能重载的，因为是全限名+方法名的保存和寻找策略。</p>\r\n<p>Dao接口的工作原理是JDK动态代理，Mybatis运行时会使用JDK动态代理为Dao接口生成代理proxy对象，代理对象proxy会拦截接口方法，转而执行MappedStatement所代表的sql，然后将sql执行结果返回。</p>\r\n<h3><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"MybatisXmlXmlid_683\"></a>Mybatis的Xml映射文件中，不同的Xml映射文件，id是否可以重复？</h3>\r\n<p>不同的Xml映射文件，如果配置了namespace，那么id可以重复；如果没有配置namespace，那么id不能重复；毕竟namespace不是必须的，只是最佳实践而已。</p>\r\n<p>原因就是namespace+id是作为Map&lt;String, MappedStatement&gt;的key使用的，如果没有namespace，就剩下id，那么，id重复会导致数据互相覆盖。有了namespace，自然id就可以重复，namespace不同，namespace+id自然也就不同。</p>\r\n<h3><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"MybatisXmlMybatis_691\"></a>简述Mybatis的Xml映射文件和Mybatis内部数据结构之间的映射关系？</h3>\r\n<p>答：Mybatis将所有Xml配置信息都封装到All-In-One重量级对象Configuration内部。在Xml映射文件中，<code>&lt;parameterMap&gt;</code>标签会被解析为ParameterMap对象，其每个子元素会被解析为ParameterMapping对象。<code>&lt;resultMap&gt;</code>标签会被解析为ResultMap对象，其每个子元素会被解析为ResultMapping对象。每一个<code>&lt;select&gt;</code>、<code>&lt;insert&gt;</code>、<code>&lt;update&gt;</code>、<code>&lt;delete&gt;</code>标签均会被解析为MappedStatement对象，标签内的sql会被解析为BoundSql对象。</p>\r\n<h3><a name=\"t32\"></a><a name=\"t32\"></a><a id=\"Mybatissql_697\"></a>Mybatis是如何将sql执行结果封装为目标对象并返回的？都有哪些映射形式？</h3>\r\n<p>第一种是使用<code>&lt;resultMap&gt;</code>标签，逐一定义列名和对象属性名之间的映射关系。</p>\r\n<p>第二种是使用sql列的别名功能，将列别名书写为对象属性名，比如T_NAME AS NAME，对象属性名一般是name，小写，但是列名不区分大小写，Mybatis会忽略列名大小写，智能找到与之对应对象属性名，你甚至可以写成T_NAME AS NaMe，Mybatis一样可以正常工作。</p>\r\n<p>有了列名与属性名的映射关系后，Mybatis通过反射创建对象，同时使用反射给对象的属性逐一赋值并返回，那些找不到映射关系的属性，是无法完成赋值的。</p>\r\n<h3><a name=\"t33\"></a><a name=\"t33\"></a><a id=\"Xmlselectinsertupdaedelete_707\"></a>Xml映射文件中，除了常见的select|insert|updae|delete标签之外，还有哪些标签？</h3>\r\n<p>还有很多其他的标签，<code>&lt;resultMap&gt;</code>、<code>&lt;parameterMap&gt;</code>、<code>&lt;sql&gt;</code>、<code>&lt;include&gt;</code>、<code>&lt;selectKey&gt;</code>，加上动态sql的9个标签，trim|where|set|foreach|if|choose|when|otherwise|bind等，其中<code>&lt;sql&gt;</code>为sql片段标签，通过<code>&lt;include&gt;</code>标签引入sql片段，<code>&lt;selectKey&gt;</code>为不支持自增的主键生成策略标签。</p>\r\n<h3><a name=\"t34\"></a><a name=\"t34\"></a><a id=\"MybatisAincludeBBAA_713\"></a>Mybatis映射文件中，如果A标签通过include引用了B标签的内容，请问，B标签能否定义在A标签的后面，还是说必须定义在A标签的前面？</h3>\r\n<p>虽然Mybatis解析Xml映射文件是按照顺序解析的，但是，被引用的B标签依然可以定义在任何地方，Mybatis都可以正确识别。</p>\r\n<p>原理是，Mybatis解析A标签，发现A标签引用了B标签，但是B标签尚未解析到，尚不存在，此时，Mybatis会将A标签标记为未解析状态，然后继续解析余下的标签，包含B标签，待所有标签解析完毕，Mybatis会重新解析那些被标记为未解析的标签，此时再解析A标签时，B标签已经存在，A标签也就可以正常解析完成了。</p>\r\n<h2><a name=\"t35\"></a><a name=\"t35\"></a><a id=\"_723\"></a>高级查询</h2>\r\n<h3><a name=\"t36\"></a><a name=\"t36\"></a><a id=\"MyBatis_725\"></a>MyBatis实现一对一，一对多有几种方式，怎么操作的？</h3>\r\n<p>有联合查询和嵌套查询。联合查询是几个表联合查询，只查询一次，通过在resultMap里面的association，collection节点配置一对一，一对多的类就可以完成</p>\r\n<p>嵌套查询是先查一个表，根据这个表里面的结果的外键id，去再另外一个表里面查询数据，也是通过配置association，collection，但另外一个表的查询通过select节点配置。</p>\r\n<h3><a name=\"t37\"></a><a name=\"t37\"></a><a id=\"MybatisEnum_733\"></a>Mybatis是否可以映射Enum枚举类？</h3>\r\n<p>Mybatis可以映射枚举类，不单可以映射枚举类，Mybatis可以映射任何对象到表的一列上。映射方式为自定义一个TypeHandler，实现TypeHandler的setParameter()和getResult()接口方法。</p>\r\n<p>TypeHandler有两个作用，一是完成从javaType至jdbcType的转换，二是完成jdbcType至javaType的转换，体现为setParameter()和getResult()两个方法，分别代表设置sql问号占位符参数和获取列查询结果。</p>\r\n<h2><a name=\"t38\"></a><a name=\"t38\"></a><a id=\"SQL_743\"></a>动态SQL</h2>\r\n<h3><a name=\"t39\"></a><a name=\"t39\"></a><a id=\"Mybatissqlsqlsql_745\"></a>Mybatis动态sql是做什么的？都有哪些动态sql？能简述一下动态sql的执行原理不？</h3>\r\n<p>Mybatis动态sql可以让我们在Xml映射文件内，以标签的形式编写动态sql，完成逻辑判断和动态拼接sql的功能，Mybatis提供了9种动态sql标签trim|where|set|foreach|if|choose|when|otherwise|bind。</p>\r\n<p>其执行原理为，使用OGNL从sql参数对象中计算表达式的值，根据表达式的值动态拼接sql，以此来完成动态sql的功能。</p>\r\n<h2><a name=\"t40\"></a><a name=\"t40\"></a><a id=\"_755\"></a>插件模块</h2>\r\n<h3><a name=\"t41\"></a><a name=\"t41\"></a><a id=\"Mybatis_757\"></a>Mybatis是如何进行分页的？分页插件的原理是什么？</h3>\r\n<p>Mybatis使用RowBounds对象进行分页，它是针对ResultSet结果集执行的内存分页，而非物理分页，可以在sql内直接书写带有物理分页的参数来完成物理分页功能，也可以使用分页插件来完成物理分页。</p>\r\n<p>分页插件的基本原理是使用Mybatis提供的插件接口，实现自定义插件，在插件的拦截方法内拦截待执行的sql，然后重写sql，根据dialect方言，添加对应的物理分页语句和物理分页参数。</p>\r\n<p>举例：select * from student，拦截sql后重写为：select t.* from (select * from student) t limit 0, 10</p>\r\n<h3><a name=\"t42\"></a><a name=\"t42\"></a><a id=\"Mybatis_767\"></a>简述Mybatis的插件运行原理，以及如何编写一个插件。</h3>\r\n<p>Mybatis仅可以编写针对ParameterHandler、ResultSetHandler、StatementHandler、Executor这4种接口的插件，Mybatis使用JDK的动态代理，为需要拦截的接口生成代理对象以实现接口方法拦截功能，每当执行这4种接口对象的方法时，就会进入拦截方法，具体就是InvocationHandler的invoke()方法，当然，只会拦截那些你指定需要拦截的方法。</p>\r\n<p>实现Mybatis的Interceptor接口并复写intercept()方法，然后在给插件编写注解，指定要拦截哪一个接口的哪些方法即可，记住，别忘了在配置文件中配置你编写的插件。</p>\r\n<h2><a name=\"t43\"></a><a name=\"t43\"></a><a id=\"_777\"></a>缓存</h2>\r\n<h3><a name=\"t44\"></a><a name=\"t44\"></a><a id=\"Mybatis_779\"></a>Mybatis的一级、二级缓存</h3>\r\n<p>1）一级缓存: 基于 PerpetualCache 的 HashMap 本地缓存，其存储作用域为 Session，当 Session flush 或 close 之后，该 Session 中的所有 Cache 就将清空，默认打开一级缓存。</p>\r\n<p>2）二级缓存与一级缓存其机制相同，默认也是采用 PerpetualCache，HashMap 存储，不同在于其存储作用域为 Mapper(Namespace)，并且可自定义存储源，如 Ehcache。默认不打开二级缓存，要开启二级缓存，使用二级缓存属性类需要实现Serializable序列化接口(可用来保存对象的状态),可在它的映射文件中配置<code>&lt;cache/&gt;</code> ；</p>\r\n<p>3）对于缓存数据更新机制，当某一个作用域(一级缓存 Session/二级缓存Namespaces)的进行了C/U/D 操作后，默认该作用域下所有 select 中的缓存将被 clear。</p>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_myBatis.vue?vue&type=template&id=01afa05a\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>Redis面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200116103941934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"\"></p>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"_36\"></a>概述</h2>\r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"Redis_38\"></a>什么是Redis</h3>\r\n<p>Redis(Remote Dictionary Server) 是一个使用 C 语言编写的，开源的（BSD许可）高性能非关系型（NoSQL）的键值对数据库。</p>\r\n<p>Redis 可以存储键和五种不同类型的值之间的映射。键的类型只能为字符串，值支持五种数据类型：字符串、列表、集合、散列表、有序集合。</p>\r\n<p>与传统数据库不同的是 Redis 的数据是存在内存中的，所以读写速度非常快，因此 redis 被广泛应用于缓存方向，每秒可以处理超过 10万次读写操作，是已知性能最快的Key-Value DB。另外，Redis 也经常用来做分布式锁。除此之外，Redis 支持事务 、持久化、LUA脚本、LRU驱动事件、多种集群方案。</p>\r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"Redis_48\"></a>Redis有哪些优缺点</h3>\r\n<p>优点</p>\r\n<ul><li>读写性能优异， Redis能读的速度是110000次/s，写的速度是81000次/s。</li><li>支持数据持久化，支持AOF和RDB两种持久化方式。</li><li>支持事务，Redis的所有操作都是原子性的，同时Redis还支持对几个操作合并后的原子性执行。</li><li>数据结构丰富，除了支持string类型的value外还支持hash、set、zset、list等数据结构。</li><li>支持主从复制，主机会自动将数据同步到从机，可以进行读写分离。</li></ul>\r\n<p>缺点</p>\r\n<ul><li>数据库容量受到物理内存的限制，不能用作海量数据的高性能读写，因此Redis适合的场景主要局限在较小数据量的高性能操作和运算上。</li><li>Redis 不具备自动容错和恢复功能，主机从机的宕机都会导致前端部分读写请求失败，需要等待机器重启或者手动切换前端的IP才能恢复。</li><li>主机宕机，宕机前有部分数据未能及时同步到从机，切换IP后还会引入数据不一致的问题，降低了系统的可用性。</li><li>Redis 较难支持在线扩容，在集群容量达到上限时在线扩容会变得很复杂。为避免这一问题，运维人员在系统上线时必须确保有足够的空间，这对资源造成了很大的浪费。</li></ul>\r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"_Redis__69\"></a>为什么要用 Redis /为什么要用缓存</h3>\r\n<p>主要从“高性能”和“高并发”这两点来看待这个问题。</p>\r\n<p><strong>高性能：</strong></p>\r\n<p>假如用户第一次访问数据库中的某些数据。这个过程会比较慢，因为是从硬盘上读取的。将该用户访问的数据存在数缓存中，这样下一次再访问这些数据的时候就可以直接从缓存中获取了。操作缓存就是直接操作内存，所以速度相当快。如果数据库中的对应数据改变的之后，同步改变缓存中相应的数据即可！</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8xNDUzNDg2OS02N2YxOGVmY2FmZTQ2NjlhLmpwZw?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p><strong>高并发：</strong></p>\r\n<p>直接操作缓存能够承受的请求是远远大于直接访问数据库的，所以我们可以考虑把数据库中的部分数据转移到缓存中去，这样用户的一部分请求会直接到缓存这里而不用经过数据库。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8xNDUzNDg2OS0wOWIxZDI3OWEwNWVmNWJjLmpwZw?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<h3><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"_Redis__mapguava__89\"></a>为什么要用 Redis 而不用 map/guava 做缓存?</h3>\r\n<p>缓存分为本地缓存和分布式缓存。以 Java 为例，使用自带的 map 或者 guava 实现的是本地缓存，最主要的特点是轻量以及快速，生命周期随着 jvm 的销毁而结束，并且在多实例的情况下，每个实例都需要各自保存一份缓存，缓存不具有一致性。</p>\r\n<p>使用 redis 或 memcached 之类的称为分布式缓存，在多实例的情况下，各实例共用一份缓存数据，缓存具有一致性。缺点是需要保持 redis 或 memcached服务的高可用，整个程序架构上较为复杂。</p>\r\n<h3><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"Redis_97\"></a>Redis为什么这么快</h3>\r\n<p>1、完全基于内存，绝大部分请求是纯粹的内存操作，非常快速。数据存在内存中，类似于 HashMap，HashMap 的优势就是查找和操作的时间复杂度都是O(1)；</p>\r\n<p>2、数据结构简单，对数据操作也简单，Redis 中的数据结构是专门进行设计的；</p>\r\n<p>3、采用单线程，避免了不必要的上下文切换和竞争条件，也不存在多进程或者多线程导致的切换而消耗 CPU，不用去考虑各种锁的问题，不存在加锁释放锁操作，没有因为可能出现死锁而导致的性能消耗；</p>\r\n<p>4、使用多路 I/O 复用模型，非阻塞 IO；</p>\r\n<p>5、使用底层模型不同，它们之间底层实现方式以及与客户端之间通信的应用协议不一样，Redis 直接自己构建了 VM 机制 ，因为一般的系统调用系统函数的话，会浪费一定的时间去移动和请求；</p>\r\n<h2><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"_113\"></a>数据类型</h2>\r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"Redis_115\"></a>Redis有哪些数据类型</h3>\r\n<p>Redis主要有5种数据类型，包括String，List，Set，Zset，Hash，满足大部分的使用要求</p>\r\n<div class=\"table-box\"><table><thead><tr><th align=\"center\">数据类型</th><th align=\"center\">可以存储的值</th><th align=\"center\">操作</th><th>应用场景</th></tr></thead><tbody><tr><td align=\"center\">STRING</td><td align=\"center\">字符串、整数或者浮点数</td><td align=\"center\">对整个字符串或者字符串的其中一部分执行操作<br>对整数和浮点数执行自增或者自减操作</td><td>做简单的键值对缓存</td></tr><tr><td align=\"center\">LIST</td><td align=\"center\">列表</td><td align=\"center\">从两端压入或者弹出元素<br>对单个或者多个元素进行修剪，<br>只保留一个范围内的元素</td><td>存储一些列表型的数据结构，类似粉丝列表、文章的评论列表之类的数据</td></tr><tr><td align=\"center\">SET</td><td align=\"center\">无序集合</td><td align=\"center\">添加、获取、移除单个元素<br>检查一个元素是否存在于集合中<br> 计算交集、并集、差集<br>从集合里面随机获取元素</td><td>交集、并集、差集的操作，比如交集，可以把两个人的粉丝列表整一个交集</td></tr><tr><td align=\"center\">HASH</td><td align=\"center\">包含键值对的无序散列表</td><td align=\"center\">添加、获取、移除单个键值对<br>获取所有键值对<br> 检查某个键是否存在</td><td>结构化的数据，比如一个对象</td></tr><tr><td align=\"center\">ZSET</td><td align=\"center\">有序集合</td><td align=\"center\">添加、获取、删除元素<br>根据分值范围或者成员来获取元素<br> 计算一个键的排名</td><td>去重但可以排序，如获取排名前几名的用户</td></tr></tbody></table></div>\r\n<h3><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"Redis_129\"></a>Redis的应用场景</h3>\r\n<p><strong>总结一</strong></p>\r\n<p>计数器</p>\r\n<p>可以对 String 进行自增自减运算，从而实现计数器功能。Redis 这种内存型数据库的读写性能非常高，很适合存储频繁读写的计数量。</p>\r\n<p>缓存</p>\r\n<p>将热点数据放到内存中，设置内存的最大使用量以及淘汰策略来保证缓存的命中率。</p>\r\n<p>会话缓存</p>\r\n<p>可以使用 Redis 来统一存储多台应用服务器的会话信息。当应用服务器不再存储用户的会话信息，也就不再具有状态，一个用户可以请求任意一个应用服务器，从而更容易实现高可用性以及可伸缩性。</p>\r\n<p>全页缓存（FPC）</p>\r\n<p>除基本的会话token之外，Redis还提供很简便的FPC平台。以Magento为例，Magento提供一个插件来使用Redis作为全页缓存后端。此外，对WordPress的用户来说，Pantheon有一个非常好的插件 wp-redis，这个插件能帮助你以最快速度加载你曾浏览过的页面。</p>\r\n<p>查找表</p>\r\n<p>例如 DNS 记录就很适合使用 Redis 进行存储。查找表和缓存类似，也是利用了 Redis 快速的查找特性。但是查找表的内容不能失效，而缓存的内容可以失效，因为缓存不作为可靠的数据来源。</p>\r\n<p>消息队列(发布/订阅功能)</p>\r\n<p>List 是一个双向链表，可以通过 lpush 和 rpop 写入和读取消息。不过最好使用 Kafka、RabbitMQ 等消息中间件。</p>\r\n<p>分布式锁实现</p>\r\n<p>在分布式场景下，无法使用单机环境下的锁来对多个节点上的进程进行同步。可以使用 Redis 自带的 SETNX 命令实现分布式锁，除此之外，还可以使用官方提供的 RedLock 分布式锁实现。</p>\r\n<p>其它</p>\r\n<p>Set 可以实现交集、并集等操作，从而实现共同好友等功能。ZSet 可以实现有序性操作，从而实现排行榜等功能。</p>\r\n<p><strong>总结二</strong></p>\r\n<p>Redis相比其他缓存，有一个非常大的优势，就是支持多种数据类型。</p>\r\n<p>数据类型说明string字符串，最简单的k-v存储hashhash格式，value为field和value，适合ID-Detail这样的场景。list简单的list，顺序列表，支持首位或者末尾插入数据set无序list，查找速度快，适合交集、并集、差集处理sorted set有序的set</p>\r\n<p>其实，通过上面的数据类型的特性，基本就能想到合适的应用场景了。</p>\r\n<p>string——适合最简单的k-v存储，类似于memcached的存储结构，短信验证码，配置信息等，就用这种类型来存储。</p>\r\n<p>hash——一般key为ID或者唯一标示，value对应的就是详情了。如商品详情，个人信息详情，新闻详情等。</p>\r\n<p>list——因为list是有序的，比较适合存储一些有序且数据相对固定的数据。如省市区表、字典表等。因为list是有序的，适合根据写入的时间来排序，如：最新的***，消息队列等。</p>\r\n<p>set——可以简单的理解为ID-List的模式，如微博中一个人有哪些好友，set最牛的地方在于，可以对两个set提供交集、并集、差集操作。例如：查找两个人共同的好友等。</p>\r\n<p>Sorted Set——是set的增强版本，增加了一个score参数，自动会根据score的值进行排序。比较适合类似于top 10等不根据插入的时间来排序的数据。</p>\r\n<p>如上所述，虽然Redis不像关系数据库那么复杂的数据结构，但是，也能适合很多场景，比一般的缓存数据结构要多。了解每种数据结构适合的业务场景，不仅有利于提升开发效率，也能有效利用Redis的性能。</p>\r\n<h2><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"_205\"></a>持久化</h2>\r\n<h3><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"Redis_207\"></a>什么是Redis持久化？</h3>\r\n<p>持久化就是把内存的数据写到磁盘中去，防止服务宕机了内存数据丢失。</p>\r\n<h3><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"Redis__213\"></a>Redis 的持久化机制是什么？各自的优缺点？</h3>\r\n<p>Redis 提供两种持久化机制 RDB（默认） 和 AOF 机制:</p>\r\n<p>RDB：是Redis DataBase缩写快照</p>\r\n<p>RDB是Redis默认的持久化方式。按照一定的时间将内存的数据以快照的形式保存到硬盘中，对应产生的数据文件为dump.rdb。通过配置文件中的save参数来定义快照的周期。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80MDU1NjY2LWMwNzAyMjIzMTUxODUyMjkucG5n?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>优点：</p>\r\n<ul><li>1、只有一个文件 dump.rdb，方便持久化。</li><li>2、容灾性好，一个文件可以保存到安全的磁盘。</li><li>3、性能最大化，fork 子进程来完成写操作，让主进程继续处理命令，所以是 IO 最大化。使用单独子进程来进行持久化，主进程不会进行任何 IO 操作，保证了 redis 的高性能</li><li>4.相对于数据集大时，比 AOF 的启动效率更高。</li></ul>\r\n<p>缺点：</p>\r\n<ul><li>1、数据安全性低。RDB 是间隔一段时间进行持久化，如果持久化之间 redis 发生故障，会发生数据丢失。所以这种方式更适合数据要求不严谨的时候)</li><li>2、AOF（Append-only file)持久化方式： 是指所有的命令行记录以 redis 命令请 求协议的格式完全持久化存储)保存为 aof 文件。</li></ul>\r\n<p>AOF：持久化</p>\r\n<p>AOF持久化(即Append Only File持久化)，则是将Redis执行的每次写命令记录到单独的日志文件中，当重启Redis会重新将持久化的日志中文件恢复数据。</p>\r\n<p>当两种方式同时开启时，数据恢复Redis会优先选择AOF恢复。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy80MDU1NjY2LWUxN2NlNTY0NGZjN2FjZjMucG5n?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>优点：</p>\r\n<ul><li>1、数据安全，aof 持久化可以配置 appendfsync 属性，有 always，每进行一次 命令操作就记录到 aof 文件中一次。</li><li>2、通过 append 模式写文件，即使中途服务器宕机，可以通过 redis-check-aof 工具解决数据一致性问题。</li><li>3、AOF 机制的 rewrite 模式。AOF 文件没被 rewrite 之前（文件过大时会对命令 进行合并重写），可以删除其中的某些命令（比如误操作的 flushall）)</li></ul>\r\n<p>缺点：</p>\r\n<ul><li>1、AOF 文件比 RDB 文件大，且恢复速度慢。</li><li>2、数据集大的时候，比 rdb 启动效率低。</li></ul>\r\n<p>优缺点是什么？</p>\r\n<ul><li>AOF文件比RDB更新频率高，优先使用AOF还原数据。</li><li>AOF比RDB更安全也更大</li><li>RDB性能比AOF好</li><li>如果两个都配了优先加载AOF</li></ul>\r\n<h3><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"_267\"></a>如何选择合适的持久化方式</h3>\r\n<ul><li> <p>一般来说， 如果想达到足以媲美PostgreSQL的数据安全性，你应该同时使用两种持久化功能。在这种情况下，当 Redis 重启的时候会优先载入AOF文件来恢复原始的数据，因为在通常情况下AOF文件保存的数据集要比RDB文件保存的数据集要完整。</p> </li><li> <p>如果你非常关心你的数据， 但仍然可以承受数分钟以内的数据丢失，那么你可以只使用RDB持久化。</p> </li><li> <p>有很多用户都只使用AOF持久化，但并不推荐这种方式，因为定时生成RDB快照（snapshot）非常便于进行数据库备份， 并且 RDB 恢复数据集的速度也要比AOF恢复的速度要快，除此之外，使用RDB还可以避免AOF程序的bug。</p> </li><li> <p>如果你只希望你的数据在服务器运行的时候存在，你也可以不使用任何持久化方式。</p> </li></ul>\r\n<h3><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"Redis_279\"></a>Redis持久化数据和缓存怎么做扩容？</h3>\r\n<ul><li> <p>如果Redis被当做缓存使用，使用一致性哈希实现动态扩容缩容。</p> </li><li> <p>如果Redis被当做一个持久化存储使用，必须使用固定的keys-to-nodes映射关系，节点的数量一旦确定不能变化。否则的话(即Redis节点需要动态变化的情况），必须使用可以在运行时进行数据再平衡的一套系统，而当前只有Redis集群可以做到这样。</p> </li></ul>\r\n<h2><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"_290\"></a>过期键的删除策略</h2>\r\n<h3><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"Redis_292\"></a>Redis的过期键的删除策略</h3>\r\n<p>我们都知道，Redis是key-value数据库，我们可以设置Redis中缓存的key的过期时间。Redis的过期策略就是指当Redis中缓存的key过期了，Redis如何处理。</p>\r\n<p>过期策略通常有以下三种：</p>\r\n<ul><li>定时过期：每个设置过期时间的key都需要创建一个定时器，到过期时间就会立即清除。该策略可以立即清除过期的数据，对内存很友好；但是会占用大量的CPU资源去处理过期的数据，从而影响缓存的响应时间和吞吐量。</li><li>惰性过期：只有当访问一个key时，才会判断该key是否已过期，过期则清除。该策略可以最大化地节省CPU资源，却对内存非常不友好。极端情况可能出现大量的过期key没有再次被访问，从而不会被清除，占用大量内存。</li><li>定期过期：每隔一定的时间，会扫描一定数量的数据库的expires字典中一定数量的key，并清除其中已过期的key。该策略是前两者的一个折中方案。通过调整定时扫描的时间间隔和每次扫描的限定耗时，可以在不同情况下使得CPU和内存资源达到最优的平衡效果。<br> (expires字典会保存所有设置了过期时间的key的过期时间数据，其中，key是指向键空间中的某个键的指针，value是该键的毫秒精度的UNIX时间戳表示的过期时间。键空间是指该Redis集群中保存的所有键。)</li></ul>\r\n<p>Redis中同时使用了惰性过期和定期过期两种过期策略。</p>\r\n<h3><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"Redis_key_307\"></a>Redis key的过期时间和永久有效分别怎么设置？</h3>\r\n<p>EXPIRE和PERSIST命令。</p>\r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"expirekey__313\"></a>我们知道通过expire来设置key 的过期时间，那么对过期的数据怎么处理呢?</h3>\r\n<p>除了缓存服务器自带的缓存失效策略之外（Redis默认的有6中策略可供选择），我们还可以根据具体的业务需求进行自定义的缓存淘汰，常见的策略有两种：</p>\r\n<ol><li> <p>定时去清理过期的缓存；</p> </li><li> <p>当有用户请求过来时，再判断这个请求所用到的缓存是否过期，过期的话就去底层系统得到新数据并更新缓存。</p> </li></ol>\r\n<p>两者各有优劣，第一种的缺点是维护大量缓存的key是比较麻烦的，第二种的缺点就是每次用户请求过来都要判断缓存失效，逻辑相对比较复杂！具体用哪种方案，大家可以根据自己的应用场景来权衡。</p>\r\n<h2><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"_328\"></a>内存相关</h2>\r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"MySQL2000wredis20wredis_330\"></a>MySQL里有2000w数据，redis中只存20w的数据，如何保证redis中的数据都是热点数据</h3>\r\n<p>redis内存数据集大小上升到一定大小的时候，就会施行数据淘汰策略。</p>\r\n<h3><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"Redis_336\"></a>Redis的内存淘汰策略有哪些</h3>\r\n<p>Redis的内存淘汰策略是指在Redis的用于缓存的内存不足时，怎么处理需要新写入且需要申请额外空间的数据。</p>\r\n<p><strong>全局的键空间选择性移除</strong></p>\r\n<ul><li>noeviction：当内存不足以容纳新写入数据时，新写入操作会报错。</li><li>allkeys-lru：当内存不足以容纳新写入数据时，在键空间中，移除最近最少使用的key。（这个是<strong>最常用</strong>的）</li><li>allkeys-random：当内存不足以容纳新写入数据时，在键空间中，随机移除某个key。</li></ul>\r\n<p><strong>设置过期时间的键空间选择性移除</strong></p>\r\n<ul><li>volatile-lru：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，移除最近最少使用的key。</li><li>volatile-random：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，随机移除某个key。</li><li>volatile-ttl：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，有更早过期时间的key优先移除。</li></ul>\r\n<p><strong>总结</strong></p>\r\n<p>Redis的内存淘汰策略的选取并不会影响过期的key的处理。内存淘汰策略用于处理内存不足时的需要申请额外空间的数据；过期策略用于处理过期的缓存数据。</p>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"Redis_358\"></a>Redis主要消耗什么物理资源？</h3>\r\n<p>内存。</p>\r\n<h3><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"Redis_364\"></a>Redis的内存用完了会发生什么？</h3>\r\n<p>如果达到设置的上限，Redis的写命令会返回错误信息（但是读命令还可以正常返回。）或者你可以配置内存淘汰机制，当Redis达到内存上限时会冲刷掉旧的内容。</p>\r\n<h3><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"Redis_370\"></a>Redis如何做内存优化？</h3>\r\n<p>可以好好利用Hash,list,sorted set,set等集合类型数据，因为通常情况下很多小的Key-Value可以用更紧凑的方式存放到一起。尽可能使用散列表（hashes），散列表（是说散列表里面存储的数少）使用的内存非常小，所以你应该尽可能的将你的数据模型抽象到一个散列表里面。比如你的web系统中有一个用户对象，不要为这个用户的名称，姓氏，邮箱，密码设置单独的key，而是应该把这个用户的所有信息存储到一张散列表里面</p>\r\n<h2><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"_380\"></a>线程模型</h2>\r\n<h3><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"Redis_382\"></a>Redis线程模型</h3>\r\n<p>Redis基于Reactor模式开发了网络事件处理器，这个处理器被称为文件事件处理器（file event handler）。它的组成结构为4部分：多个套接字、IO多路复用程序、文件事件分派器、事件处理器。因为文件事件分派器队列的消费是单线程的，所以Redis才叫单线程模型。</p>\r\n<ul><li>文件事件处理器使用 I/O 多路复用（multiplexing）程序来同时监听多个套接字， 并根据套接字目前执行的任务来为套接字关联不同的事件处理器。</li><li>当被监听的套接字准备好执行连接应答（accept）、读取（read）、写入（write）、关闭（close）等操作时， 与操作相对应的文件事件就会产生， 这时文件事件处理器就会调用套接字之前关联好的事件处理器来处理这些事件。</li></ul>\r\n<p>虽然文件事件处理器以单线程方式运行， 但通过使用 I/O 多路复用程序来监听多个套接字， 文件事件处理器既实现了高性能的网络通信模型， 又可以很好地与 redis 服务器中其他同样以单线程方式运行的模块进行对接， 这保持了 Redis 内部单线程设计的简单性。</p>\r\n<p>参考：<a href=\"https://www.cnblogs.com/barrywxx/p/8570821.html\">https://www.cnblogs.com/barrywxx/p/8570821.html</a></p>\r\n<h2><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"_397\"></a>事务</h2>\r\n<h3><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"_399\"></a>什么是事务？</h3>\r\n<p>事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。</p>\r\n<p>事务是一个原子操作：事务中的命令要么全部被执行，要么全部都不执行。</p>\r\n<h3><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"Redis_407\"></a>Redis事务的概念</h3>\r\n<p>Redis 事务的本质是通过MULTI、EXEC、WATCH等一组命令的集合。事务支持一次执行多个命令，一个事务中所有命令都会被序列化。在事务执行过程，会按照顺序串行化执行队列中的命令，其他客户端提交的命令请求不会插入到事务执行命令序列中。</p>\r\n<p>总结说：redis事务就是一次性、顺序性、排他性的执行一个队列中的一系列命令。</p>\r\n<h3><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"Redis_415\"></a>Redis事务的三个阶段</h3>\r\n<ol><li>事务开始 MULTI</li><li>命令入队</li><li>事务执行 EXEC</li></ol>\r\n<p>事务执行过程中，如果服务端收到有EXEC、DISCARD、WATCH、MULTI之外的请求，将会把请求放入队列中排队</p>\r\n<h3><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"Redis_425\"></a>Redis事务相关命令</h3>\r\n<p>Redis事务功能是通过MULTI、EXEC、DISCARD和WATCH 四个原语实现的</p>\r\n<p>Redis会将一个事务中的所有命令序列化，然后按顺序执行。</p>\r\n<ol><li><strong>redis 不支持回滚</strong>，“Redis 在事务失败时不进行回滚，而是继续执行余下的命令”， 所以 Redis 的内部可以保持简单且快速。</li><li><strong>如果在一个事务中的命令出现错误，那么所有的命令都不会执行</strong>；</li><li><strong>如果在一个事务中出现运行错误，那么正确的命令会被执行</strong>。</li></ol>\r\n<ul><li>WATCH 命令是一个乐观锁，可以为 Redis 事务提供 check-and-set （CAS）行为。 可以监控一个或多个键，一旦其中有一个键被修改（或删除），之后的事务就不会执行，监控一直持续到EXEC命令。</li><li>MULTI命令用于开启一个事务，它总是返回OK。 MULTI执行之后，客户端可以继续向服务器发送任意多条命令，这些命令不会立即被执行，而是被放到一个队列中，当EXEC命令被调用时，所有队列中的命令才会被执行。</li><li>EXEC：执行所有事务块内的命令。返回事务块内所有命令的返回值，按命令执行的先后顺序排列。 当操作被打断时，返回空值 nil 。</li><li>通过调用DISCARD，客户端可以清空事务队列，并放弃执行事务， 并且客户端会从事务状态中退出。</li><li>UNWATCH命令可以取消watch对所有key的监控。</li></ul>\r\n<h3><a name=\"t32\"></a><a name=\"t32\"></a><a id=\"ACID_443\"></a>事务管理（ACID）概述</h3>\r\n<p>原子性（Atomicity）<br> 原子性是指事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。</p>\r\n<p>一致性（Consistency）<br> 事务前后数据的完整性必须保持一致。</p>\r\n<p>隔离性（Isolation）<br> 多个事务并发执行时，一个事务的执行不应影响其他事务的执行</p>\r\n<p>持久性（Durability）<br> 持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来即使数据库发生故障也不应该对其有任何影响</p>\r\n<p><strong>Redis的事务总是具有ACID中的一致性和隔离性</strong>，其他特性是不支持的。当服务器运行在<em>AOF</em>持久化模式下，并且appendfsync选项的值为always时，事务也具有耐久性。</p>\r\n<h3><a name=\"t33\"></a><a name=\"t33\"></a><a id=\"Redis_461\"></a>Redis事务支持隔离性吗</h3>\r\n<p>Redis 是单进程程序，并且它保证在执行事务时，不会对事务进行中断，事务可以运行直到执行完所有事务队列中的命令为止。因此，<strong>Redis 的事务是总是带有隔离性的</strong>。</p>\r\n<h3><a name=\"t34\"></a><a name=\"t34\"></a><a id=\"Redis_467\"></a>Redis事务保证原子性吗，支持回滚吗</h3>\r\n<p>Redis中，单条命令是原子性执行的，但<strong>事务不保证原子性，且没有回滚</strong>。事务中任意命令执行失败，其余的命令仍会被执行。</p>\r\n<h3><a name=\"t35\"></a><a name=\"t35\"></a><a id=\"Redis_473\"></a>Redis事务其他实现</h3>\r\n<ul><li>基于Lua脚本，Redis可以保证脚本内的命令一次性、按顺序地执行，<br> 其同时也不提供事务运行错误的回滚，执行过程中如果部分命令运行错误，剩下的命令还是会继续运行完</li><li>基于中间标记变量，通过另外的标记变量来标识事务是否执行完成，读取数据时先读取该标记变量判断是否事务执行完成。但这样会需要额外写代码实现，比较繁琐</li></ul>\r\n<h2><a name=\"t36\"></a><a name=\"t36\"></a><a id=\"_483\"></a>集群方案</h2>\r\n<h3><a name=\"t37\"></a><a name=\"t37\"></a><a id=\"_485\"></a>哨兵模式</h3>\r\n<img src=\"https://img-blog.csdnimg.cn/20200115174006561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\">\r\n<p><strong>哨兵的介绍</strong></p>\r\n<p>sentinel，中文名是哨兵。哨兵是 redis 集群机构中非常重要的一个组件，主要有以下功能：</p>\r\n<ul><li>集群监控：负责监控 redis master 和 slave 进程是否正常工作。</li><li>消息通知：如果某个 redis 实例有故障，那么哨兵负责发送消息作为报警通知给管理员。</li><li>故障转移：如果 master node 挂掉了，会自动转移到 slave node 上。</li><li>配置中心：如果故障转移发生了，通知 client 客户端新的 master 地址。</li></ul>\r\n<p><strong>哨兵用于实现 redis 集群的高可用</strong>，本身也是分布式的，作为一个哨兵集群去运行，互相协同工作。</p>\r\n<ul><li>故障转移时，判断一个 master node 是否宕机了，需要大部分的哨兵都同意才行，涉及到了分布式选举的问题。</li><li>即使部分哨兵节点挂掉了，哨兵集群还是能正常工作的，因为如果一个作为高可用机制重要组成部分的故障转移系统本身是单点的，那就很坑爹了。</li></ul>\r\n<p><strong>哨兵的核心知识</strong></p>\r\n<ul><li>哨兵至少需要 3 个实例，来保证自己的健壮性。</li><li>哨兵 + redis 主从的部署架构，是<strong>不保证数据零丢失</strong>的，只能保证 redis 集群的高可用性。</li><li>对于哨兵 + redis 主从这种复杂的部署架构，尽量在测试环境和生产环境，都进行充足的测试和演练。</li></ul>\r\n<h3><a name=\"t38\"></a><a name=\"t38\"></a><a id=\"Redis_Cluster__511\"></a>官方Redis Cluster 方案(服务端路由查询)</h3>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200115173621637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"\"></p>\r\n<p>redis 集群模式的工作原理能说一下么？在集群模式下，redis 的 key 是如何寻址的？分布式寻址都有哪些算法？了解一致性 hash 算法吗？</p>\r\n<p><strong>简介</strong></p>\r\n<p>Redis Cluster是一种服务端Sharding技术，3.0版本开始正式提供。Redis Cluster并没有使用一致性hash，而是采用slot(槽)的概念，一共分成16384个槽。将请求发送到任意节点，接收到请求的节点会将查询请求发送到正确的节点上执行</p>\r\n<p><strong>方案说明</strong></p>\r\n<ol><li>通过哈希的方式，将数据分片，每个节点均分存储一定哈希槽(哈希值)区间的数据，默认分配了16384 个槽位</li><li>每份数据分片会存储在多个互为主从的多节点上</li><li>数据写入先写主节点，再同步到从节点(支持配置为阻塞同步)</li><li>同一分片多个节点间的数据不保持一致性</li><li>读取数据时，当客户端操作的key没有分配在该节点上时，redis会返回转向指令，指向正确的节点</li><li>扩容时时需要需要把旧节点的数据迁移一部分到新节点</li></ol>\r\n<p>在 redis cluster 架构下，每个 redis 要放开两个端口号，比如一个是 6379，另外一个就是 加1w 的端口号，比如 16379。</p>\r\n<p>16379 端口号是用来进行节点间通信的，也就是 cluster bus 的东西，cluster bus 的通信，用来进行故障检测、配置更新、故障转移授权。cluster bus 用了另外一种二进制的协议，<code>gossip</code> 协议，用于节点间进行高效的数据交换，占用更少的网络带宽和处理时间。</p>\r\n<p><strong>节点间的内部通信机制</strong></p>\r\n<p>基本通信原理</p>\r\n<p>集群元数据的维护有两种方式：集中式、Gossip 协议。redis cluster 节点间采用 gossip 协议进行通信。</p>\r\n<p><strong>分布式寻址算法</strong></p>\r\n<ul><li>hash 算法（大量缓存重建）</li><li>一致性 hash 算法（自动缓存迁移）+ 虚拟节点（自动负载均衡）</li><li>redis cluster 的 hash slot 算法</li></ul>\r\n<p><strong>优点</strong></p>\r\n<ul><li>无中心架构，支持动态扩容，对业务透明</li><li>具备Sentinel的监控和自动Failover(故障转移)能力</li><li>客户端不需要连接集群所有节点，连接集群中任何一个可用节点即可</li><li>高性能，客户端直连redis服务，免去了proxy代理的损耗</li></ul>\r\n<p><strong>缺点</strong></p>\r\n<ul><li>运维也很复杂，数据迁移需要人工干预</li><li>只能使用0号数据库</li><li>不支持批量操作(pipeline管道操作)</li><li>分布式逻辑和存储模块耦合等</li></ul>\r\n<h3><a name=\"t39\"></a><a name=\"t39\"></a><a id=\"_564\"></a>基于客户端分配</h3>\r\n<img src=\"https://img-blog.csdnimg.cn/20200115173640248.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\">\r\n<p><strong>简介</strong></p>\r\n<p>Redis Sharding是Redis Cluster出来之前，业界普遍使用的多Redis实例集群方法。其主要思想是采用哈希算法将Redis数据的key进行散列，通过hash函数，特定的key会映射到特定的Redis节点上。Java redis客户端驱动jedis，支持Redis Sharding功能，即ShardedJedis以及结合缓存池的ShardedJedisPool</p>\r\n<p><strong>优点</strong></p>\r\n<p>优势在于非常简单，服务端的Redis实例彼此独立，相互无关联，每个Redis实例像单服务器一样运行，非常容易线性扩展，系统的灵活性很强</p>\r\n<p><strong>缺点</strong></p>\r\n<ul><li>由于sharding处理放到客户端，规模进一步扩大时给运维带来挑战。</li><li>客户端sharding不支持动态增删节点。服务端Redis实例群拓扑结构有变化时，每个客户端都需要更新调整。连接不能共享，当应用规模增大时，资源浪费制约优化</li></ul>\r\n<h3><a name=\"t40\"></a><a name=\"t40\"></a><a id=\"_583\"></a>基于代理服务器分片</h3>\r\n<img src=\"https://img-blog.csdnimg.cn/20200115173630730.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\">\r\n<p><strong>简介</strong></p>\r\n<p>客户端发送请求到一个代理组件，代理解析客户端的数据，并将请求转发至正确的节点，最后将结果回复给客户端</p>\r\n<p><strong>特征</strong></p>\r\n<ul><li>透明接入，业务程序不用关心后端Redis实例，切换成本低</li><li>Proxy 的逻辑和存储的逻辑是隔离的</li><li>代理层多了一次转发，性能有所损耗</li></ul>\r\n<p><strong>业界开源方案</strong></p>\r\n<ul><li>Twtter开源的Twemproxy</li><li>豌豆荚开源的Codis</li></ul>\r\n<h3><a name=\"t41\"></a><a name=\"t41\"></a><a id=\"Redis__604\"></a>Redis 主从架构</h3>\r\n<p>单机的 redis，能够承载的 QPS 大概就在上万到几万不等。对于缓存来说，一般都是用来支撑<strong>读高并发</strong>的。因此架构做成主从(master-slave)架构，一主多从，主负责写，并且将数据复制到其它的 slave 节点，从节点负责读。所有的<strong>读请求全部走从节点</strong>。这样也可以很轻松实现水平扩容，<strong>支撑读高并发</strong>。</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200115180329317.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"redis-master-slave\"></p>\r\n<p>redis replication -&gt; 主从架构 -&gt; 读写分离 -&gt; 水平扩容支撑读高并发</p>\r\n<p><strong>redis replication 的核心机制</strong></p>\r\n<ul><li>redis 采用<strong>异步方式</strong>复制数据到 slave 节点，不过 redis2.8 开始，slave node 会周期性地确认自己每次复制的数据量；</li><li>一个 master node 是可以配置多个 slave node 的；</li><li>slave node 也可以连接其他的 slave node；</li><li>slave node 做复制的时候，不会 block master node 的正常工作；</li><li>slave node 在做复制的时候，也不会 block 对自己的查询操作，它会用旧的数据集来提供服务；但是复制完成的时候，需要删除旧数据集，加载新数据集，这个时候就会暂停对外服务了；</li><li>slave node 主要用来进行横向扩容，做读写分离，扩容的 slave node 可以提高读的吞吐量。</li></ul>\r\n<p>注意，如果采用了主从架构，那么建议必须<strong>开启</strong> master node 的持久化，不建议用 slave node 作为 master node 的数据热备，因为那样的话，如果你关掉 master 的持久化，可能在 master 宕机重启的时候数据是空的，然后可能一经过复制， slave node 的数据也丢了。</p>\r\n<p>另外，master 的各种备份方案，也需要做。万一本地的所有文件丢失了，从备份中挑选一份 rdb 去恢复 master，这样才能<strong>确保启动的时候，是有数据的</strong>，即使采用了后续讲解的高可用机制，slave node 可以自动接管 master node，但也可能 sentinel 还没检测到 master failure，master node 就自动重启了，还是可能导致上面所有的 slave node 数据被清空。</p>\r\n<p><strong>redis 主从复制的核心原理</strong></p>\r\n<p>当启动一个 slave node 的时候，它会发送一个 <code>PSYNC</code> 命令给 master node。</p>\r\n<p>如果这是 slave node 初次连接到 master node，那么会触发一次 <code>full resynchronization</code> 全量复制。此时 master 会启动一个后台线程，开始生成一份 <code>RDB</code> 快照文件，</p>\r\n<p>同时还会将从客户端 client 新收到的所有写命令缓存在内存中。<code>RDB</code> 文件生成完毕后， master 会将这个 <code>RDB</code> 发送给 slave，slave 会先<strong>写入本地磁盘，然后再从本地磁盘加载到内存</strong>中，</p>\r\n<p>接着 master 会将内存中缓存的写命令发送到 slave，slave 也会同步这些数据。</p>\r\n<p>slave node 如果跟 master node 有网络故障，断开了连接，会自动重连，连接之后 master node 仅会复制给 slave 部分缺少的数据。</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200115180337645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly90aGlua3dvbi5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70\" alt=\"redis-master-slave-replication\"></p>\r\n<p><strong>过程原理</strong></p>\r\n<ol><li>当从库和主库建立MS关系后，会向主数据库发送SYNC命令</li><li>主库接收到SYNC命令后会开始在后台保存快照(RDB持久化过程)，并将期间接收到的写命令缓存起来</li><li>当快照完成后，主Redis会将快照文件和所有缓存的写命令发送给从Redis</li><li>从Redis接收到后，会载入快照文件并且执行收到的缓存的命令</li><li>之后，主Redis每当接收到写命令时就会将命令发送从Redis，从而保证数据的一致</li></ol>\r\n<p><strong>缺点</strong></p>\r\n<p>所有的slave节点数据的复制和同步都由master节点来处理，会照成master节点压力太大，使用主从从结构来解决</p>\r\n<h3><a name=\"t42\"></a><a name=\"t42\"></a><a id=\"Redis_653\"></a>Redis集群的主从复制模型是怎样的？</h3>\r\n<p>为了使在部分节点失败或者大部分节点无法通信的情况下集群仍然可用，所以集群使用了主从复制模型，每个节点都会有N-1个复制品</p>\r\n<h3><a name=\"t43\"></a><a name=\"t43\"></a><a id=\"_redis__659\"></a>生产环境中的 redis 是怎么部署的？</h3>\r\n<p>redis cluster，10 台机器，5 台机器部署了 redis 主实例，另外 5 台机器部署了 redis 的从实例，每个主实例挂了一个从实例，5 个节点对外提供读写服务，每个节点的读写高峰qps可能可以达到每秒 5 万，5 台机器最多是 25 万读写请求/s。</p>\r\n<p>机器是什么配置？32G 内存+ 8 核 CPU + 1T 磁盘，但是分配给 redis 进程的是10g内存，一般线上生产环境，redis 的内存尽量不要超过 10g，超过 10g 可能会有问题。</p>\r\n<p>5 台机器对外提供读写，一共有 50g 内存。</p>\r\n<p>因为每个主实例都挂了一个从实例，所以是高可用的，任何一个主实例宕机，都会自动故障迁移，redis 从实例会自动变成主实例继续提供读写服务。</p>\r\n<p>你往内存里写的是什么数据？每条数据的大小是多少？商品数据，每条数据是 10kb。100 条数据是 1mb，10 万条数据是 1g。常驻内存的是 200 万条商品数据，占用内存是 20g，仅仅不到总内存的 50%。目前高峰期每秒就是 3500 左右的请求量。</p>\r\n<p>其实大型的公司，会有基础架构的 team 负责缓存集群的运维。</p>\r\n<h3><a name=\"t44\"></a><a name=\"t44\"></a><a id=\"Redis_675\"></a>说说Redis哈希槽的概念？</h3>\r\n<p>Redis集群没有使用一致性hash,而是引入了哈希槽的概念，Redis集群有16384个哈希槽，每个key通过CRC16校验后对16384取模来决定放置哪个槽，集群的每个节点负责一部分hash槽。</p>\r\n<h3><a name=\"t45\"></a><a name=\"t45\"></a><a id=\"Redis_681\"></a>Redis集群会有写操作丢失吗？为什么？</h3>\r\n<p>Redis并不能保证数据的强一致性，这意味这在实际中集群在特定的条件下可能会丢失写操作。</p>\r\n<h3><a name=\"t46\"></a><a name=\"t46\"></a><a id=\"Redis_687\"></a>Redis集群之间是如何复制的？</h3>\r\n<p>异步复制</p>\r\n<h3><a name=\"t47\"></a><a name=\"t47\"></a><a id=\"Redis_693\"></a>Redis集群最大节点个数是多少？</h3>\r\n<p>16384个</p>\r\n<h3><a name=\"t48\"></a><a name=\"t48\"></a><a id=\"Redis_699\"></a>Redis集群如何选择数据库？</h3>\r\n<p>Redis集群目前无法做数据库选择，默认在0数据库。</p>\r\n<h2><a name=\"t49\"></a><a name=\"t49\"></a><a id=\"_707\"></a>分区</h2>\r\n<h3><a name=\"t50\"></a><a name=\"t50\"></a><a id=\"RedisCPU_709\"></a>Redis是单线程的，如何提高多核CPU的利用率？</h3>\r\n<p>可以在同一个服务器部署多个Redis的实例，并把他们当作不同的服务器来使用，在某些时候，无论如何一个服务器是不够的， 所以，如果你想使用多个CPU，你可以考虑一下分片（shard）。</p>\r\n<h3><a name=\"t51\"></a><a name=\"t51\"></a><a id=\"Redis_715\"></a>为什么要做Redis分区？</h3>\r\n<p>分区可以让Redis管理更大的内存，Redis将可以使用所有机器的内存。如果没有分区，你最多只能使用一台机器的内存。分区使Redis的计算能力通过简单地增加计算机得到成倍提升，Redis的网络带宽也会随着计算机和网卡的增加而成倍增长。</p>\r\n<h3><a name=\"t52\"></a><a name=\"t52\"></a><a id=\"Redis_721\"></a>你知道有哪些Redis分区实现方案？</h3>\r\n<ul><li>客户端分区就是在客户端就已经决定数据会被存储到哪个redis节点或者从哪个redis节点读取。大多数客户端已经实现了客户端分区。</li><li>代理分区 意味着客户端将请求发送给代理，然后代理决定去哪个节点写数据或者读数据。代理根据分区规则决定请求哪些Redis实例，然后根据Redis的响应结果返回给客户端。redis和memcached的一种代理实现就是Twemproxy</li><li>查询路由(Query routing) 的意思是客户端随机地请求任意一个redis实例，然后由Redis将请求转发给正确的Redis节点。Redis Cluster实现了一种混合形式的查询路由，但并不是直接将请求从一个redis节点转发到另一个redis节点，而是在客户端的帮助下直接redirected到正确的redis节点。</li></ul>\r\n<h3><a name=\"t53\"></a><a name=\"t53\"></a><a id=\"Redis_729\"></a>Redis分区有什么缺点？</h3>\r\n<ul><li>涉及多个key的操作通常不会被支持。例如你不能对两个集合求交集，因为他们可能被存储到不同的Redis实例（实际上这种情况也有办法，但是不能直接使用交集指令）。</li><li>同时操作多个key,则不能使用Redis事务.</li><li>分区使用的粒度是key，不能使用一个非常长的排序key存储一个数据集（The partitioning granularity is the key, so it is not possible to shard a dataset with a single huge key like a very big sorted set）</li><li>当使用分区的时候，数据处理会非常复杂，例如为了备份你必须从不同的Redis实例和主机同时收集RDB / AOF文件。</li><li>分区时动态扩容或缩容可能非常复杂。Redis集群在运行时增加或者删除Redis节点，能做到最大程度对用户透明地数据再平衡，但其他一些客户端分区或者代理分区方法则不支持这种特性。然而，有一种预分片的技术也可以较好的解决这个问题。</li></ul>\r\n<h2><a name=\"t54\"></a><a name=\"t54\"></a><a id=\"_741\"></a>分布式问题</h2>\r\n<h3><a name=\"t55\"></a><a name=\"t55\"></a><a id=\"Redis_743\"></a>Redis实现分布式锁</h3>\r\n<p>Redis为单进程单线程模式，采用队列模式将并发访问变成串行访问，且多客户端对Redis的连接并不存在竞争关系Redis中可以使用SETNX命令实现分布式锁。</p>\r\n<p>当且仅当 key 不存在，将 key 的值设为 value。 若给定的 key 已经存在，则 SETNX 不做任何动作</p>\r\n<p>SETNX 是『SET if Not eXists』(如果不存在，则 SET)的简写。</p>\r\n<p>返回值：设置成功，返回 1 。设置失败，返回 0 。</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20191213103148681.png\" alt=\"img\"></p>\r\n<p>使用SETNX完成同步锁的流程及事项如下：</p>\r\n<p>使用SETNX命令获取锁，若返回0（key已存在，锁已存在）则获取失败，反之获取成功</p>\r\n<p>为了防止获取锁后程序出现异常，导致其他线程/进程调用SETNX命令总是返回0而进入死锁状态，需要为该key设置一个“合理”的过期时间</p>\r\n<p>释放锁，使用DEL命令将锁数据删除</p>\r\n<h3><a name=\"t56\"></a><a name=\"t56\"></a><a id=\"_Redis__Key__765\"></a>如何解决 Redis 的并发竞争 Key 问题</h3>\r\n<p>所谓 Redis 的并发竞争 Key 的问题也就是多个系统同时对一个 key 进行操作，但是最后执行的顺序和我们期望的顺序不同，这样也就导致了结果的不同！</p>\r\n<p>推荐一种方案：分布式锁（zookeeper 和 redis 都可以实现分布式锁）。（如果不存在 Redis 的并发竞争 Key 问题，不要使用分布式锁，这样会影响性能）</p>\r\n<p>基于zookeeper临时有序节点可以实现的分布式锁。大致思想为：每个客户端对某个方法加锁时，在zookeeper上的与该方法对应的指定节点的目录下，生成一个唯一的瞬时有序节点。 判断是否获取锁的方式很简单，只需要判断有序节点中序号最小的一个。 当释放锁的时候，只需将这个瞬时节点删除即可。同时，其可以避免服务宕机导致的锁无法释放，而产生的死锁问题。完成业务流程后，删除对应的子节点释放锁。</p>\r\n<p>在实践中，当然是从以可靠性为主。所以首推Zookeeper。</p>\r\n<p>参考：<a href=\"https://www.jianshu.com/p/8bddd381de06\">https://www.jianshu.com/p/8bddd381de06</a></p>\r\n<h3><a name=\"t57\"></a><a name=\"t57\"></a><a id=\"Redis_779\"></a>分布式Redis是前期做还是后期规模上来了再做好？为什么？</h3>\r\n<p>既然Redis是如此的轻量（单实例只使用1M内存），为防止以后的扩容，最好的办法就是一开始就启动较多实例。即便你只有一台服务器，你也可以一开始就让Redis以分布式的方式运行，使用分区，在同一台服务器上启动多个实例。</p>\r\n<p>一开始就多设置几个Redis实例，例如32或者64个实例，对大多数用户来说这操作起来可能比较麻烦，但是从长久来看做这点牺牲是值得的。</p>\r\n<p>这样的话，当你的数据不断增长，需要更多的Redis服务器时，你需要做的就是仅仅将Redis实例从一台服务迁移到另外一台服务器而已（而不用考虑重新分区的问题）。一旦你添加了另一台服务器，你需要将你一半的Redis实例从第一台机器迁移到第二台机器。</p>\r\n<h3><a name=\"t58\"></a><a name=\"t58\"></a><a id=\"_RedLock_789\"></a>什么是 RedLock</h3>\r\n<p>Redis 官方站提出了一种权威的基于 Redis 实现分布式锁的方式名叫 <em>Redlock</em>，此种方式比原先的单节点的方法更安全。它可以保证以下特性：</p>\r\n<ol><li>安全特性：互斥访问，即永远只有一个 client 能拿到锁</li><li>避免死锁：最终 client 都可能拿到锁，不会出现死锁的情况，即使原本锁住某资源的 client crash 了或者出现了网络分区</li><li>容错性：只要大部分 Redis 节点存活就可以正常提供服务</li></ol>\r\n<h2><a name=\"t59\"></a><a name=\"t59\"></a><a id=\"_801\"></a>缓存异常</h2>\r\n<h3><a name=\"t60\"></a><a name=\"t60\"></a><a id=\"_803\"></a>缓存雪崩</h3>\r\n<p><strong>缓存雪崩</strong>是指缓存同一时间大面积的失效，所以，后面的请求都会落到数据库上，造成数据库短时间内承受大量请求而崩掉。</p>\r\n<p><strong>解决方案</strong></p>\r\n<ol><li>缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。</li><li>一般并发量不是特别多的时候，使用最多的解决方案是加锁排队。</li><li>给每一个缓存数据增加相应的缓存标记，记录缓存的是否失效，如果缓存标记失效，则更新数据缓存。</li></ol>\r\n<h3><a name=\"t61\"></a><a name=\"t61\"></a><a id=\"_815\"></a>缓存穿透</h3>\r\n<p><strong>缓存穿透</strong>是指缓存和数据库中都没有的数据，导致所有的请求都落到数据库上，造成数据库短时间内承受大量请求而崩掉。</p>\r\n<p><strong>解决方案</strong></p>\r\n<ol><li>接口层增加校验，如用户鉴权校验，id做基础校验，id&lt;=0的直接拦截；</li><li>从缓存取不到的数据，在数据库中也没有取到，这时也可以将key-value对写为key-null，缓存有效时间可以设置短点，如30秒（设置太长会导致正常情况也没法使用）。这样可以防止攻击用户反复用同一个id暴力攻击</li><li>采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的 bitmap 中，一个一定不存在的数据会被这个 bitmap 拦截掉，从而避免了对底层存储系统的查询压力</li></ol>\r\n<p><strong>附加</strong></p>\r\n<p>对于空间的利用到达了一种极致，那就是Bitmap和布隆过滤器(Bloom Filter)。<br> Bitmap： 典型的就是哈希表<br> 缺点是，Bitmap对于每个元素只能记录1bit信息，如果还想完成额外的功能，恐怕只能靠牺牲更多的空间、时间来完成了。</p>\r\n<p>布隆过滤器（推荐）</p>\r\n<p>就是引入了k(k&gt;1)k(k&gt;1)个相互独立的哈希函数，保证在给定的空间、误判率下，完成元素判重的过程。<br> 它的优点是空间效率和查询时间都远远超过一般的算法，缺点是有一定的误识别率和删除困难。<br> Bloom-Filter算法的核心思想就是利用多个不同的Hash函数来解决“冲突”。<br> Hash存在一个冲突（碰撞）的问题，用同一个Hash得到的两个URL的值有可能相同。为了减少冲突，我们可以多引入几个Hash，如果通过其中的一个Hash值我们得出某元素不在集合中，那么该元素肯定不在集合中。只有在所有的Hash函数告诉我们该元素在集合中时，才能确定该元素存在于集合中。这便是Bloom-Filter的基本思想。<br> Bloom-Filter一般用于在大数据量的集合中判定某元素是否存在。</p>\r\n<h3><a name=\"t62\"></a><a name=\"t62\"></a><a id=\"_843\"></a>缓存击穿</h3>\r\n<p><strong>缓存击穿</strong>是指缓存中没有但数据库中有的数据（一般是缓存时间到期），这时由于并发用户特别多，同时读缓存没读到数据，又同时去数据库去取数据，引起数据库压力瞬间增大，造成过大压力。和缓存雪崩不同的是，缓存击穿指并发查同一条数据，缓存雪崩是不同数据都过期了，很多数据都查不到从而查数据库。</p>\r\n<p><strong>解决方案</strong></p>\r\n<ol><li>设置热点数据永远不过期。</li><li>加互斥锁，互斥锁</li></ol>\r\n<h3><a name=\"t63\"></a><a name=\"t63\"></a><a id=\"_854\"></a>缓存预热</h3>\r\n<p><strong>缓存预热</strong>就是系统上线后，将相关的缓存数据直接加载到缓存系统。这样就可以避免在用户请求的时候，先查询数据库，然后再将数据缓存的问题！用户直接查询事先被预热的缓存数据！</p>\r\n<p><strong>解决方案</strong></p>\r\n<ol><li> <p>直接写个缓存刷新页面，上线时手工操作一下；</p> </li><li> <p>数据量不大，可以在项目启动的时候自动进行加载；</p> </li><li> <p>定时刷新缓存；</p> </li></ol>\r\n<h3><a name=\"t64\"></a><a name=\"t64\"></a><a id=\"_868\"></a>缓存降级</h3>\r\n<p>当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。</p>\r\n<p><strong>缓存降级</strong>的最终目的是保证核心服务可用，即使是有损的。而且有些服务是无法降级的（如加入购物车、结算）。</p>\r\n<p>在进行降级之前要对系统进行梳理，看看系统是不是可以丢卒保帅；从而梳理出哪些必须誓死保护，哪些可降级；比如可以参考日志级别设置预案：</p>\r\n<ol><li> <p>一般：比如有些服务偶尔因为网络抖动或者服务正在上线而超时，可以自动降级；</p> </li><li> <p>警告：有些服务在一段时间内成功率有波动（如在95~100%之间），可以自动降级或人工降级，并发送告警；</p> </li><li> <p>错误：比如可用率低于90%，或者数据库连接池被打爆了，或者访问量突然猛增到系统能承受的最大阀值，此时可以根据情况自动降级或者人工降级；</p> </li><li> <p>严重错误：比如因为特殊原因数据错误了，此时需要紧急人工降级。</p> </li></ol>\r\n<p>服务降级的目的，是为了防止Redis服务故障，导致数据库跟着一起发生雪崩问题。因此，对于不重要的缓存数据，可以采取服务降级策略，例如一个比较常见的做法就是，Redis出现问题，不去数据库查询，而是直接返回默认值给用户。</p>\r\n<h3><a name=\"t65\"></a><a name=\"t65\"></a><a id=\"_889\"></a>热点数据和冷数据</h3>\r\n<p>热点数据，缓存才有价值</p>\r\n<p>对于冷数据而言，大部分数据可能还没有再次访问到就已经被挤出内存，不仅占用内存，而且价值不大。频繁修改的数据，看情况考虑使用缓存</p>\r\n<p>对于热点数据，比如我们的某IM产品，生日祝福模块，当天的寿星列表，缓存以后可能读取数十万次。再举个例子，某导航产品，我们将导航信息，缓存以后可能读取数百万次。</p>\r\n<p>数据更新前至少读取两次，缓存才有意义。这个是最基本的策略，如果缓存还没有起作用就失效了，那就没有太大价值了。</p>\r\n<p>那存不存在，修改频率很高，但是又不得不考虑缓存的场景呢？有！比如，这个读取接口对数据库的压力很大，但是又是热点数据，这个时候就需要考虑通过缓存手段，减少数据库的压力，比如我们的某助手产品的，点赞数，收藏数，分享数等是非常典型的热点数据，但是又不断变化，此时就需要将数据同步保存到Redis缓存，减少数据库压力。</p>\r\n<h3><a name=\"t66\"></a><a name=\"t66\"></a><a id=\"key_903\"></a>缓存热点key</h3>\r\n<p>缓存中的一个Key(比如一个促销商品)，在某个时间点过期的时候，恰好在这个时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。</p>\r\n<p><strong>解决方案</strong></p>\r\n<p>对缓存查询加锁，如果KEY不存在，就加锁，然后查DB入缓存，然后解锁；其他进程如果发现有锁就等待，然后等解锁后返回数据或者进入DB查询</p>\r\n<h2><a name=\"t67\"></a><a name=\"t67\"></a><a id=\"_915\"></a>常用工具</h2>\r\n<h3><a name=\"t68\"></a><a name=\"t68\"></a><a id=\"RedisJava_917\"></a>Redis支持的Java客户端都有哪些？官方推荐用哪个？</h3>\r\n<p>Redisson、Jedis、lettuce等等，官方推荐使用Redisson。</p>\r\n<h3><a name=\"t69\"></a><a name=\"t69\"></a><a id=\"RedisRedisson_923\"></a>Redis和Redisson有什么关系？</h3>\r\n<p>Redisson是一个高级的分布式协调Redis客服端，能帮助用户在分布式环境中轻松实现一些Java的对象 (Bloom filter, BitSet, Set, SetMultimap, ScoredSortedSet, SortedSet, Map, ConcurrentMap, List, ListMultimap, Queue, BlockingQueue, Deque, BlockingDeque, Semaphore, Lock, ReadWriteLock, AtomicLong, CountDownLatch, Publish / Subscribe, HyperLogLog)。</p>\r\n<h3><a name=\"t70\"></a><a name=\"t70\"></a><a id=\"JedisRedisson_929\"></a>Jedis与Redisson对比有什么优缺点？</h3>\r\n<p>Jedis是Redis的Java实现的客户端，其API提供了比较全面的Redis命令的支持；Redisson实现了分布式和可扩展的Java数据结构，和Jedis相比，功能较为简单，不支持字符串操作，不支持排序、事务、管道、分区等Redis特性。Redisson的宗旨是促进使用者对Redis的关注分离，从而让使用者能够将精力更集中地放在处理业务逻辑上。</p>\r\n<h2><a name=\"t71\"></a><a name=\"t71\"></a><a id=\"_937\"></a>其他问题</h2>\r\n<h3><a name=\"t72\"></a><a name=\"t72\"></a><a id=\"RedisMemcached_939\"></a>Redis与Memcached的区别</h3>\r\n<p>两者都是非关系型内存键值数据库，现在公司一般都是用 Redis 来实现缓存，而且 Redis 自身也越来越强大了！Redis 与 Memcached 主要有以下不同：</p>\r\n<div class=\"table-box\"><table><thead><tr><th align=\"center\">对比参数</th><th align=\"center\">Redis</th><th align=\"center\">Memcached</th></tr></thead><tbody><tr><td align=\"center\">类型</td><td align=\"center\">1. 支持内存 2. 非关系型数据库</td><td align=\"center\">1. 支持内存 2. 键值对形式 3. 缓存形式</td></tr><tr><td align=\"center\"><strong>数据存储类型</strong></td><td align=\"center\">1. String 2. List 3. Set 4. Hash 5. Sort Set 【俗称ZSet】</td><td align=\"center\">1. 文本型 2. 二进制类型</td></tr><tr><td align=\"center\">查询【操作】类型</td><td align=\"center\">1. 批量操作 2. 事务支持 3. 每个类型不同的CRUD</td><td align=\"center\">1.常用的CRUD 2. 少量的其他命令</td></tr><tr><td align=\"center\">附加功能</td><td align=\"center\">1. 发布/订阅模式 2. 主从分区 3. 序列化支持 4. 脚本支持【Lua脚本】</td><td align=\"center\">1. 多线程服务支持</td></tr><tr><td align=\"center\"><strong>网络IO模型</strong></td><td align=\"center\">1. 单线程的多路 IO 复用模型</td><td align=\"center\">1. 多线程，非阻塞IO模式</td></tr><tr><td align=\"center\">事件库</td><td align=\"center\">自封转简易事件库AeEvent</td><td align=\"center\">贵族血统的LibEvent事件库</td></tr><tr><td align=\"center\"><strong>持久化支持</strong></td><td align=\"center\">1. RDB 2. AOF</td><td align=\"center\">不支持</td></tr><tr><td align=\"center\"><strong>集群模式</strong></td><td align=\"center\">原生支持 cluster 模式，可以实现主从复制，读写分离</td><td align=\"center\">没有原生的集群模式，需要依靠客户端来实现往集群中分片写入数据</td></tr><tr><td align=\"center\">内存管理机制</td><td align=\"center\">在 Redis 中，并不是所有数据都一直存储在内存中，可以将一些很久没用的 value 交换到磁盘</td><td align=\"center\">Memcached 的数据则会一直在内存中，Memcached 将内存分割成特定长度的块来存储数据，以完全解决内存碎片的问题。但是这种方式会使得内存的利用率不高，例如块的大小为 128 bytes，只存储 100 bytes 的数据，那么剩下的 28 bytes 就浪费掉了。</td></tr><tr><td align=\"center\"><strong>适用场景</strong></td><td align=\"center\">复杂数据结构，有持久化，高可用需求，value存储内容较大</td><td align=\"center\">纯key-value，数据量非常大，并发量非常大的业务</td></tr></tbody></table></div>\r\n<p>(1) memcached所有的值均是简单的字符串，redis作为其替代者，支持更为丰富的数据类型</p>\r\n<p>(2) redis的速度比memcached快很多</p>\r\n<p>(3) redis可以持久化其数据</p>\r\n<h3><a name=\"t73\"></a><a name=\"t73\"></a><a id=\"_964\"></a>如何保证缓存与数据库双写时的数据一致性？</h3>\r\n<p>你只要用缓存，就可能会涉及到缓存与数据库双存储双写，你只要是双写，就一定会有数据一致性的问题，那么你如何解决一致性问题？</p>\r\n<p>一般来说，就是如果你的系统不是严格要求缓存+数据库必须一致性的话，缓存可以稍微的跟数据库偶尔有不一致的情况，最好不要做这个方案，读请求和写请求串行化，串到一个内存队列里去，这样就可以保证一定不会出现不一致的情况</p>\r\n<p>串行化之后，就会导致系统的吞吐量会大幅度的降低，用比正常情况下多几倍的机器去支撑线上的一个请求。</p>\r\n<p>还有一种方式就是可能会暂时产生不一致的情况，但是发生的几率特别小，就是<strong>先更新数据库，然后再删除缓存。</strong></p>\r\n<div class=\"table-box\"><table><thead><tr><th>问题场景</th><th>描述</th><th>解决</th></tr></thead><tbody><tr><td>先写缓存，再写数据库，缓存写成功，数据库写失败</td><td>缓存写成功，但写数据库失败或者响应延迟，则下次读取（并发读）缓存时，就出现脏读</td><td>这个写缓存的方式，本身就是错误的，需要改为先写数据库，把旧缓存置为失效；读取数据的时候，如果缓存不存在，则读取数据库再写缓存</td></tr><tr><td>先写数据库，再写缓存，数据库写成功，缓存写失败</td><td>写数据库成功，但写缓存失败，则下次读取（并发读）缓存时，则读不到数据</td><td>缓存使用时，假如读缓存失败，先读数据库，再回写缓存的方式实现</td></tr><tr><td>需要缓存异步刷新</td><td>指数据库操作和写缓存不在一个操作步骤中，比如在分布式场景下，无法做到同时写缓存或需要异步刷新（补救措施）时候</td><td>确定哪些数据适合此类场景，根据经验值确定合理的数据不一致时间，用户数据刷新的时间间隔</td></tr></tbody></table></div>\r\n<h3><a name=\"t74\"></a><a name=\"t74\"></a><a id=\"Redis_982\"></a>Redis常见性能问题和解决方案？</h3>\r\n<ol><li>Master最好不要做任何持久化工作，包括内存快照和AOF日志文件，特别是不要启用内存快照做持久化。</li><li>如果数据比较关键，某个Slave开启AOF备份数据，策略为每秒同步一次。</li><li>为了主从复制的速度和连接的稳定性，Slave和Master最好在同一个局域网内。</li><li>尽量避免在压力较大的主库上增加从库</li><li>Master调用BGREWRITEAOF重写AOF文件，AOF在重写的时候会占大量的CPU和内存资源，导致服务load过高，出现短暂服务暂停现象。</li><li>为了Master的稳定性，主从复制不要用图状结构，用单向链表结构更稳定，即主从关系为：Master&lt;–Slave1&lt;–Slave2&lt;–Slave3…，这样的结构也方便解决单点故障问题，实现Slave对Master的替换，也即，如果Master挂了，可以立马启用Slave1做Master，其他不变。</li></ol>\r\n<h3><a name=\"t75\"></a><a name=\"t75\"></a><a id=\"RedisWindows_993\"></a>Redis官方为什么不提供Windows版本？</h3>\r\n<p>因为目前Linux版本已经相当稳定，而且用户量很大，无需开发windows版本，反而会带来兼容性等问题。</p>\r\n<h3><a name=\"t76\"></a><a name=\"t76\"></a><a id=\"_999\"></a>一个字符串类型的值能存储最大容量是多少？</h3>\r\n<p>512M</p>\r\n<h3><a name=\"t77\"></a><a name=\"t77\"></a><a id=\"Redis_1005\"></a>Redis如何做大量数据插入？</h3>\r\n<p>Redis2.6开始redis-cli支持一种新的被称之为pipe mode的新模式用于执行大量数据插入工作。</p>\r\n<h3><a name=\"t78\"></a><a name=\"t78\"></a><a id=\"Redis1key10wkey_1011\"></a>假如Redis里面有1亿个key，其中有10w个key是以某个固定的已知的前缀开头的，如果将它们全部找出来？</h3>\r\n<p>使用keys指令可以扫出指定模式的key列表。<br> 对方接着追问：如果这个redis正在给线上的业务提供服务，那使用keys指令会有什么问题？<br> 这个时候你要回答redis关键的一个特性：redis的单线程的。keys指令会导致线程阻塞一段时间，线上服务会停顿，直到指令执行完毕，服务才能恢复。这个时候可以使用scan指令，scan指令可以无阻塞的提取出指定模式的key列表，但是会有一定的重复概率，在客户端做一次去重就可以了，但是整体所花费的时间会比直接用keys指令长。</p>\r\n<h3><a name=\"t79\"></a><a name=\"t79\"></a><a id=\"Redis_1019\"></a>使用Redis做过异步队列吗，是如何实现的</h3>\r\n<p>使用list类型保存数据信息，rpush生产消息，lpop消费消息，当lpop没有消息时，可以sleep一段时间，然后再检查有没有信息，如果不想sleep的话，可以使用blpop, 在没有信息的时候，会一直阻塞，直到信息的到来。redis可以通过pub/sub主题订阅模式实现一个生产者，多个消费者，当然也存在一定的缺点，当消费者下线时，生产的消息会丢失。</p>\r\n<h3><a name=\"t80\"></a><a name=\"t80\"></a><a id=\"Redis_1025\"></a>Redis如何实现延时队列</h3>\r\n<p>使用sortedset，使用时间戳做score, 消息内容作为key,调用zadd来生产消息，消费者使用zrangbyscore获取n秒之前的数据做轮询处理。</p>\r\n<h3><a name=\"t81\"></a><a name=\"t81\"></a><a id=\"Redis_1031\"></a>Redis回收进程如何工作的？</h3>\r\n<ol><li>一个客户端运行了新的命令，添加了新的数据。</li><li>Redis检查内存使用情况，如果大于maxmemory的限制， 则根据设定好的策略进行回收。</li><li>一个新的命令被执行，等等。</li><li>所以我们不断地穿越内存限制的边界，通过不断达到边界然后不断地回收回到边界以下。</li></ol>\r\n<p>如果一个命令的结果导致大量内存被使用（例如很大的集合的交集保存到一个新的键），不用多久内存限制就会被这个内存使用量超越。</p>\r\n<h3><a name=\"t82\"></a><a name=\"t82\"></a><a id=\"Redis_1042\"></a>Redis回收使用的是什么算法？</h3>\r\n<p>LRU算法</p>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_redis.vue?vue&type=template&id=048672bc\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>消息中间件MQ与RabbitMQ面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"MQMQ_36\"></a>为什么使用MQ？MQ的优点</h2>\r\n<p>简答</p>\r\n<ul><li>异步处理 - 相比于传统的串行、并行方式，提高了系统吞吐量。</li><li>应用解耦 - 系统间通过消息通信，不用关心其他系统的处理。</li><li>流量削锋 - 可以通过消息队列长度控制请求量；可以缓解短时间内的高并发请求。</li><li>日志处理 - 解决大量日志传输。</li><li>消息通讯 - 消息队列一般都内置了高效的通信机制，因此也可以用在纯的消息通讯。比如实现点对点消息队列，或者聊天室等。</li></ul>\r\n<p>详答</p>\r\n<p>主要是：解耦、异步、削峰。</p>\r\n<p><strong>解耦</strong>：A 系统发送数据到 BCD 三个系统，通过接口调用发送。如果 E 系统也要这个数据呢？那如果 C 系统现在不需要了呢？A 系统负责人几乎崩溃…A 系统跟其它各种乱七八糟的系统严重耦合，A 系统产生一条比较关键的数据，很多系统都需要 A 系统将这个数据发送过来。如果使用 MQ，A 系统产生一条数据，发送到 MQ 里面去，哪个系统需要数据自己去 MQ 里面消费。如果新系统需要数据，直接从 MQ 里消费即可；如果某个系统不需要这条数据了，就取消对 MQ 消息的消费即可。这样下来，A 系统压根儿不需要去考虑要给谁发送数据，不需要维护这个代码，也不需要考虑人家是否调用成功、失败超时等情况。</p>\r\n<p>就是一个系统或者一个模块，调用了多个系统或者模块，互相之间的调用很复杂，维护起来很麻烦。但是其实这个调用是不需要直接同步调用接口的，如果用 MQ 给它异步化解耦。</p>\r\n<p><strong>异步</strong>：A 系统接收一个请求，需要在自己本地写库，还需要在 BCD 三个系统写库，自己本地写库要 3ms，BCD 三个系统分别写库要 300ms、450ms、200ms。最终请求总延时是 3 + 300 + 450 + 200 = 953ms，接近 1s，用户感觉搞个什么东西，慢死了慢死了。用户通过浏览器发起请求。如果使用 MQ，那么 A 系统连续发送 3 条消息到 MQ 队列中，假如耗时 5ms，A 系统从接受一个请求到返回响应给用户，总时长是 3 + 5 = 8ms。</p>\r\n<p><strong>削峰</strong>：减少高峰时期对服务器压力。</p>\r\n<h2><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"RabbitMQ_62\"></a>消息队列有什么优缺点？RabbitMQ有什么优缺点？</h2>\r\n<p>优点上面已经说了，就是<strong>在特殊场景下有其对应的好处</strong>，<strong>解耦</strong>、<strong>异步</strong>、<strong>削峰</strong>。</p>\r\n<p>缺点有以下几个：</p>\r\n<p><strong>系统可用性降低</strong></p>\r\n<p>本来系统运行好好的，现在你非要加入个消息队列进去，那消息队列挂了，你的系统不是呵呵了。因此，系统可用性会降低；</p>\r\n<p><strong>系统复杂度提高</strong></p>\r\n<p>加入了消息队列，要多考虑很多方面的问题，比如：一致性问题、如何保证消息不被重复消费、如何保证消息可靠性传输等。因此，需要考虑的东西更多，复杂性增大。</p>\r\n<p><strong>一致性问题</strong></p>\r\n<p>A 系统处理完了直接返回成功了，人都以为你这个请求就成功了；但是问题是，要是 BCD 三个系统那里，BD 两个系统写库成功了，结果 C 系统写库失败了，咋整？你这数据就不一致了。</p>\r\n<p>所以消息队列实际是一种非常复杂的架构，你引入它有很多好处，但是也得针对它带来的坏处做各种额外的技术方案和架构来规避掉，做好之后，你会发现，妈呀，系统复杂度提升了一个数量级，也许是复杂了 10 倍。但是关键时刻，用，还是得用的。</p>\r\n<h2><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"_84\"></a>你们公司生产环境用的是什么消息中间件？</h2>\r\n<p>这个首先你可以说下你们公司选用的是什么消息中间件，比如用的是RabbitMQ，然后可以初步给一些你对不同MQ中间件技术的选型分析。</p>\r\n<p>举个例子：比如说ActiveMQ是老牌的消息中间件，国内很多公司过去运用的还是非常广泛的，功能很强大。</p>\r\n<p>但是问题在于没法确认ActiveMQ可以支撑互联网公司的高并发、高负载以及高吞吐的复杂场景，在国内互联网公司落地较少。而且使用较多的是一些传统企业，用ActiveMQ做异步调用和系统解耦。</p>\r\n<p>然后你可以说说RabbitMQ，他的好处在于可以支撑高并发、高吞吐、性能很高，同时有非常完善便捷的后台管理界面可以使用。</p>\r\n<p>另外，他还支持集群化、高可用部署架构、消息高可靠支持，功能较为完善。</p>\r\n<p>而且经过调研，国内各大互联网公司落地大规模RabbitMQ集群支撑自身业务的case较多，国内各种中小型互联网公司使用RabbitMQ的实践也比较多。</p>\r\n<p>除此之外，RabbitMQ的开源社区很活跃，较高频率的迭代版本，来修复发现的bug以及进行各种优化，因此综合考虑过后，公司采取了RabbitMQ。</p>\r\n<p>但是RabbitMQ也有一点缺陷，就是他自身是基于erlang语言开发的，所以导致较为难以分析里面的源码，也较难进行深层次的源码定制和改造，毕竟需要较为扎实的erlang语言功底才可以。</p>\r\n<p>然后可以聊聊RocketMQ，是阿里开源的，经过阿里的生产环境的超高并发、高吞吐的考验，性能卓越，同时还支持分布式事务等特殊场景。</p>\r\n<p>而且RocketMQ是基于Java语言开发的，适合深入阅读源码，有需要可以站在源码层面解决线上生产问题，包括源码的二次开发和改造。</p>\r\n<p>另外就是Kafka。Kafka提供的消息中间件的功能明显较少一些，相对上述几款MQ中间件要少很多。</p>\r\n<p>但是Kafka的优势在于专为超高吞吐量的实时日志采集、实时数据同步、实时数据计算等场景来设计。</p>\r\n<p>因此Kafka在大数据领域中配合实时计算技术（比如Spark Streaming、Storm、Flink）使用的较多。但是在传统的MQ中间件使用场景中较少采用。</p>\r\n<h2><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"KafkaActiveMQRabbitMQRocketMQ__122\"></a>Kafka、ActiveMQ、RabbitMQ、RocketMQ 有什么优缺点？</h2>\r\n<div class=\"table-box\"><table><thead><tr><th></th><th>ActiveMQ</th><th>RabbitMQ</th><th>RocketMQ</th><th>Kafka</th><th>ZeroMQ</th></tr></thead><tbody><tr><td>单机吞吐量</td><td>比RabbitMQ低</td><td>2.6w/s（消息做持久化）</td><td>11.6w/s</td><td>17.3w/s</td><td>29w/s</td></tr><tr><td>开发语言</td><td>Java</td><td>Erlang</td><td>Java</td><td>Scala/Java</td><td>C</td></tr><tr><td>主要维护者</td><td>Apache</td><td>Mozilla/Spring</td><td>Alibaba</td><td>Apache</td><td>iMatix，创始人已去世</td></tr><tr><td>成熟度</td><td>成熟</td><td>成熟</td><td>开源版本不够成熟</td><td>比较成熟</td><td>只有C、PHP等版本成熟</td></tr><tr><td>订阅形式</td><td>点对点(p2p)、广播（发布-订阅）</td><td>提供了4种：direct, topic ,Headers和fanout。fanout就是广播模式</td><td>基于topic/messageTag以及按照消息类型、属性进行正则匹配的发布订阅模式</td><td>基于topic以及按照topic进行正则匹配的发布订阅模式</td><td>点对点(p2p)</td></tr><tr><td>持久化</td><td>支持少量堆积</td><td>支持少量堆积</td><td>支持大量堆积</td><td>支持大量堆积</td><td>不支持</td></tr><tr><td>顺序消息</td><td>不支持</td><td>不支持</td><td>支持</td><td>支持</td><td>不支持</td></tr><tr><td>性能稳定性</td><td>好</td><td>好</td><td>一般</td><td>较差</td><td>很好</td></tr><tr><td>集群方式</td><td>支持简单集群模式，比如’主-备’，对高级集群模式支持不好。</td><td>支持简单集群，'复制’模式，对高级集群模式支持不好。</td><td>常用 多对’Master-Slave’ 模式，开源版本需手动切换Slave变成Master</td><td>天然的‘Leader-Slave’无状态集群，每台服务器既是Master也是Slave</td><td>不支持</td></tr><tr><td>管理界面</td><td>一般</td><td>较好</td><td>一般</td><td>无</td><td>无</td></tr></tbody></table></div>\r\n<p>综上，各种对比之后，有如下建议：</p>\r\n<p>一般的业务系统要引入 MQ，最早大家都用 ActiveMQ，但是现在确实大家用的不多了，没经过大规模吞吐量场景的验证，社区也不是很活跃，所以大家还是算了吧，我个人不推荐用这个了；</p>\r\n<p>后来大家开始用 RabbitMQ，但是确实 erlang 语言阻止了大量的 Java 工程师去深入研究和掌控它，对公司而言，几乎处于不可控的状态，但是确实人家是开源的，比较稳定的支持，活跃度也高；</p>\r\n<p>不过现在确实越来越多的公司会去用 RocketMQ，确实很不错，毕竟是阿里出品，但社区可能有突然黄掉的风险（目前 RocketMQ 已捐给 <a href=\"https://github.com/apache/rocketmq\">Apache</a>，但 GitHub 上的活跃度其实不算高）对自己公司技术实力有绝对自信的，推荐用 RocketMQ，否则回去老老实实用 RabbitMQ 吧，人家有活跃的开源社区，绝对不会黄。</p>\r\n<p>所以<strong>中小型公司</strong>，技术实力较为一般，技术挑战不是特别高，用 RabbitMQ 是不错的选择；<strong>大型公司</strong>，基础架构研发实力较强，用 RocketMQ 是很好的选择。</p>\r\n<p>如果是<strong>大数据领域</strong>的实时计算、日志采集等场景，用 Kafka 是业内标准的，绝对没问题，社区活跃度很高，绝对不会黄，何况几乎是全世界这个领域的事实性规范。</p>\r\n<h2><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"MQ__151\"></a>MQ 有哪些常见问题？如何解决这些问题？</h2>\r\n<p>MQ 的常见问题有：</p>\r\n<ol><li>消息的顺序问题</li><li>消息的重复问题</li></ol>\r\n<p><strong>消息的顺序问题</strong></p>\r\n<p>消息有序指的是可以按照消息的发送顺序来消费。</p>\r\n<p>假如生产者产生了 2 条消息：M1、M2，假定 M1 发送到 S1，M2 发送到 S2，如果要保证 M1 先于 M2 被消费，怎么做？</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS81LzQvMTZhODMwNzVlMjc1NTFiMA?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>解决方案：</p>\r\n<p>（1）保证生产者 - MQServer - 消费者是一对一对一的关系</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS81LzQvMTZhODMwNjg3MDJhOTBiNw?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>缺陷：</p>\r\n<ul><li>并行度就会成为消息系统的瓶颈（吞吐量不够）</li><li>更多的异常处理，比如：只要消费端出现问题，就会导致整个处理流程阻塞，我们不得不花费更多的精力来解决阻塞的问题。 （2）通过合理的设计或者将问题分解来规避。</li><li>不关注乱序的应用实际大量存在</li><li>队列无序并不意味着消息无序 所以从业务层面来保证消息的顺序而不仅仅是依赖于消息系统，是一种更合理的方式。</li></ul>\r\n<p><strong>消息的重复问题</strong></p>\r\n<p>造成消息重复的根本原因是：网络不可达。</p>\r\n<p>所以解决这个问题的办法就是绕过这个问题。那么问题就变成了：如果消费端收到两条一样的消息，应该怎样处理？</p>\r\n<p>消费端处理消息的业务逻辑保持幂等性。只要保持幂等性，不管来多少条重复消息，最后处理的结果都一样。保证每条消息都有唯一编号且保证消息处理成功与去重表的日志同时出现。利用一张日志表来记录已经处理成功的消息的 ID，如果新到的消息 ID 已经在日志表中，那么就不再处理这条消息。</p>\r\n<h2><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"RabbitMQ_191\"></a>什么是RabbitMQ？</h2>\r\n<p>RabbitMQ是一款开源的，Erlang编写的，基于AMQP协议的消息中间件</p>\r\n<h2><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"rabbitmq__197\"></a>rabbitmq 的使用场景</h2>\r\n<p>（1）服务间异步通信</p>\r\n<p>（2）顺序消费</p>\r\n<p>（3）定时任务</p>\r\n<p>（4）请求削峰</p>\r\n<h2><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"RabbitMQ_209\"></a>RabbitMQ基本概念</h2>\r\n<ul><li>Broker： 简单来说就是消息队列服务器实体</li><li>Exchange： 消息交换机，它指定消息按什么规则，路由到哪个队列</li><li>Queue： 消息队列载体，每个消息都会被投入到一个或多个队列</li><li>Binding： 绑定，它的作用就是把exchange和queue按照路由规则绑定起来</li><li>Routing Key： 路由关键字，exchange根据这个关键字进行消息投递</li><li>VHost： vhost 可以理解为虚拟 broker ，即 mini-RabbitMQ server。其内部均含有独立的 queue、exchange 和 binding 等，但最最重要的是，其拥有独立的权限系统，可以做到 vhost 范围的用户控制。当然，从 RabbitMQ 的全局角度，vhost 可以作为不同权限隔离的手段（一个典型的例子就是不同的应用可以跑在不同的 vhost 中）。</li><li>Producer： 消息生产者，就是投递消息的程序</li><li>Consumer： 消息消费者，就是接受消息的程序</li><li>Channel： 消息通道，在客户端的每个连接里，可建立多个channel，每个channel代表一个会话任务</li></ul>\r\n<p>由Exchange、Queue、RoutingKey三个才能决定一个从Exchange到Queue的唯一的线路。</p>\r\n<h2><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"RabbitMQ_225\"></a>RabbitMQ的工作模式</h2>\r\n<p><strong>一.simple模式（即最简单的收发模式）</strong></p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS84LzI4LzE2Y2Q3NTE3OGI3ZTVlMjA?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>1.消息产生消息，将消息放入队列</p>\r\n<p>2.消息的消费者(consumer) 监听 消息队列,如果队列中有消息,就消费掉,消息被拿走后,自动从队列中删除(隐患 消息可能没有被消费者正确处理,已经从队列中消失了,造成消息的丢失，这里可以设置成手动的ack,但如果设置成手动ack，处理完后要及时发送ack消息给队列，否则会造成内存溢出)。</p>\r\n<p><strong>二.work工作模式(资源的竞争)</strong></p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS84LzI4LzE2Y2Q3NTdiYzA1YzUyMjY?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>1.消息产生者将消息放入队列消费者可以有多个,消费者1,消费者2同时监听同一个队列,消息被消费。C1 C2共同争抢当前的消息队列内容,谁先拿到谁负责消费消息(隐患：高并发情况下,默认会产生某一个消息被多个消费者共同使用,可以设置一个开关(syncronize) 保证一条消息只能被一个消费者使用)。</p>\r\n<p><strong>三.publish/subscribe发布订阅(共享资源)</strong></p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS84LzI4LzE2Y2Q3Njk2NGMxMGM3NWI?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>1、每个消费者监听自己的队列；</p>\r\n<p>2、生产者将消息发给broker，由交换机将消息转发到绑定此交换机的每个队列，每个绑定交换机的队列都将接收到消息。</p>\r\n<p><strong>四.routing路由模式</strong></p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS84LzI4LzE2Y2Q3ODFiZWFjOWMxNzQ?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>1.消息生产者将消息发送给交换机按照路由判断,路由是字符串(info) 当前产生的消息携带路由字符(对象的方法),交换机根据路由的key,只能匹配上路由key对应的消息队列,对应的消费者才能消费消息;</p>\r\n<p>2.根据业务功能定义路由字符串</p>\r\n<p>3.从系统的代码逻辑中获取对应的功能字符串,将消息任务扔到对应的队列中。</p>\r\n<p>4.业务场景:error 通知;EXCEPTION;错误通知的功能;传统意义的错误通知;客户通知;利用key路由,可以将程序中的错误封装成消息传入到消息队列中,开发者可以自定义消费者,实时接收错误;</p>\r\n<p><strong>五.topic 主题模式(路由模式的一种)</strong></p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS84LzI4LzE2Y2Q3ODQ2ZjYxNjk2NjE?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>1.星号井号代表通配符</p>\r\n<p>2.星号代表多个单词,井号代表一个单词</p>\r\n<p>3.路由功能添加模糊匹配</p>\r\n<p>4.消息产生者产生消息,把消息交给交换机</p>\r\n<p>5.交换机根据key的规则模糊匹配到对应的队列,由队列的监听消费者接收消息消费</p>\r\n<p>（在我的理解看来就是routing查询的一种模糊匹配，就类似sql的模糊查询方式）</p>\r\n<h2><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"RabbitMQ_299\"></a>如何保证RabbitMQ消息的顺序性？</h2>\r\n<p>拆分多个 queue，每个 queue 一个 consumer，就是多一些 queue 而已，确实是麻烦点；或者就一个 queue 但是对应一个 consumer，然后这个 consumer 内部用内存队列做排队，然后分发给底层不同的 worker 来处理。</p>\r\n<h2><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"_305\"></a>消息如何分发？</h2>\r\n<p>若该队列至少有一个消费者订阅，消息将以循环（round-robin）的方式发送给消费者。每条消息只会分发给一个订阅的消费者（前提是消费者能够正常处理消息并进行确认）。通过路由可实现多消费的功能</p>\r\n<h2><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"_311\"></a>消息怎么路由？</h2>\r\n<p>消息提供方-&gt;路由-&gt;一至多个队列消息发布到交换器时，消息将拥有一个路由键（routing key），在消息创建时设定。通过队列路由键，可以把队列绑定到交换器上。消息到达交换器后，RabbitMQ 会将消息的路由键与队列的路由键进行匹配（针对不同的交换器有不同的路由规则）；</p>\r\n<p>常用的交换器主要分为一下三种：</p>\r\n<p>fanout：如果交换器收到消息，将会广播到所有绑定的队列上</p>\r\n<p>direct：如果路由键完全匹配，消息就被投递到相应的队列</p>\r\n<p>topic：可以使来自不同源头的消息能够到达同一个队列。 使用 topic 交换器时，可以使用通配符</p>\r\n<h2><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"_325\"></a>消息基于什么传输？</h2>\r\n<p>由于 TCP 连接的创建和销毁开销较大，且并发数受系统资源限制，会造成性能瓶颈。RabbitMQ 使用信道的方式来传输数据。信道是建立在真实的 TCP 连接内的虚拟连接，且每条 TCP 连接上的信道数量没有限制。</p>\r\n<h2><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"_331\"></a>如何保证消息不被重复消费？或者说，如何保证消息消费时的幂等性？</h2>\r\n<p>先说为什么会重复消费：正常情况下，消费者在消费消息的时候，消费完毕后，会发送一个确认消息给消息队列，消息队列就知道该消息被消费了，就会将该消息从消息队列中删除；</p>\r\n<p>但是因为网络传输等等故障，确认信息没有传送到消息队列，导致消息队列不知道自己已经消费过该消息了，再次将消息分发给其他的消费者。</p>\r\n<p>针对以上问题，一个解决思路是：保证消息的唯一性，就算是多次传输，不要让消息的多次消费带来影响；保证消息等幂性；</p>\r\n<p>比如：在写入消息队列的数据做唯一标示，消费消息时，根据唯一标识判断是否消费过；</p>\r\n<p>假设你有个系统，消费一条消息就往数据库里插入一条数据，要是你一个消息重复两次，你不就插入了两条，这数据不就错了？但是你要是消费到第二次的时候，自己判断一下是否已经消费过了，若是就直接扔了，这样不就保留了一条数据，从而保证了数据的正确性。</p>\r\n<h2><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"_RabbitMQ__345\"></a>如何确保消息正确地发送至 RabbitMQ？ 如何确保消息接收方消费了消息？</h2>\r\n<p><strong>发送方确认模式</strong></p>\r\n<p>将信道设置成 confirm 模式（发送方确认模式），则所有在信道上发布的消息都会被指派一个唯一的 ID。</p>\r\n<p>一旦消息被投递到目的队列后，或者消息被写入磁盘后（可持久化的消息），信道会发送一个确认给生产者（包含消息唯一 ID）。</p>\r\n<p>如果 RabbitMQ 发生内部错误从而导致消息丢失，会发送一条 nack（notacknowledged，未确认）消息。</p>\r\n<p>发送方确认模式是异步的，生产者应用程序在等待确认的同时，可以继续发送消息。当确认消息到达生产者应用程序，生产者应用程序的回调方法就会被触发来处理确认消息。</p>\r\n<p><strong>接收方确认机制</strong></p>\r\n<p>消费者接收每一条消息后都必须进行确认（消息接收和消息确认是两个不同操作）。只有消费者确认了消息，RabbitMQ 才能安全地把消息从队列中删除。</p>\r\n<p>这里并没有用到超时机制，RabbitMQ 仅通过 Consumer 的连接中断来确认是否需要重新发送消息。也就是说，只要连接不中断，RabbitMQ 给了 Consumer 足够长的时间来处理消息。保证数据的最终一致性；</p>\r\n<p>下面罗列几种特殊情况</p>\r\n<ul><li>如果消费者接收到消息，在确认之前断开了连接或取消订阅，RabbitMQ 会认为消息没有被分发，然后重新分发给下一个订阅的消费者。（可能存在消息重复消费的隐患，需要去重）</li><li>如果消费者接收到消息却没有确认消息，连接也未断开，则 RabbitMQ 认为该消费者繁忙，将不会给该消费者分发更多的消息。</li></ul>\r\n<h2><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"RabbitMQ_370\"></a>如何保证RabbitMQ消息的可靠传输？</h2>\r\n<p>消息不可靠的情况可能是消息丢失，劫持等原因；</p>\r\n<p>丢失又分为：生产者丢失消息、消息列表丢失消息、消费者丢失消息；</p>\r\n<p><strong>生产者丢失消息</strong>：从生产者弄丢数据这个角度来看，RabbitMQ提供transaction和confirm模式来确保生产者不丢消息；</p>\r\n<p>transaction机制就是说：发送消息前，开启事务（channel.txSelect()）,然后发送消息，如果发送过程中出现什么异常，事务就会回滚（channel.txRollback()）,如果发送成功则提交事务（channel.txCommit()）。然而，这种方式有个缺点：吞吐量下降；</p>\r\n<p>confirm模式用的居多：一旦channel进入confirm模式，所有在该信道上发布的消息都将会被指派一个唯一的ID（从1开始），一旦消息被投递到所有匹配的队列之后；</p>\r\n<p>rabbitMQ就会发送一个ACK给生产者（包含消息的唯一ID），这就使得生产者知道消息已经正确到达目的队列了；</p>\r\n<p>如果rabbitMQ没能处理该消息，则会发送一个Nack消息给你，你可以进行重试操作。</p>\r\n<p><strong>消息队列丢数据</strong>：消息持久化。</p>\r\n<p>处理消息队列丢数据的情况，一般是开启持久化磁盘的配置。</p>\r\n<p>这个持久化配置可以和confirm机制配合使用，你可以在消息持久化磁盘后，再给生产者发送一个Ack信号。</p>\r\n<p>这样，如果消息持久化磁盘之前，rabbitMQ阵亡了，那么生产者收不到Ack信号，生产者会自动重发。</p>\r\n<p>那么如何持久化呢？</p>\r\n<p>这里顺便说一下吧，其实也很容易，就下面两步</p>\r\n<ol><li>将queue的持久化标识durable设置为true,则代表是一个持久的队列</li><li>发送消息的时候将deliveryMode=2</li></ol>\r\n<p>这样设置以后，即使rabbitMQ挂了，重启后也能恢复数据</p>\r\n<p><strong>消费者丢失消息</strong>：消费者丢数据一般是因为采用了自动确认消息模式，改为手动确认消息即可！</p>\r\n<p>消费者在收到消息之后，处理消息之前，会自动回复RabbitMQ已收到消息；</p>\r\n<p>如果这时处理消息失败，就会丢失该消息；</p>\r\n<p>解决方案：处理消息成功后，手动回复确认消息。</p>\r\n<h2><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"_message__413\"></a>为什么不应该对所有的 message 都使用持久化机制？</h2>\r\n<p>首先，必然导致性能的下降，因为写磁盘比写 RAM 慢的多，message 的吞吐量可能有 10 倍的差距。</p>\r\n<p>其次，message 的持久化机制用在 RabbitMQ 的内置 cluster 方案时会出现“坑爹”问题。矛盾点在于，若 message 设置了 persistent 属性，但 queue 未设置 durable 属性，那么当该 queue 的 owner node 出现异常后，在未重建该 queue 前，发往该 queue 的 message 将被 blackholed ；若 message 设置了 persistent 属性，同时 queue 也设置了 durable 属性，那么当 queue 的 owner node 异常且无法重启的情况下，则该 queue 无法在其他 node 上重建，只能等待其 owner node 重启后，才能恢复该 queue 的使用，而在这段时间内发送给该 queue 的 message 将被 blackholed 。</p>\r\n<p>所以，是否要对 message 进行持久化，需要综合考虑性能需要，以及可能遇到的问题。若想达到 100,000 条/秒以上的消息吞吐量（单 RabbitMQ 服务器），则要么使用其他的方式来确保 message 的可靠 delivery ，要么使用非常快速的存储系统以支持全持久化（例如使用 SSD）。另外一种处理原则是：仅对关键消息作持久化处理（根据业务重要程度），且应该保证关键消息的量不会导致性能瓶颈。</p>\r\n<h2><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"RabbitMQ__423\"></a>如何保证高可用的？RabbitMQ 的集群</h2>\r\n<p>RabbitMQ 是比较有代表性的，因为是基于主从（非分布式）做高可用性的，我们就以 RabbitMQ 为例子讲解第一种 MQ 的高可用性怎么实现。RabbitMQ 有三种模式：单机模式、普通集群模式、镜像集群模式。</p>\r\n<p><strong>单机模式</strong>，就是 Demo 级别的，一般就是你本地启动了玩玩儿的?，没人生产用单机模式</p>\r\n<p><strong>普通集群模式</strong>，意思就是在多台机器上启动多个 RabbitMQ 实例，每个机器启动一个。你创建的 queue，只会放在一个 RabbitMQ 实例上，但是每个实例都同步 queue 的元数据（元数据可以认为是 queue 的一些配置信息，通过元数据，可以找到 queue 所在实例）。你消费的时候，实际上如果连接到了另外一个实例，那么那个实例会从 queue 所在实例上拉取数据过来。这方案主要是提高吞吐量的，就是说让集群中多个节点来服务某个 queue 的读写操作。</p>\r\n<p><strong>镜像集群模式</strong>：这种模式，才是所谓的 RabbitMQ 的高可用模式。跟普通集群模式不一样的是，在镜像集群模式下，你创建的 queue，无论元数据还是 queue 里的消息都会存在于多个实例上，就是说，每个 RabbitMQ 节点都有这个 queue 的一个完整镜像，包含 queue 的全部数据的意思。然后每次你写消息到 queue 的时候，都会自动把消息同步到多个实例的 queue 上。RabbitMQ 有很好的管理控制台，就是在后台新增一个策略，这个策略是镜像集群模式的策略，指定的时候是可以要求数据同步到所有节点的，也可以要求同步到指定数量的节点，再次创建 queue 的时候，应用这个策略，就会自动将数据同步到其他的节点上去了。这样的话，好处在于，你任何一个机器宕机了，没事儿，其它机器（节点）还包含了这个 queue 的完整数据，别的 consumer 都可以到其它节点上去消费数据。坏处在于，第一，这个性能开销也太大了吧，消息需要同步到所有机器上，导致网络带宽压力和消耗很重！RabbitMQ 一个 queue 的数据都是放在一个节点里的，镜像集群下，也是每个节点都放这个 queue 的完整数据。</p>\r\n<h2><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"_435\"></a>如何解决消息队列的延时以及过期失效问题？消息队列满了以后该怎么处理？有几百万消息持续积压几小时，说说怎么解决？</h2>\r\n<p>消息积压处理办法：临时紧急扩容：</p>\r\n<p>先修复 consumer 的问题，确保其恢复消费速度，然后将现有 cnosumer 都停掉。<br> 新建一个 topic，partition 是原来的 10 倍，临时建立好原先 10 倍的 queue 数量。<br> 然后写一个临时的分发数据的 consumer 程序，这个程序部署上去消费积压的数据，消费之后不做耗时的处理，直接均匀轮询写入临时建立好的 10 倍数量的 queue。<br> 接着临时征用 10 倍的机器来部署 consumer，每一批 consumer 消费一个临时 queue 的数据。这种做法相当于是临时将 queue 资源和 consumer 资源扩大 10 倍，以正常的 10 倍速度来消费数据。<br> 等快速消费完积压数据之后，得恢复原先部署的架构，重新用原先的 consumer 机器来消费消息。<br> MQ中消息失效：假设你用的是 RabbitMQ，RabbtiMQ 是可以设置过期时间的，也就是 TTL。如果消息在 queue 中积压超过一定的时间就会被 RabbitMQ 给清理掉，这个数据就没了。那这就是第二个坑了。这就不是说数据会大量积压在 mq 里，而是大量的数据会直接搞丢。我们可以采取一个方案，就是批量重导，这个我们之前线上也有类似的场景干过。就是大量积压的时候，我们当时就直接丢弃数据了，然后等过了高峰期以后，比如大家一起喝咖啡熬夜到晚上12点以后，用户都睡觉了。这个时候我们就开始写程序，将丢失的那批数据，写个临时程序，一点一点的查出来，然后重新灌入 mq 里面去，把白天丢的数据给他补回来。也只能是这样了。假设 1 万个订单积压在 mq 里面，没有处理，其中 1000 个订单都丢了，你只能手动写程序把那 1000 个订单给查出来，手动发到 mq 里去再补一次。</p>\r\n<p>mq消息队列块满了：如果消息积压在 mq 里，你很长时间都没有处理掉，此时导致 mq 都快写满了，咋办？这个还有别的办法吗？没有，谁让你第一个方案执行的太慢了，你临时写程序，接入数据来消费，消费一个丢弃一个，都不要了，快速消费掉所有的消息。然后走第二个方案，到了晚上再补数据吧。</p>\r\n<h2><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"MQ_450\"></a>设计MQ思路</h2>\r\n<p>比如说这个消息队列系统，我们从以下几个角度来考虑一下：</p>\r\n<p>首先这个 mq 得支持可伸缩性吧，就是需要的时候快速扩容，就可以增加吞吐量和容量，那怎么搞？设计个分布式的系统呗，参照一下 kafka 的设计理念，broker -&gt; topic -&gt; partition，每个 partition 放一个机器，就存一部分数据。如果现在资源不够了，简单啊，给 topic 增加 partition，然后做数据迁移，增加机器，不就可以存放更多数据，提供更高的吞吐量了？</p>\r\n<p>其次你得考虑一下这个 mq 的数据要不要落地磁盘吧？那肯定要了，落磁盘才能保证别进程挂了数据就丢了。那落磁盘的时候怎么落啊？顺序写，这样就没有磁盘随机读写的寻址开销，磁盘顺序读写的性能是很高的，这就是 kafka 的思路。</p>\r\n<p>其次你考虑一下你的 mq 的可用性啊？这个事儿，具体参考之前可用性那个环节讲解的 kafka 的高可用保障机制。多副本 -&gt; leader &amp; follower -&gt; broker 挂了重新选举 leader 即可对外服务。</p>\r\n<p>能不能支持数据 0 丢失啊？可以的，参考我们之前说的那个 kafka 数据零丢失方案。</p>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_MQ_RabbitMQ.vue?vue&type=template&id=0395231b\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>Linux面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"Linux__36\"></a>Linux 概述</h2>\r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"Linux_38\"></a>什么是Linux</h3>\r\n<p>Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和Unix的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的Unix工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p>\r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"UnixLinux_44\"></a>Unix和Linux有什么区别？</h3>\r\n<p>Linux和Unix都是功能强大的操作系统，都是应用广泛的服务器操作系统，有很多相似之处，甚至有一部分人错误地认为Unix和Linux操作系统是一样的，然而，事实并非如此，以下是两者的区别。</p>\r\n<ol><li> <p>开源性<br> Linux是一款开源操作系统，不需要付费，即可使用；Unix是一款对源码实行知识产权保护的传统商业软件，使用需要付费授权使用。</p> </li><li> <p>跨平台性<br> Linux操作系统具有良好的跨平台性能，可运行在多种硬件平台上；Unix操作系统跨平台性能较弱，大多需与硬件配套使用。</p> </li><li> <p>可视化界面<br> Linux除了进行命令行操作，还有窗体管理系统；Unix只是命令行下的系统。</p> </li><li> <p>硬件环境<br> Linux操作系统对硬件的要求较低，安装方法更易掌握；Unix对硬件要求比较苛刻，按照难度较大。</p> </li><li> <p>用户群体<br> Linux的用户群体很广泛，个人和企业均可使用；Unix的用户群体比较窄，多是安全性要求高的大型企业使用，如银行、电信部门等，或者Unix硬件厂商使用，如Sun等。<br> 相比于Unix操作系统，Linux操作系统更受广大计算机爱好者的喜爱，主要原因是Linux操作系统具有Unix操作系统的全部功能，并且能够在普通PC计算机上实现全部的Unix特性，开源免费的特性，更容易普及使用！</p> </li></ol>\r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"_Linux__66\"></a>什么是 Linux 内核？</h3>\r\n<p>Linux 系统的核心是内核。内核控制着计算机系统上的所有硬件和软件，在必要时分配硬件，并根据需要执行软件。</p>\r\n<ol><li>系统内存管理</li><li>应用程序管理</li><li>硬件设备管理</li><li>文件系统管理</li></ol>\r\n<h3><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"Linux_77\"></a>Linux的基本组件是什么？</h3>\r\n<p>就像任何其他典型的操作系统一样，Linux拥有所有这些组件：内核，shell和GUI，系统实用程序和应用程序。Linux比其他操作系统更具优势的是每个方面都附带其他功能，所有代码都可以免费下载。</p>\r\n<h3><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"Linux__83\"></a>Linux 的体系结构</h3>\r\n<p>从大的方面讲，Linux 体系结构可以分为两块：</p>\r\n<p><img src=\"https://img-blog.csdnimg.cn/20200229173922281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\r\n<ul><li>用户空间(User Space) ：用户空间又包括用户的应用程序(User Applications)、C 库(C Library) 。</li><li>内核空间(Kernel Space) ：内核空间又包括系统调用接口(System Call Interface)、内核(Kernel)、平台架构相关的代码(Architecture-Dependent Kernel Code) 。</li></ul>\r\n<p><strong>为什么 Linux 体系结构要分为用户空间和内核空间的原因？</strong></p>\r\n<ul><li>1、现代 CPU 实现了不同的工作模式，不同模式下 CPU 可以执行的指令和访问的寄存器不同。</li><li>2、Linux 从 CPU 的角度出发，为了保护内核的安全，把系统分成了两部分。</li></ul>\r\n<p>用户空间和内核空间是程序执行的<strong>两种不同的状态</strong>，我们可以通过两种方式完成用户空间到内核空间的转移：1）系统调用；2）硬件中断。</p>\r\n<h3><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"BASHDOS_101\"></a>BASH和DOS之间的基本区别是什么？</h3>\r\n<p>BASH和DOS控制台之间的主要区别在于3个方面：</p>\r\n<ul><li>BASH命令区分大小写，而DOS命令则不区分;</li><li>在BASH下，/ character是目录分隔符，\\作为转义字符。在DOS下，/用作命令参数分隔符，\\是目录分隔符</li><li>DOS遵循命名文件中的约定，即8个字符的文件名后跟一个点，扩展名为3个字符。BASH没有遵循这样的惯例。</li></ul>\r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"Linux__111\"></a>Linux 开机启动过程？</h3>\r\n<blockquote>\r\n<p>了解即可。</p>\r\n</blockquote>\r\n<ul><li> <p>1、主机加电自检，加载 BIOS 硬件信息。</p> </li><li> <p>2、读取 MBR 的引导文件(GRUB、LILO)。</p> </li><li> <p>3、引导 Linux 内核。</p> </li><li> <p>4、运行第一个进程 init (进程号永远为 1 )。</p> </li><li> <p>5、进入相应的运行级别。</p> </li><li> <p>6、运行终端，输入用户名和密码。</p> </li></ul>\r\n<h3><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"Linux_129\"></a>Linux系统缺省的运行级别？</h3>\r\n<ul><li>关机。</li><li>单机用户模式。</li><li>字符界面的多用户模式(不支持网络)。</li><li>字符界面的多用户模式。</li><li>未分配使用。</li><li>图形界面的多用户模式。</li><li>重启。</li></ul>\r\n<h3><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"Linux__141\"></a>Linux 使用的进程间通信方式？</h3>\r\n<blockquote>\r\n<p>了解即可，不需要太深入。</p>\r\n</blockquote>\r\n<ul><li>1、管道(pipe)、流管道(s_pipe)、有名管道(FIFO)。</li><li>2、信号(signal) 。</li><li>3、消息队列。</li><li>4、共享内存。</li><li>5、信号量。</li><li>6、套接字(socket) 。</li></ul>\r\n<h3><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"Linux__154\"></a>Linux 有哪些系统日志文件？</h3>\r\n<p>比较重要的是 <code>/var/log/messages</code> 日志文件。</p>\r\n<blockquote>\r\n<p>该日志文件是许多进程日志文件的汇总，从该文件可以看出任何入侵企图或成功的入侵。</p>\r\n<p>另外，如果胖友的系统里有 ELK 日志集中收集，它也会被收集进去。</p>\r\n</blockquote>\r\n<h3><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"Linux_164\"></a>Linux系统安装多个桌面环境有帮助吗？</h3>\r\n<p>通常，一个桌面环境，如KDE或Gnome，足以在没有问题的情况下运行。尽管系统允许从一个环境切换到另一个环境，但这对用户来说都是优先考虑的问题。有些程序在一个环境中工作而在另一个环境中无法工作，因此它也可以被视为选择使用哪个环境的一个因素。</p>\r\n<h3><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"_170\"></a>什么是交换空间？</h3>\r\n<p>交换空间是Linux使用的一定空间，用于临时保存一些并发运行的程序。当RAM没有足够的内存来容纳正在执行的所有程序时，就会发生这种情况。</p>\r\n<h3><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"root_176\"></a>什么是root帐户</h3>\r\n<p>root帐户就像一个系统管理员帐户，允许你完全控制系统。你可以在此处创建和维护用户帐户，为每个帐户分配不同的权限。每次安装Linux时都是默认帐户。</p>\r\n<h3><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"LILO_182\"></a>什么是LILO？</h3>\r\n<p>LILO是Linux的引导加载程序。它主要用于将Linux操作系统加载到主内存中，以便它可以开始运行。</p>\r\n<h3><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"BASH_188\"></a>什么是BASH？</h3>\r\n<p>BASH是Bourne Again SHell的缩写。它由Steve Bourne编写，作为原始Bourne Shell（由/ bin / sh表示）的替代品。它结合了原始版本的Bourne Shell的所有功能，以及其他功能，使其更容易使用。从那以后，它已被改编为运行Linux的大多数系统的默认shell。</p>\r\n<h3><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"CLI_194\"></a>什么是CLI？</h3>\r\n<p><strong>命令行界面</strong>（英语**：command-line interface**，缩写]<strong>：CLI</strong>）是在图形用户界面得到普及之前使用最为广泛的用户界面，它通常不支持鼠标，用户通过键盘输入指令，计算机接收到指令后，予以执行。也有人称之为<strong>字符用户界面</strong>（CUI）。</p>\r\n<p>通常认为，命令行界面（CLI）没有图形用户界面（GUI）那么方便用户操作。因为，命令行界面的软件通常需要用户记忆操作的命令，但是，由于其本身的特点，命令行界面要较图形用户界面节约计算机系统的资源。在熟记命令的前提下，使用命令行界面往往要较使用图形用户界面的操作速度要快。所以，图形用户界面的操作系统中，都保留着可选的命令行界面。</p>\r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"GUI_202\"></a>什么是GUI？</h3>\r\n<p>图形用户界面（Graphical User Interface，简称 GUI，又称图形用户接口）是指采用图形方式显示的计算机操作用户界面。</p>\r\n<p>图形用户界面是一种人与计算机通信的界面显示格式，允许用户使用鼠标等输入设备操纵屏幕上的图标或菜单选项，以选择命令、调用文件、启动程序或执行其它一些日常任务。与通过键盘输入文本或字符命令来完成例行任务的字符界面相比，图形用户界面有许多优点。</p>\r\n<h3><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"_210\"></a>开源的优势是什么？</h3>\r\n<p>开源允许你将软件（包括源代码）免费分发给任何感兴趣的人。然后，人们可以添加功能，甚至可以调试和更正源代码中的错误。它们甚至可以让它运行得更好，然后再次自由地重新分配这些增强的源代码。这最终使社区中的每个人受益。</p>\r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"GNU_216\"></a>GNU项目的重要性是什么？</h3>\r\n<p>这种所谓的自由软件运动具有多种优势，例如可以自由地运行程序以及根据你的需要自由学习和修改程序。它还允许你将软件副本重新分发给其他人，以及自由改进软件并将其发布给公众。</p>\r\n<h2><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"_224\"></a>磁盘、目录、文件</h2>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"_Linux__226\"></a>简单 Linux 文件系统？</h3>\r\n<p><strong>在 Linux 操作系统中，所有被操作系统管理的资源，例如网络接口卡、磁盘驱动器、打印机、输入输出设备、普通文件或是目录都被看作是一个文件。</strong></p>\r\n<p>也就是说在 Linux 系统中有一个重要的概念**：一切都是文件**。其实这是 Unix 哲学的一个体现，而 Linux 是重写 Unix 而来，所以这个概念也就传承了下来。在 Unix 系统中，把一切资源都看作是文件，包括硬件设备。UNIX系统把每个硬件都看成是一个文件，通常称为设备文件，这样用户就可以用读写文件的方式实现对硬件的访问。</p>\r\n<p>Linux 支持 5 种文件类型，如下图所示：<img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL3N0YXRpYzIuaW9jb2Rlci5jbi9iNjg2NTQxN2RkMTI0NWU0ZjNjNGJhODc3Y2U5YzVhYQ?x-oss-process=image/format,png\" alt=\"文件类型\"></p>\r\n<h3><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"Linux__236\"></a>Linux 的目录结构是怎样的？</h3>\r\n<blockquote>\r\n<p>这个问题，一般不会问。更多是实际使用时，需要知道。</p>\r\n</blockquote>\r\n<p>Linux 文件系统的结构层次鲜明，就像一棵倒立的树，最顶层是其根目录：<br> <img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL3N0YXRpYzIuaW9jb2Rlci5jbi81YzJmNTRmMjhkNGVhYmJlMTM4ZmQ4Y2JiNzYzYTFmMQ?x-oss-process=image/format,png\" alt=\"Linux的目录结构\"></p>\r\n<p><strong>常见目录说明</strong>：</p>\r\n<ul><li><strong>/bin</strong>： 存放二进制可执行文件(ls,cat,mkdir等)，常用命令一般都在这里；</li><li><strong>/etc</strong>： 存放系统管理和配置文件；</li><li><strong>/home</strong>： 存放所有用户文件的根目录，是用户主目录的基点，比如用户user的主目录就是/home/user，可以用~user表示；</li><li>**/usr **： 用于存放系统应用程序；</li><li><strong>/opt</strong>： 额外安装的可选应用程序包所放置的位置。一般情况下，我们可以把tomcat等都安装到这里；</li><li><strong>/proc</strong>： 虚拟文件系统目录，是系统内存的映射。可直接访问这个目录来获取系统信息；</li><li><strong>/root</strong>： 超级用户（系统管理员）的主目录（特权阶级o）；</li><li><strong>/sbin:</strong> 存放二进制可执行文件，只有root才能访问。这里存放的是系统管理员使用的系统级别的管理命令和程序。如ifconfig等；</li><li><strong>/dev</strong>： 用于存放设备文件；</li><li><strong>/mnt</strong>： 系统管理员安装临时文件系统的安装点，系统提供这个目录是让用户临时挂载其他的文件系统；</li><li><strong>/boot</strong>： 存放用于系统引导时使用的各种文件；</li><li>**/lib **： 存放着和系统运行相关的库文件 ；</li><li><strong>/tmp</strong>： 用于存放各种临时文件，是公用的临时文件存储点；</li><li><strong>/var</strong>： 用于存放运行时需要改变数据的文件，也是某些大文件的溢出区，比方说各种服务的日志文件（系统启动日志等。）等；</li><li><strong>/lost+found</strong>： 这个目录平时是空的，系统非正常关机而留下“无家可归”的文件（windows下叫什么.chk）就在这里。</li></ul>\r\n<h3><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"_inode__263\"></a>什么是 inode ？</h3>\r\n<blockquote>\r\n<p>一般来说，面试不会问 inode 。但是 inode 是一个重要概念，是理解 Unix/Linux 文件系统和硬盘储存的基础。</p>\r\n</blockquote>\r\n<p>理解inode，要从文件储存说起。</p>\r\n<p>文件储存在硬盘上，硬盘的最小存储单位叫做\"扇区\"（Sector）。每个扇区储存512字节（相当于0.5KB）。</p>\r\n<p>操作系统读取硬盘的时候，不会一个个扇区地读取，这样效率太低，而是一次性连续读取多个扇区，即一次性读取一个\"块\"（block）。这种由多个扇区组成的\"块\"，是文件存取的最小单位。\"块\"的大小，最常见的是4KB，即连续八个 sector组成一个 block。</p>\r\n<p>文件数据都储存在\"块\"中，那么很显然，我们还必须找到一个地方储存文件的元信息，比如文件的创建者、文件的创建日期、文件的大小等等。这种储存文件元信息的区域就叫做inode，中文译名为\"索引节点\"。</p>\r\n<p>每一个文件都有对应的inode，里面包含了与该文件有关的一些信息。</p>\r\n<p><strong>简述 Linux 文件系统通过 i 节点把文件的逻辑结构和物理结构转换的工作过程？</strong></p>\r\n<blockquote>\r\n<p>如果看的一脸懵逼，也没关系。一般来说，面试官不太会问这个题目。</p>\r\n</blockquote>\r\n<p>Linux 通过 inode 节点表将文件的逻辑结构和物理结构进行转换。</p>\r\n<ul><li>inode 节点是一个 64 字节长的表，表中包含了文件的相关信息，其中有文件的大小、文件所有者、文件的存取许可方式以及文件的类型等重要信息。在 inode 节点表中最重要的内容是磁盘地址表。在磁盘地址表中有 13 个块号，文件将以块号在磁盘地址表中出现的顺序依次读取相应的块。</li><li>Linux 文件系统通过把 inode 节点和文件名进行连接，当需要读取该文件时，文件系统在当前目录表中查找该文件名对应的项，由此得到该文件相对应的 inode 节点号，通过该 inode 节点的磁盘地址表把分散存放的文件物理块连接成文件的逻辑结构。</li></ul>\r\n<h3><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"_288\"></a>什么是硬链接和软链接？</h3>\r\n<p>1）硬链接</p>\r\n<p>由于 Linux 下的文件是通过索引节点(inode)来识别文件，硬链接可以认为是一个指针，指向文件索引节点的指针，系统并不为它重新分配 inode 。每添加一个一个硬链接，文件的链接数就加 1 。</p>\r\n<ul><li>不足：1）不可以在不同文件系统的文件间建立链接；2）只有超级用户才可以为目录创建硬链接。</li></ul>\r\n<p>2）软链接</p>\r\n<p>软链接克服了硬链接的不足，没有任何文件系统的限制，任何用户可以创建指向目录的符号链接。因而现在更为广泛使用，它具有更大的灵活性，甚至可以跨越不同机器、不同网络对文件进行链接。</p>\r\n<ul><li>不足：因为链接文件包含有原文件的路径信息，所以当原文件从一个目录下移到其他目录中，再访问链接文件，系统就找不到了，而硬链接就没有这个缺陷，你想怎么移就怎么移；还有它要系统分配额外的空间用于建立新的索引节点和保存原文件的路径。</li></ul>\r\n<p><strong>实际场景下，基本是使用软链接</strong>。总结区别如下：</p>\r\n<ul><li>硬链接不可以跨分区，软件链可以跨分区。</li><li>硬链接指向一个 inode 节点，而软链接则是创建一个新的 inode 节点。</li><li>删除硬链接文件，不会删除原文件，删除软链接文件，会把原文件删除。</li></ul>\r\n<h3><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"RAID__310\"></a>RAID 是什么?</h3>\r\n<blockquote>\r\n<p>RAID 全称为独立磁盘冗余阵列(Redundant Array of Independent Disks)，基本思想就是把多个相对便宜的硬盘组合起来，成为一个硬盘阵列组，使性能达到甚至超过一个价格昂贵、 容量巨大的硬盘。RAID 通常被用在服务器电脑上，使用完全相同的硬盘组成一个逻辑扇区，因此操作系统只会把它当做一个硬盘。</p>\r\n<p>RAID 分为不同的等级，各个不同的等级均在数据可靠性及读写性能上做了不同的权衡。在实际应用中，可以依据自己的实际需求选择不同的 RAID 方案。</p>\r\n</blockquote>\r\n<p>当然，因为很多公司都使用云服务，大家很难接触到 RAID 这个概念，更多的可能是普通云盘、SSD 云盘酱紫的概念。</p>\r\n<h2><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"_320\"></a>安全</h2>\r\n<h3><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"_Linux__322\"></a>一台 Linux 系统初始化环境后需要做一些什么安全工作？</h3>\r\n<ul><li> <p>1、添加普通用户登陆，禁止 root 用户登陆，更改 SSH 端口号。</p>\r\n<blockquote>\r\n<p>修改 SSH 端口不一定绝对哈。当然，如果要暴露在外网，建议改下。l</p>\r\n</blockquote> </li><li> <p>2、服务器使用密钥登陆，禁止密码登陆。</p> </li><li> <p>3、开启防火墙，关闭 SElinux ，根据业务需求设置相应的防火墙规则。</p> </li><li> <p>4、装 fail2ban 这种防止 SSH 暴力破击的软件。</p> </li><li> <p>5、设置只允许公司办公网出口 IP 能登陆服务器(看公司实际需要)</p>\r\n<blockquote>\r\n<p>也可以安装 VPN 等软件，只允许连接 VPN 到服务器上。</p>\r\n</blockquote> </li><li> <p>6、修改历史命令记录的条数为 10 条。</p> </li><li> <p>7、只允许有需要的服务器可以访问外网，其它全部禁止。</p> </li><li> <p>8、做好软件层面的防护。</p>\r\n<ul><li>8.1 设置 nginx_waf 模块防止 SQL 注入。</li><li>8.2 把 Web 服务使用 www 用户启动，更改网站目录的所有者和所属组为 www 。</li></ul> </li></ul>\r\n<h3><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"_CC__DDOS__349\"></a>什么叫 CC 攻击？什么叫 DDOS 攻击？</h3>\r\n<ul><li> <p>CC 攻击，主要是用来攻击页面的，模拟多个用户不停的对你的页面进行访问，从而使你的系统资源消耗殆尽。</p> </li><li> <p>DDOS 攻击，中文名叫分布式拒绝服务攻击，指借助服务器技术将多个计算机联合起来作为攻击平台，来对一个或多个目标发动 DDOS 攻击。</p>\r\n<blockquote>\r\n<p>攻击，即是通过大量合法的请求占用大量网络资源，以达到瘫痪网络的目的。</p>\r\n</blockquote> </li></ul>\r\n<p><strong>怎么预防 CC 攻击和 DDOS 攻击？</strong></p>\r\n<p>防 CC、DDOS 攻击，这些只能是用硬件防火墙做流量清洗，将攻击流量引入黑洞。</p>\r\n<blockquote>\r\n<p>流量清洗这一块，主要是买 ISP 服务商的防攻击的服务就可以，机房一般有空余流量，我们一般是买服务，毕竟攻击不会是持续长时间。</p>\r\n</blockquote>\r\n<h3><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"_366\"></a>什么是网站数据库注入？</h3>\r\n<ul><li>由于程序员的水平及经验参差不齐，大部分程序员在编写代码的时候，没有对用户输入数据的合法性进行判断。</li><li>应用程序存在安全隐患。用户可以提交一段数据库查询代码，根据程序返回的结果，获得某些他想得知的数据，这就是所谓的 SQL 注入。</li><li>SQL注入，是从正常的 WWW 端口访问，而且表面看起来跟一般的 Web 页面访问没什么区别，如果管理员没查看日志的习惯，可能被入侵很长时间都不会发觉。</li></ul>\r\n<p><strong>如何过滤与预防？</strong></p>\r\n<p>数据库网页端注入这种，可以考虑使用 nginx_waf 做过滤与预防。</p>\r\n<h2><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"Shell_378\"></a>Shell</h2>\r\n<blockquote>\r\n<p>本小节为选读。我也不太会写 Shell 脚本，都是写的时候，在网络上拼拼凑凑。。。</p>\r\n</blockquote>\r\n<h3><a name=\"t32\"></a><a name=\"t32\"></a><a id=\"Shell__382\"></a>Shell 脚本是什么？</h3>\r\n<p>一个 Shell 脚本是一个文本文件，包含一个或多个命令。作为系统管理员，我们经常需要使用多个命令来完成一项任务，我们可以添加这些所有命令在一个文本文件(Shell 脚本)来完成这些日常工作任务。</p>\r\n<p><strong>什么是默认登录 Shell ？</strong></p>\r\n<p>在 Linux 操作系统，<code>\"/bin/bash\"</code> 是默认登录 Shell，是在创建用户时分配的。</p>\r\n<p>使用 chsh 命令可以改变默认的 Shell 。示例如下所示：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">## chsh &lt;用户名&gt; -s &lt;新shell&gt;</span>\r\n<span class=\"token comment\">## chsh ThinkWon -s /bin/sh</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<p><strong>在 Shell 脚本中，如何写入注释？</strong></p>\r\n<p>注释可以用来描述一个脚本可以做什么和它是如何工作的。每一行注释以 <code>#</code> 开头。例子如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token shebang important\">#!/bin/bash</span>\r\n<span class=\"token comment\">## This is a command</span>\r\n<span class=\"token keyword\">echo</span> “I am logged <span class=\"token keyword\">in</span> as <span class=\"token variable\">$USER</span>”\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<h3><a name=\"t33\"></a><a name=\"t33\"></a><a id=\"_409\"></a>语法级</h3>\r\n<h4><a id=\"_Shell__411\"></a>可以在 Shell 脚本中使用哪些类型的变量？</h4>\r\n<p>在 Shell 脚本，我们可以使用两种类型的变量：</p>\r\n<ul><li> <p>系统定义变量</p>\r\n<blockquote>\r\n<p>系统变量是由系统系统自己创建的。这些变量通常由大写字母组成，可以通过 <code>set</code> 命令查看。</p>\r\n</blockquote> </li><li> <p>用户定义变量</p>\r\n<blockquote>\r\n<p>用户变量由系统用户来生成和定义，变量的值可以通过命令 <code>\"echo $&lt;变量名&gt;\"</code> 查看。</p>\r\n</blockquote> </li></ul>\r\n<p><strong>Shell脚本中 $? 标记的用途是什么？</strong></p>\r\n<p>在写一个 Shell 脚本时，如果你想要检查前一命令是否执行成功，在 <code>if</code> 条件中使用 <code>$?</code> 可以来检查前一命令的结束状态。</p>\r\n<ul><li> <p>如果结束状态是 0 ，说明前一个命令执行成功。例如：</p> <pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">root@localhost:~<span class=\"token comment\">## ls /usr/bin/shar</span>\r\n/usr/bin/shar\r\nroot@localhost:~<span class=\"token comment\">## echo $?</span>\r\n0\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre> </li><li> <p>如果结束状态不是0，说明命令执行失败。例如：</p> <pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">root@localhost:~<span class=\"token comment\">## ls /usr/bin/share</span>\r\nls: cannot access /usr/bin/share: No such <span class=\"token function\">file</span> or directory\r\nroot@localhost:~<span class=\"token comment\">## echo $?</span>\r\n2\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre> </li></ul>\r\n<p><strong>Bourne Shell(bash) 中有哪些特殊的变量？</strong></p>\r\n<p>下面的表列出了 Bourne Shell 为命令行设置的特殊变量。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">内建变量    解释\r\n<span class=\"token variable\">$0</span>    命令行中的脚本名字\r\n<span class=\"token variable\">$1</span>    第一个命令行参数\r\n<span class=\"token variable\">$2</span>    第二个命令行参数\r\n…<span class=\"token punctuation\">..</span>    …….\r\n<span class=\"token variable\">$9</span>    第九个命令行参数\r\n$<span class=\"token comment\">##    命令行参数的数量</span>\r\n<span class=\"token variable\">$*</span>    所有命令行参数，以空格隔开\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<p><strong>如何取消变量或取消变量赋值？</strong></p>\r\n<p><code>unset</code> 命令用于取消变量或取消变量赋值。语法如下所示：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">## unset &lt;变量名&gt;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h4><a id=\"Shell__if__470\"></a>Shell 脚本中 <code>if</code> 语法如何嵌套?</h4>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> 条件 <span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">then</span>\r\n命令1\r\n命令2\r\n…<span class=\"token punctuation\">..</span>\r\n<span class=\"token keyword\">else</span>\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> 条件 <span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">then</span>\r\n命令1\r\n命令2\r\n….\r\n<span class=\"token keyword\">else</span>\r\n命令1\r\n命令2\r\n…<span class=\"token punctuation\">..</span>\r\n<span class=\"token keyword\">fi</span>\r\n<span class=\"token keyword\">fi</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li></ul></pre>\r\n<p><strong>在 Shell 脚本中如何比较两个数字？</strong></p>\r\n<p>在 <code>if-then</code> 中使用测试命令（ <code>-gt</code> 等）来比较两个数字。例如：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token shebang important\">#!/bin/bash</span>\r\nx<span class=\"token operator\">=</span>10\r\ny<span class=\"token operator\">=</span>20\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$x</span> -gt <span class=\"token variable\">$y</span> <span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">then</span>\r\n<span class=\"token keyword\">echo</span> “x is greater than y”\r\n<span class=\"token keyword\">else</span>\r\n<span class=\"token keyword\">echo</span> “y is greater than x”\r\n<span class=\"token keyword\">fi</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n<h4><a id=\"Shell__case__510\"></a>Shell 脚本中 <code>case</code> 语句的语法?</h4>\r\n<p>基础语法如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">case</span> 变量 <span class=\"token keyword\">in</span>\r\n值1<span class=\"token punctuation\">)</span>\r\n命令1\r\n命令2\r\n…<span class=\"token punctuation\">..</span>\r\n最后命令\r\n<span class=\"token operator\">!</span><span class=\"token operator\">!</span>\r\n值2<span class=\"token punctuation\">)</span>\r\n命令1\r\n命令2\r\n……\r\n最后命令\r\n<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\r\nesac\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li></ul></pre>\r\n<h4><a id=\"Shell__for__533\"></a>Shell 脚本中 <code>for</code> 循环语法？</h4>\r\n<p>基础语法如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">for</span> 变量 <span class=\"token keyword\">in</span> 循环列表\r\n<span class=\"token keyword\">do</span>\r\n命令1\r\n命令2\r\n….\r\n最后命令\r\n<span class=\"token keyword\">done</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h4><a id=\"Shell__while__549\"></a>Shell 脚本中 <code>while</code> 循环语法？</h4>\r\n<p>如同 <code>for</code> 循环，<code>while</code> 循环只要条件成立就重复它的命令块。<br> 不同于 <code>for</code>循环，<code>while</code> 循环会不断迭代，直到它的条件不为真。</p>\r\n<p>基础语法：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> 条件 <span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">do</span>\r\n命令…\r\n<span class=\"token keyword\">done</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p><strong>do-while 语句的基本格式？</strong></p>\r\n<p><code>do-while</code> 语句类似于 <code>while</code> 语句，但检查条件语句之前先执行命令（LCTT 译注：意即至少执行一次。）。下面是用 <code>do-while</code> 语句的语法：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">do</span>\r\n<span class=\"token punctuation\">{<!-- --></span>\r\n命令\r\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>条件<span class=\"token punctuation\">)</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p><strong>Shell 脚本中 break 命令的作用？</strong></p>\r\n<p><code>break</code> 命令一个简单的用途是退出执行中的循环。我们可以在 <code>while</code> 和 <code>until</code> 循环中使用 <code>break</code> 命令跳出循环。</p>\r\n<p><strong>Shell 脚本中 continue 命令的作用？</strong></p>\r\n<p><code>continue</code> 命令不同于 <code>break</code> 命令，它只跳出当前循环的迭代，而不是整个循环。<code>continue</code> 命令很多时候是很有用的，例如错误发生，但我们依然希望继续执行大循环的时候。</p>\r\n<h4><a id=\"_584\"></a>如何使脚本可执行?</h4>\r\n<p>使用 chmod 命令来使脚本可执行。例子如下：<code>chmod a+x myscript.sh</code> 。</p>\r\n<p><strong>#!/bin/bash 的作用？</strong></p>\r\n<p><code>#!/bin/bash</code> 是 Shell 脚本的第一行，称为释伴（shebang）行。</p>\r\n<ul><li>这里 <code>#</code> 符号叫做 hash ，而 <code>!</code> 叫做 bang。</li><li>它的意思是命令通过 <code>/bin/bash</code> 来执行。</li></ul>\r\n<p><strong>如何调试 Shell脚本？</strong></p>\r\n<ul><li>使用 <code>-x'</code> 数（<code>sh -x myscript.sh</code>）可以调试 Shell脚本。</li><li>另一个种方法是使用 <code>-nv</code> 参数(<code>sh -nv myscript.sh</code>)。</li></ul>\r\n<p><strong>如何将标准输出和错误输出同时重定向到同一位置?</strong></p>\r\n<ul><li>方法一：<code>2&gt;&amp;1 (如## ls /usr/share/doc &gt; out.txt 2&gt;&amp;1 )</code> 。</li><li>方法二：<code>&amp;&gt; (如## ls /usr/share/doc &amp;&gt; out.txt )</code> 。</li></ul>\r\n<p><strong>在 Shell 脚本中，如何测试文件？</strong></p>\r\n<p>test 命令可以用来测试文件。基础用法如下表格：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Test         用法\r\n-d 文件名    如果文件存在并且是目录，返回true\r\n-e 文件名    如果文件存在，返回true\r\n-f 文件名    如果文件存在并且是普通文件，返回true\r\n-r 文件名    如果文件存在并可读，返回true\r\n-s 文件名    如果文件存在并且不为空，返回true\r\n-w 文件名    如果文件存在并可写，返回true\r\n-x 文件名    如果文件存在并可执行，返回true\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<h4><a id=\"_Shell__622\"></a>在 Shell 脚本如何定义函数呢？</h4>\r\n<p>函数是拥有名字的代码块。当我们定义代码块，我们就可以在我们的脚本调用函数名字，该块就会被执行。示例如下所示：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">$ diskusage <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token function\">df</span> -h <span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\r\n译注：下面是我给的shell函数语法，原文没有\r\n<span class=\"token punctuation\">[</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">]</span> 函数名 <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">{<!-- --></span>\r\n命令<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">[</span>return int<span class=\"token punctuation\">;</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<p><strong>如何让 Shell 就脚本得到来自终端的输入?</strong></p>\r\n<p>read 命令可以读取来自终端（使用键盘）的数据。read 命令得到用户的输入并置于你给出的变量中。例子如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">## vi /tmp/test.sh</span>\r\n<span class=\"token comment\">#!/bin/bash</span>\r\n<span class=\"token keyword\">echo</span> ‘Please enter your name’\r\n<span class=\"token function\">read</span> name\r\n<span class=\"token keyword\">echo</span> “My Name is <span class=\"token variable\">$name</span>”\r\n<span class=\"token comment\">## ./test.sh</span>\r\nPlease enter your name\r\nThinkWon\r\nMy Name is ThinkWon\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n<p><strong>如何执行算术运算？</strong></p>\r\n<p>有两种方法来执行算术运算：</p>\r\n<ul><li>1、使用 expr 命令：<code>## expr 5 + 2</code> 。</li><li>2、用一个美元符号和方括号（<code>$[ 表达式 ]</code>）：<code>test=$[16 + 4] ; test=$[16 + 4]</code> 。</li></ul>\r\n<h3><a name=\"t34\"></a><a name=\"t34\"></a><a id=\"_661\"></a>编程题</h3>\r\n<h4><a id=\"_dev__663\"></a>判断一文件是不是字符设备文件，如果是将其拷贝到 <code>/dev</code> 目录下？</h4>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token shebang important\">#!/bin/bash</span>\r\n<span class=\"token function\">read</span> -p <span class=\"token string\">\"Input file name: \"</span> FILENAME\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -c <span class=\"token string\">\"<span class=\"token variable\">$FILENAME</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span>\r\n　　<span class=\"token function\">cp</span> <span class=\"token variable\">$FILENAME</span> /dev\r\n<span class=\"token keyword\">fi</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<h4><a id=\"_class1__30__stdxx__xx__01__30__675\"></a>添加一个新组为 class1 ，然后添加属于这个组的 30 个用户，用户名的形式为 stdxx ，其中 xx 从 01 到 30 ？</h4>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token shebang important\">#!/bin/bash</span>\r\n<span class=\"token function\">groupadd</span> class1\r\n<span class=\"token keyword\">for</span><span class=\"token variable\"><span class=\"token punctuation\">((</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">31</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">))</span></span>\r\n<span class=\"token keyword\">do</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$i</span> -le 10 <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span>\r\n                <span class=\"token function\">useradd</span> -g class1 std0<span class=\"token variable\">$i</span>\r\n        <span class=\"token keyword\">else</span>\r\n                <span class=\"token function\">useradd</span> -g class1 std<span class=\"token variable\">$i</span>\r\n        <span class=\"token keyword\">fi</span>\r\n<span class=\"token keyword\">done</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<p><strong>编写 Shell 程序，实现自动删除 50 个账号的功能，账号名为stud1 至 stud50 ？</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token shebang important\">#!/bin/bash</span>\r\n<span class=\"token keyword\">for</span><span class=\"token variable\"><span class=\"token punctuation\">((</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">51</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">))</span></span>\r\n<span class=\"token keyword\">do</span>\r\n                <span class=\"token function\">userdel</span> -r stud<span class=\"token variable\">$i</span>\r\n<span class=\"token keyword\">done</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<h4><a id=\"_sed__tmpinputtxt__702\"></a>写一个 sed 命令，修改 <code>/tmp/input.txt</code> 文件的内容？</h4>\r\n<p>要求：</p>\r\n<ul><li>删除所有空行。</li><li>一行中，如果包含 “11111”，则在 “11111” 前面插入 “AAA”，在 “11111” 后面插入 “BBB” 。比如：将内容为 0000111112222 的一行改为 0000AAA11111BBB2222 。</li></ul>\r\n<pre class=\"prettyprint\"><code class=\"prism language-bash has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token punctuation\">[</span>root@~<span class=\"token punctuation\">]</span><span class=\"token comment\">## cat -n /tmp/input.txt</span>\r\n     1  000011111222\r\n     2\r\n     3  000011111222222\r\n     4  11111000000222\r\n     5\r\n     6\r\n     7  111111111111122222222222\r\n     8  2211111111\r\n     9  112222222\r\n    10  1122\r\n    11\r\n\r\n<span class=\"token comment\">## 删除所有空行命令</span>\r\n<span class=\"token punctuation\">[</span>root@~<span class=\"token punctuation\">]</span><span class=\"token comment\">## sed '/^$/d' /tmp/input.txt</span>\r\n000011111222\r\n000011111222222\r\n11111000000222\r\n111111111111122222222222\r\n2211111111\r\n112222222\r\n1122\r\n\r\n<span class=\"token comment\">## 插入指定的字符</span>\r\n<span class=\"token punctuation\">[</span>root@~<span class=\"token punctuation\">]</span><span class=\"token comment\">## sed 's#\\(11111\\)#AAA\\1BBB#g' /tmp/input.txt</span>\r\n0000AAA11111BBB222\r\n0000AAA11111BBB222222\r\nAAA11111BBB000000222\r\nAAA11111BBBAAA11111BBB11122222222222\r\n22AAA11111BBB111\r\n112222222\r\n1122\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li></ul></pre>\r\n<h2><a name=\"t35\"></a><a name=\"t35\"></a><a id=\"_746\"></a>实战</h2>\r\n<h3><a name=\"t36\"></a><a name=\"t36\"></a><a id=\"_Linux__748\"></a>如何选择 Linux 操作系统版本?</h3>\r\n<p>一般来讲，桌面用户首选 Ubuntu ；服务器首选 RHEL 或 CentOS ，两者中首选 CentOS 。</p>\r\n<p>根据具体要求：</p>\r\n<ul><li> <p>安全性要求较高，则选择 Debian 或者 FreeBSD 。</p> </li><li> <p>需要使用数据库高级服务和电子邮件网络应用的用户可以选择 SUSE 。</p> </li><li> <p>想要新技术新功能可以选择 Feddora ，Feddora 是 RHEL 和 CentOS 的一个测试版和预发布版本。</p> </li><li> <p>【重点】<strong>根据现有状况，绝大多数互联网公司选择 CentOS 。现在比较常用的是 6 系列，现在市场占有大概一半左右。另外的原因是 CentOS 更侧重服务器领域，并且无版权约束</strong>。</p>\r\n<blockquote>\r\n<p>CentOS 7 系列，也慢慢使用的会比较多了。</p>\r\n</blockquote> </li></ul>\r\n<h3><a name=\"t37\"></a><a name=\"t37\"></a><a id=\"_Linux__766\"></a>如何规划一台 Linux 主机，步骤是怎样？</h3>\r\n<ul><li> <p>1、确定机器是做什么用的，比如是做 WEB 、DB、还是游戏服务器。</p>\r\n<blockquote>\r\n<p>不同的用途，机器的配置会有所不同。</p>\r\n</blockquote> </li><li> <p>2、确定好之后，就要定系统需要怎么安装，默认安装哪些系统、分区怎么做。</p> </li><li> <p>3、需要优化系统的哪些参数，需要创建哪些用户等等的。</p> </li></ul>\r\n<h3><a name=\"t38\"></a><a name=\"t38\"></a><a id=\"_778\"></a>请问当用户反馈网站访问慢，你会如何处理？</h3>\r\n<p><strong>有哪些方面的因素会导致网站网站访问慢？</strong></p>\r\n<ul><li> <p>1、服务器出口带宽不够用</p>\r\n<blockquote>\r\n<ul><li>本身服务器购买的出口带宽比较小。一旦并发量大的话，就会造成分给每个用户的出口带宽就小，访问速度自然就会慢。</li><li>跨运营商网络导致带宽缩减。例如，公司网站放在电信的网络上，那么客户这边对接是长城宽带或联通，这也可能导致带宽的缩减。</li></ul>\r\n</blockquote> </li><li> <p>2、服务器负载过大，导致响应不过来</p>\r\n<blockquote>\r\n<p>可以从两个方面入手分析：</p>\r\n<ul><li>分析系统负载，使用 w 命令或者 uptime 命令查看系统负载。如果负载很高，则使用 top 命令查看 CPU ，MEM 等占用情况，要么是 CPU 繁忙，要么是内存不够。</li><li>如果这二者都正常，再去使用 sar 命令分析网卡流量，分析是不是遭到了攻击。一旦分析出问题的原因，采取对应的措施解决，如决定要不要杀死一些进程，或者禁止一些访问等。</li></ul>\r\n</blockquote> </li><li> <p>3、数据库瓶颈</p>\r\n<blockquote>\r\n<ul><li>如果慢查询比较多。那么就要开发人员或 DBA 协助进行 SQL 语句的优化。</li><li>如果数据库响应慢，考虑可以加一个数据库缓存，如 Redis 等。然后，也可以搭建 MySQL 主从，一台 MySQL 服务器负责写，其他几台从数据库负责读。</li></ul>\r\n</blockquote> </li><li> <p>4、网站开发代码没有优化好</p>\r\n<blockquote>\r\n<ul><li>例如 SQL 语句没有优化，导致数据库读写相当耗时。</li></ul>\r\n</blockquote> </li></ul>\r\n<p><strong>针对网站访问慢，怎么去排查？</strong></p>\r\n<ul><li> <p>1、首先要确定是用户端还是服务端的问题。当接到用户反馈访问慢，那边自己立即访问网站看看，如果自己这边访问快，基本断定是用户端问题，就需要耐心跟客户解释，协助客户解决问题。</p>\r\n<blockquote>\r\n<p>不要上来就看服务端的问题。一定要从源头开始，逐步逐步往下。</p>\r\n</blockquote> </li><li> <p>2、如果访问也慢，那么可以利用浏览器的调试功能，看看加载那一项数据消耗时间过多，是图片加载慢，还是某些数据加载慢。</p> </li><li> <p>3、针对服务器负载情况。查看服务器硬件(网络、CPU、内存)的消耗情况。如果是购买的云主机，比如阿里云，可以登录阿里云平台提供各方面的监控，比如 CPU、内存、带宽的使用情况。</p> </li><li> <p>4、如果发现硬件资源消耗都不高，那么就需要通过查日志，比如看看 MySQL慢查询的日志，看看是不是某条 SQL 语句查询慢，导致网站访问慢。</p> </li></ul>\r\n<p><strong>怎么去解决？</strong></p>\r\n<ul><li>1、如果是出口带宽问题，那么久申请加大出口带宽。</li><li>2、如果慢查询比较多，那么就要开发人员或 DBA 协助进行 SQL 语句的优化。</li><li>3、如果数据库响应慢，考虑可以加一个数据库缓存，如 Redis 等等。然后也可以搭建MySQL 主从，一台 MySQL 服务器负责写，其他几台从数据库负责读。</li><li>4、申请购买 CDN 服务，加载用户的访问。</li><li>5、如果访问还比较慢，那就需要从整体架构上进行优化咯。做到专角色专用，多台服务器提供同一个服务。</li></ul>\r\n<h3><a name=\"t39\"></a><a name=\"t39\"></a><a id=\"Linux__825\"></a>Linux 性能调优都有哪几种方法？</h3>\r\n<ul><li>1、Disabling daemons (关闭 daemons)。</li><li>2、Shutting down the GUI (关闭 GUI)。</li><li>3、Changing kernel parameters (改变内核参数)。</li><li>4、Kernel parameters (内核参数)。</li><li>5、Tuning the processor subsystem (处理器子系统调优)。</li><li>6、Tuning the memory subsystem (内存子系统调优)。</li><li>7、Tuning the file system (文件系统子系统调优)。</li><li>8、Tuning the network subsystem（网络子系统调优)。</li></ul>\r\n<h2><a name=\"t40\"></a><a name=\"t40\"></a><a id=\"_838\"></a>文件管理命令</h2>\r\n<h3><a name=\"t41\"></a><a name=\"t41\"></a><a id=\"cat__840\"></a>cat 命令</h3>\r\n<p>cat 命令用于连接文件并打印到标准输出设备上。</p>\r\n<p>cat 主要有三大功能：</p>\r\n<p>1.一次显示整个文件:</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-sh has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">cat filename\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>2.从键盘创建一个文件:</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">cat</span> <span class=\"token operator\">&gt;</span> filename\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>只能创建新文件，不能编辑已有文件。</p>\r\n<p>3.将几个文件合并为一个文件:</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">cat</span> file1 file2 <span class=\"token operator\">&gt;</span> <span class=\"token function\">file</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<ul><li>-b 对非空输出行号</li><li>-n 输出所有行号</li></ul>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）把 log2012.log 的文件内容加上行号后输入 log2013.log 这个文件里</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">cat</span> -n log2012.log log2013.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）把 log2012.log 和 log2013.log 的文件内容加上行号（空白行不加）之后将内容附加到 log.log 里</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">cat</span> -b log2012.log log2013.log log.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）使用 here doc 生成新文件</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">cat</span> <span class=\"token operator\">&gt;</span>log.txt <span class=\"token operator\">&lt;&lt;</span>EOF\r\n<span class=\"token operator\">&gt;</span>Hello\r\n<span class=\"token operator\">&gt;</span>World\r\n<span class=\"token operator\">&gt;</span>PWD<span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">pwd</span><span class=\"token variable\">)</span></span>\r\n<span class=\"token operator\">&gt;</span>EOF\r\n<span class=\"token function\">ls</span> -l log.txt\r\n<span class=\"token function\">cat</span> log.txt\r\nHello\r\nWorld\r\nPWD<span class=\"token operator\">=</span>/opt/soft/test\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<p>（4）反向列示</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">tac log.txt\r\nPWD<span class=\"token operator\">=</span>/opt/soft/test\r\nWorld\r\nHello\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<h3><a name=\"t42\"></a><a name=\"t42\"></a><a id=\"chmod__909\"></a>chmod 命令</h3>\r\n<p>Linux/Unix 的文件调用权限分为三级 : 文件拥有者、群组、其他。利用 chmod 可以控制文件如何被他人所调用。</p>\r\n<p>用于改变 linux 系统文件或目录的访问权限。用它控制文件或目录的访问权限。该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。</p>\r\n<p>每一文件或目录的访问权限都有三组，每组用三位表示，分别为文件属主的读、写和执行权限；与属主同组的用户的读、写和执行权限；系统中其他用户的读、写和执行权限。可使用 ls -l test.txt 查找。</p>\r\n<p>以文件 log2012.log 为例：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-rw-r--r-- 1 root root 296K 11-13 06:03 log2012.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>第一列共有 10 个位置，第一个字符指定了文件类型。在通常意义上，一个目录也是一个文件。如果第一个字符是横线，表示是一个非目录的文件。如果是 d，表示是一个目录。从第二个字符开始到第十个 9 个字符，3 个字符一组，分别表示了 3 组用户对文件或者目录的权限。权限字符用横线代表空许可，r 代表只读，w 代表写，x 代表可执行。</p>\r\n<p><strong>常用参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-c 当发生改变时，报告处理信息\r\n-R 处理指定目录以及其子目录下所有文件\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<p>权限范围：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">u ：目录或者文件的当前的用户\r\ng ：目录或者文件的当前的群组\r\no ：除了目录或者文件的当前用户或群组之外的用户或者群组\r\na ：所有的用户及群组\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>权限代号：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">r ：读权限，用数字4表示\r\nw ：写权限，用数字2表示\r\nx ：执行权限，用数字1表示\r\n- ：删除权限，用数字0表示\r\ns ：特殊权限\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）增加文件 t.log 所有用户可执行权限</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">chmod</span> a+x t.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）撤销原来所有的权限，然后使拥有者具有可读权限,并输出处理信息</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">chmod</span> u<span class=\"token operator\">=</span>r t.log -c\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）给 file 的属主分配读、写、执行(7)的权限，给file的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">chmod</span> 751 t.log -c（或者：chmod u<span class=\"token operator\">=</span>rwx,g<span class=\"token operator\">=</span>rx,o<span class=\"token operator\">=</span>x t.log -c<span class=\"token punctuation\">)</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（4）将 test 目录及其子目录所有文件添加可读权限</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">chmod</span> u+r,g+r,o+r -R text/ -c\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t43\"></a><a name=\"t43\"></a><a id=\"chown__979\"></a>chown 命令</h3>\r\n<p>chown 将指定文件的拥有者改为指定的用户或组，用户可以是用户名或者用户 ID；组可以是组名或者组 ID；文件是以空格分开的要改变权限的文件列表，支持通配符。</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-c 显示更改的部分的信息\r\n-R 处理指定目录及子目录\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）改变拥有者和群组 并显示改变信息</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">chown</span> -c mail:mail log2012.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）改变文件群组</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">chown</span> -c :mail t.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）改变文件夹及子文件目录属主及属组为 mail</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">chown</span> -cR mail: test/\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t44\"></a><a name=\"t44\"></a><a id=\"cp__1010\"></a>cp 命令</h3>\r\n<p>将源文件复制至目标文件，或将多个源文件复制至目标目录。</p>\r\n<p>注意：命令行复制，如果目标文件已经存在会提示是否覆盖，而在 shell 脚本中，如果不加 -i 参数，则不会提示，而是直接覆盖！</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-i 提示\r\n-r 复制目录及目录内所有项目\r\n-a 复制的文件与原文件时间一样\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）复制 a.txt 到 test 目录下，保持原文件时间，如果原文件存在提示是否覆盖。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">cp</span> -ai a.txt <span class=\"token function\">test</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）为 a.txt 建议一个链接（快捷方式）</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">cp</span> -s a.txt link_a.txt\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t45\"></a><a name=\"t45\"></a><a id=\"find__1038\"></a>find 命令</h3>\r\n<p>用于在文件树中查找文件，并作出相应的处理。</p>\r\n<p>命令格式：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">find</span> pathname -options <span class=\"token punctuation\">[</span>-print -exec -ok <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>命令参数：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">pathname: find命令所查找的目录路径。例如用.来表示当前目录，用/来表示系统根目录。\r\n-print： find命令将匹配的文件输出到标准输出。\r\n-exec： find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为'command' {  } \\;，注意{   }和\\；之间的空格。\r\n-ok： 和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行。\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p><strong>命令选项</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-name 按照文件名查找文件\r\n-perm 按文件权限查找文件\r\n-user 按文件属主查找文件\r\n-group  按照文件所属的组来查找文件。\r\n-type  查找某一类型的文件，诸如：\r\n   b - 块设备文件\r\n   d - 目录\r\n   c - 字符设备文件\r\n   l - 符号链接文件\r\n   p - 管道文件\r\n   f - 普通文件\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）查找 48 小时内修改过的文件</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">find</span> -atime -2\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）在当前目录查找 以 .log 结尾的文件。 <strong>.</strong> 代表当前目录</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">find</span> ./ -name <span class=\"token string\">'*.log'</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）查找 /opt 目录下 权限为 777 的文件</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">find</span> /opt -perm 777\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（4）查找大于 1K 的文件</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">find</span> -size +1000c\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>查找等于 1000 字符的文件</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">find</span> -size 1000c\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>-exec 参数后面跟的是 command 命令，它的终止是以 ; 为结束标志的，所以这句命令后面的分号是不可缺少的，考虑到各个系统中分号会有不同的意义，所以前面加反斜杠。{} 花括号代表前面find查找出来的文件名。</p>\r\n<h3><a name=\"t46\"></a><a name=\"t46\"></a><a id=\"head__1109\"></a>head 命令</h3>\r\n<p>head 用来显示档案的开头至标准输出中，默认 head 命令打印其相应文件的开头 10 行。</p>\r\n<p><strong>常用参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-n&lt;行数&gt; 显示的行数（行数为复数表示从最后向前数）\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）显示 1.log 文件中前 20 行</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">head</span> 1.log -n 20\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）显示 1.log 文件前 20 字节</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">head</span> -c 20 log2014.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）显示 t.log最后 10 行</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">head</span> -n -10 t.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t47\"></a><a name=\"t47\"></a><a id=\"less__1141\"></a>less 命令</h3>\r\n<p>less 与 more 类似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动，而且 less 在查看之前不会加载整个文件。</p>\r\n<p><strong>常用命令参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-i  忽略搜索时的大小写\r\n-N  显示每行的行号\r\n-o  &lt;文件名&gt; 将less 输出的内容在指定文件中保存起来\r\n-s  显示连续空行为一行\r\n/字符串：向下搜索“字符串”的功能\r\n?字符串：向上搜索“字符串”的功能\r\nn：重复前一个搜索（与 / 或 ? 有关）\r\nN：反向重复前一个搜索（与 / 或 ? 有关）\r\n-x &lt;数字&gt; 将“tab”键显示为规定的数字空格\r\nb  向后翻一页\r\nd  向后翻半页\r\nh  显示帮助界面\r\nQ  退出less 命令\r\nu  向前滚动半页\r\ny  向前滚动一行\r\n空格键 滚动一行\r\n回车键 滚动一页\r\n[pagedown]： 向下翻动一页\r\n[pageup]：   向上翻动一页\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）ps 查看进程信息并通过 less 分页显示</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ps</span> -aux <span class=\"token operator\">|</span> <span class=\"token function\">less</span> -N\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）查看多个文件</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">less</span> 1.log 2.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>可以使用 n 查看下一个，使用 p 查看前一个。</p>\r\n<h3><a name=\"t48\"></a><a name=\"t48\"></a><a id=\"ln__1187\"></a>ln 命令</h3>\r\n<p>功能是为文件在另外一个位置建立一个同步的链接，当在不同目录需要该问题时，就不需要为每一个目录创建同样的文件，通过 ln 创建的链接（link）减少磁盘占用量。</p>\r\n<p>链接分类：软件链接及硬链接</p>\r\n<p>软链接：</p>\r\n<ul><li>1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式</li><li>2.软链接可以 跨文件系统 ，硬链接不可以</li><li>3.软链接可以对一个不存在的文件名进行链接</li><li>4.软链接可以对目录进行链接</li></ul>\r\n<p>硬链接:</p>\r\n<ul><li>1.硬链接，以文件副本的形式存在。但不占用实际空间。</li><li>2.不允许给目录创建硬链接</li><li>3.硬链接只有在同一个文件系统中才能创建</li></ul>\r\n<p><strong>需要注意</strong>：</p>\r\n<ul><li>第一：ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化；</li><li>第二：ln的链接又分软链接和硬链接两种，软链接就是ln –s 源文件 目标文件，它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接 ln 源文件 目标文件，没有参数-s， 它会在你选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。</li><li>第三：ln指令用在链接文件或目录，如同时指定两个以上的文件或目录，且最后的目的地是一个已经存在的目录，则会把前面指定的所有文件或目录复制到该目录中。若同时指定多个文件或目录，且最后的目的地并非是一个已存在的目录，则会出现错误信息。</li></ul>\r\n<p><strong>常用参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-b 删除，覆盖以前建立的链接\r\n-s 软链接（符号链接）\r\n-v 显示详细处理过程\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）给文件创建软链接，并显示操作信息</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ln</span> -sv source.log link.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）给文件创建硬链接，并显示操作信息</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ln</span> -v source.log link1.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）给目录创建软链接</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ln</span> -sv /opt/soft/test/test3 /opt/soft/test/test5\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t49\"></a><a name=\"t49\"></a><a id=\"locate__1242\"></a>locate 命令</h3>\r\n<p>locate 通过搜寻系统内建文档数据库达到快速找到档案，数据库由 updatedb 程序来更新，updatedb 是由 cron daemon 周期性调用的。默认情况下 locate 命令在搜寻数据库时比由整个由硬盘资料来搜寻资料来得快，但较差劲的是 locate 所找到的档案若是最近才建立或 刚更名的，可能会找不到，在内定值中，updatedb 每天会跑一次，可以由修改 crontab 来更新设定值 (etc/crontab)。</p>\r\n<p>locate 与 find 命令相似，可以使用如 *、? 等进行正则匹配查找</p>\r\n<p><strong>常用参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-l num（要显示的行数）\r\n-f   将特定的档案系统排除在外，如将proc排除在外\r\n-r   使用正则运算式做为寻找条件\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）查找和 pwd 相关的所有文件(文件名中包含 pwd）</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">locate</span> <span class=\"token function\">pwd</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）搜索 etc 目录下所有以 sh 开头的文件</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">locate</span> /etc/sh\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）查找 /var 目录下，以 reason 结尾的文件</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">locate</span> -r <span class=\"token string\">'^/var.*reason$'</span>（其中.表示一个字符，*表示任务多个；.*表示任意多个字符）\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t50\"></a><a name=\"t50\"></a><a id=\"more__1278\"></a>more 命令</h3>\r\n<p>功能类似于 cat, more 会以一页一页的显示方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示。</p>\r\n<p><strong>命令参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">+n      从笫 n 行开始显示\r\n-n       定义屏幕大小为n行\r\n+/pattern 在每个档案显示前搜寻该字串（pattern），然后从该字串前两行之后开始显示\r\n-c       从顶部清屏，然后显示\r\n-d       提示“Press space to continue，’q’ to quit（按空格键继续，按q键退出）”，禁用响铃功能\r\n-l        忽略Ctrl+l（换页）字符\r\n-p       通过清除窗口而不是滚屏来对文件进行换页，与-c选项相似\r\n-s       把连续的多个空行显示为一行\r\n-u       把文件内容中的下画线去掉\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n<p><strong>常用操作命令</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">Enter    向下 n 行，需要定义。默认为 1 行\r\nCtrl+F   向下滚动一屏\r\n空格键  向下滚动一屏\r\nCtrl+B  返回上一屏\r\n=       输出当前行的行号\r\n:f     输出文件名和当前行的行号\r\nV      调用vi编辑器\r\n!命令   调用Shell，并执行命令\r\nq       退出more\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）显示文件中从第3行起的内容</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">more</span> +3 text.txt\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）在所列出文件目录详细信息，借助管道使每次显示 5 行</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ls</span> -l <span class=\"token operator\">|</span> <span class=\"token function\">more</span> -5\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>按空格显示下 5 行。</p>\r\n<h3><a name=\"t51\"></a><a name=\"t51\"></a><a id=\"mv__1328\"></a>mv 命令</h3>\r\n<p>移动文件或修改文件名，根据第二参数类型（如目录，则移动文件；如为文件则重命令该文件）。</p>\r\n<p>当第二个参数为目录时，第一个参数可以是多个以空格分隔的文件或目录，然后移动第一个参数指定的多个文件到第二个参数指定的目录中。</p>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）将文件 test.log 重命名为 test1.txt</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">mv</span> test.log test1.txt\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）将文件 log1.txt,log2.txt,log3.txt 移动到根的 test3 目录中</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">mv</span> llog1.txt log2.txt log3.txt /test3\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）将文件 file1 改名为 file2，如果 file2 已经存在，则询问是否覆盖</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">mv</span> -i log1.txt log2.txt\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（4）移动当前文件夹下的所有文件到上一级目录</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">mv</span> * <span class=\"token punctuation\">..</span>/\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t52\"></a><a name=\"t52\"></a><a id=\"rm__1362\"></a>rm 命令</h3>\r\n<p>删除一个目录中的一个或多个文件或目录，如果没有使用 -r 选项，则 rm 不会删除目录。如果使用 rm 来删除文件，通常仍可以将该文件恢复原状。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">rm</span> <span class=\"token punctuation\">[</span>选项<span class=\"token punctuation\">]</span> 文件…\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）删除任何 .log 文件，删除前逐一询问确认：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">rm</span> -i *.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）删除 test 子目录及子目录中所有档案删除，并且不用一一确认：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">rm</span> -rf <span class=\"token function\">test</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）删除以 -f 开头的文件</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">rm</span> -- -f*\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t53\"></a><a name=\"t53\"></a><a id=\"tail__1392\"></a>tail 命令</h3>\r\n<p>用于显示指定文件末尾内容，不指定文件时，作为输入信息进行处理。常用查看日志文件。</p>\r\n<p><strong>常用参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-f 循环读取（常用于查看递增的日志文件）\r\n-n&lt;行数&gt; 显示行数（从后向前）\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<p>（1）循环读取逐渐增加的文件内容</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ping</span> 127.0.0.1 <span class=\"token operator\">&gt;</span> ping.log <span class=\"token operator\">&amp;</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>后台运行：可使用 jobs -l 查看，也可使用 fg 将其移到前台运行。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">tail</span> -f ping.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（查看日志）</p>\r\n<h3><a name=\"t54\"></a><a name=\"t54\"></a><a id=\"touch__1419\"></a>touch 命令</h3>\r\n<p>Linux touch命令用于修改文件或者目录的时间属性，包括存取时间和更改时间。若文件不存在，系统会建立一个新的文件。</p>\r\n<p>ls -l 可以显示档案的时间记录。</p>\r\n<p><strong>语法</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">touch [-acfm][-d&lt;日期时间&gt;][-r&lt;参考文件或目录&gt;] [-t&lt;日期时间&gt;][--help][--version][文件或目录…]\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<ul><li><strong>参数说明</strong>：</li><li>a 改变档案的读取时间记录。</li><li>m 改变档案的修改时间记录。</li><li>c 假如目的档案不存在，不会建立新的档案。与 --no-create 的效果一样。</li><li>f 不使用，是为了与其他 unix 系统的相容性而保留。</li><li>r 使用参考档的时间记录，与 --file 的效果一样。</li><li>d 设定时间与日期，可以使用各种不同的格式。</li><li>t 设定档案的时间记录，格式与 date 指令相同。</li><li>–no-create 不会建立新档案。</li><li>–help 列出指令格式。</li><li>–version 列出版本讯息。</li></ul>\r\n<p><strong>实例</strong></p>\r\n<p>使用指令\"touch\"修改文件\"testfile\"的时间属性为当前系统时间，输入如下命令：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">$ <span class=\"token function\">touch</span> testfile                <span class=\"token comment\">#修改文件的时间属性 </span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>首先，使用ls命令查看testfile文件的属性，如下所示：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">$ <span class=\"token function\">ls</span> -l testfile                <span class=\"token comment\">#查看文件的时间属性  </span>\r\n<span class=\"token comment\">#原来文件的修改时间为16:09  </span>\r\n-rw-r--r-- 1 hdd hdd 55 2011-08-22 16:09 testfile\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<p>执行指令\"touch\"修改文件属性以后，并再次查看该文件的时间属性，如下所示：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">$ <span class=\"token function\">touch</span> testfile                <span class=\"token comment\">#修改文件时间属性为当前系统时间  </span>\r\n$ <span class=\"token function\">ls</span> -l testfile                <span class=\"token comment\">#查看文件的时间属性  </span>\r\n<span class=\"token comment\">#修改后文件的时间属性为当前系统时间  </span>\r\n-rw-r--r-- 1 hdd hdd 55 2011-08-22 19:53 testfile\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>使用指令\"touch\"时，如果指定的文件不存在，则将创建一个新的空白文件。例如，在当前目录下，使用该指令创建一个空白文件\"file\"，输入如下命令：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">$ <span class=\"token function\">touch</span> <span class=\"token function\">file</span>            <span class=\"token comment\">#创建一个名为“file”的新的空白文件 </span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t55\"></a><a name=\"t55\"></a><a id=\"vim__1476\"></a>vim 命令</h3>\r\n<p>Vim是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p>\r\n<ul><li>打开文件并跳到第 10 行：<code>vim +10 filename.txt</code> 。</li><li>打开文件跳到第一个匹配的行：<code>vim +/search-term filename.txt</code> 。</li><li>以只读模式打开文件：<code>vim -R /etc/passwd</code> 。</li></ul>\r\n<p>基本上 vi/vim 共分为三种模式，分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）<strong>和</strong>底线命令模式（Last line mode）</strong>。</p>\r\n<p>简单的说，我们可以将这三个模式想成底下的图标来表示：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cucnVub29iLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNC8wNy92aW0tdmktd29ya21vZGVsLnBuZw?x-oss-process=image/format,png\" alt=\"\"></p>\r\n<h3><a name=\"t56\"></a><a name=\"t56\"></a><a id=\"whereis__1492\"></a>whereis 命令</h3>\r\n<p>whereis 命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。whereis 及 locate 都是基于系统内建的数据库进行搜索，因此效率很高，而find则是遍历硬盘查找文件。</p>\r\n<p><strong>常用参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-b   定位可执行文件。\r\n-m   定位帮助文件。\r\n-s   定位源代码文件。\r\n-u   搜索默认路径下除可执行文件、源代码文件、帮助文件以外的其它文件。\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）查找 locate 程序相关文件</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">whereis</span> <span class=\"token function\">locate</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）查找 locate 的源码文件</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">whereis</span> -s <span class=\"token function\">locate</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）查找 lcoate 的帮助文件</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">whereis</span> -m <span class=\"token function\">locate</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t57\"></a><a name=\"t57\"></a><a id=\"which__1527\"></a>which 命令</h3>\r\n<p>在 linux 要查找某个文件，但不知道放在哪里了，可以使用下面的一些命令来搜索：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">which     查看可执行文件的位置。\r\nwhereis 查看文件的位置。\r\nlocate  配合数据库查看文件位置。\r\nfind        实际搜寻硬盘查询文件名称。\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p>which 是在 PATH 就是指定的路径中，搜索某个系统命令的位置，并返回第一个搜索结果。使用 which 命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p>\r\n<p><strong>常用参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-n 　指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名。\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）查看 ls 命令是否存在，执行哪个</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">which</span> <span class=\"token function\">ls</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）查看 which</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">which</span> <span class=\"token function\">which</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）查看 cd</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">which</span> cd（显示不存在，因为 <span class=\"token function\">cd</span> 是内建命令，而 <span class=\"token function\">which</span> 查找显示是 PATH 中的命令）\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>查看当前 PATH 配置：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">echo</span> <span class=\"token variable\">$PATH</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>或使用 env 查看所有环境变量及对应值</p>\r\n<h2><a name=\"t58\"></a><a name=\"t58\"></a><a id=\"_1578\"></a>文档编辑命令</h2>\r\n<h3><a name=\"t59\"></a><a name=\"t59\"></a><a id=\"grep__1580\"></a>grep 命令</h3>\r\n<p>强大的文本搜索命令，grep(Global Regular Expression Print) 全局正则表达式搜索。</p>\r\n<p>grep 的工作方式是这样的，它在一个或多个文件中搜索字符串模板。如果模板包括空格，则必须被引用，模板后的所有字符串被看作文件名。搜索的结果被送到标准输出，不影响原文件内容。</p>\r\n<p>命令格式：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">grep [option] pattern file|dir\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p><strong>常用参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-A n --after-context显示匹配字符后n行\r\n-B n --before-context显示匹配字符前n行\r\n-C n --context 显示匹配字符前后n行\r\n-c --count 计算符合样式的列数\r\n-i 忽略大小写\r\n-l 只列出文件内容符合指定的样式的文件名称\r\n-f 从文件中读取关键词\r\n-n 显示匹配内容的所在文件中行数\r\n-R 递归查找文件夹\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li></ul></pre>\r\n<p>grep 的规则表达式:</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">^  #锚定行的开始 如：'^grep'匹配所有以grep开头的行。\r\n$  #锚定行的结束 如：'grep$'匹配所有以grep结尾的行。\r\n.  #匹配一个非换行符的字符 如：'gr.p'匹配gr后接一个任意字符，然后是p。\r\n*  #匹配零个或多个先前字符 如：'*grep'匹配所有一个或多个空格后紧跟grep的行。\r\n.*   #一起用代表任意字符。\r\n[]   #匹配一个指定范围内的字符，如'[Gg]rep'匹配Grep和grep。\r\n[^]  #匹配一个不在指定范围内的字符，如：'[^A-FH-Z]rep'匹配不包含A-R和T-Z的一个字母开头，紧跟rep的行。\r\n\\(..\\)  #标记匹配字符，如'\\(love\\)'，love被标记为1。\r\n\\&lt;      #锚定单词的开始，如:'\\&lt;grep'匹配包含以grep开头的单词的行。\r\n\\&gt;      #锚定单词的结束，如'grep\\&gt;'匹配包含以grep结尾的单词的行。\r\nx\\{m\\}  #重复字符x，m次，如：'0\\{5\\}'匹配包含5个o的行。\r\nx\\{m,\\}  #重复字符x,至少m次，如：'o\\{5,\\}'匹配至少有5个o的行。\r\nx\\{m,n\\}  #重复字符x，至少m次，不多于n次，如：'o\\{5,10\\}'匹配5--10个o的行。\r\n\\w    #匹配文字和数字字符，也就是[A-Za-z0-9]，如：'G\\w*p'匹配以G后跟零个或多个文字或数字字符，然后是p。\r\n\\W    #\\w的反置形式，匹配一个或多个非单词字符，如点号句号等。\r\n\\b    #单词锁定符，如: '\\bgrep\\b'只匹配grep。\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）查找指定进程</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> svn\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）查找指定进程个数</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> svn -c\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）从文件中读取关键词</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">cat</span> test1.txt <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -f key.log\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（4）从文件夹中递归查找以grep开头的行，并只列出文件</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">grep</span> -lR <span class=\"token string\">'^grep'</span> /tmp\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（5）查找非x开关的行内容</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">grep</span> <span class=\"token string\">'^[^x]'</span> test.txt\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（6）显示包含 ed 或者 at 字符的内容行</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">grep</span> -E <span class=\"token string\">'ed|at'</span> test.txt\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t60\"></a><a name=\"t60\"></a><a id=\"wc__1667\"></a>wc 命令</h3>\r\n<p>wc(word count)功能为统计指定的文件中字节数、字数、行数，并将统计结果输出</p>\r\n<p>命令格式：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">wc [option] file..\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p><strong>命令参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-c 统计字节数\r\n-l 统计行数\r\n-m 统计字符数\r\n-w 统计词数，一个字被定义为由空白、跳格或换行字符分隔的字符串\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）查找文件的 行数 单词数 字节数 文件名</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">wc</span> text.txt\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>结果：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">7     8     70     test.txt\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）统计输出结果的行数</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">cat</span> test.txt <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> -l\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h2><a name=\"t61\"></a><a name=\"t61\"></a><a id=\"_1710\"></a>磁盘管理命令</h2>\r\n<h3><a name=\"t62\"></a><a name=\"t62\"></a><a id=\"cd__1712\"></a>cd 命令</h3>\r\n<p>cd(changeDirectory) 命令语法：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">cd [目录名]\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>说明：切换当前目录至 dirName。</p>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）进入要目录</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">cd</span> /\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）进入 “home” 目录</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">cd</span> ~\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）进入上一次工作路径</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">cd</span> -\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（4）把上个命令的参数作为cd参数使用。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">cd</span> <span class=\"token operator\">!</span>$\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t63\"></a><a name=\"t63\"></a><a id=\"df__1750\"></a>df 命令</h3>\r\n<p>显示磁盘空间使用情况。获取硬盘被占用了多少空间，目前还剩下多少空间等信息，如果没有文件名被指定，则所有当前被挂载的文件系统的可用空间将被显示。默认情况下，磁盘空间将以 1KB 为单位进行显示，除非环境变量 POSIXLY_CORRECT 被指定，那样将以512字节为单位进行显示：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-a 全部文件系统列表\r\n-h 以方便阅读的方式显示信息\r\n-i 显示inode信息\r\n-k 区块为1024字节\r\n-l 只显示本地磁盘\r\n-T 列出文件系统类型\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）显示磁盘使用情况</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">df</span> -l\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）以易读方式列出所有文件系统及其类型</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">df</span> -haT\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t64\"></a><a name=\"t64\"></a><a id=\"du__1779\"></a>du 命令</h3>\r\n<p>du 命令也是查看使用空间的，但是与 df 命令不同的是 Linux du 命令是对文件和目录磁盘使用的空间的查看：</p>\r\n<p>命令格式：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">du [选项] [文件]\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p><strong>常用参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-a 显示目录中所有文件大小\r\n-k 以KB为单位显示文件大小\r\n-m 以MB为单位显示文件大小\r\n-g 以GB为单位显示文件大小\r\n-h 以易读方式显示文件大小\r\n-s 仅显示总计\r\n-c或--total  除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）以易读方式显示文件夹内及子文件夹大小</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">du</span> -h scf/\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）以易读方式显示文件夹内所有文件大小</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">du</span> -ah scf/\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）显示几个文件或目录各自占用磁盘空间的大小，还统计它们的总和</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">du</span> -hc test/ scf/\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（4）输出当前目录下各个子目录所使用的空间</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">du</span> -hc --max-depth<span class=\"token operator\">=</span>1 scf/\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t65\"></a><a name=\"t65\"></a><a id=\"ls_1829\"></a>ls命令</h3>\r\n<p>就是 list 的缩写，通过 ls 命令不仅可以查看 linux 文件夹包含的文件，而且可以查看文件权限(包括目录、文件夹、文件权限)查看目录信息等等。</p>\r\n<p><strong>常用参数搭配</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">ls -a 列出目录所有文件，包含以.开始的隐藏文件\r\nls -A 列出除.及..的其它文件\r\nls -r 反序排列\r\nls -t 以文件修改时间排序\r\nls -S 以文件大小排序\r\nls -h 以易读大小显示\r\nls -l 除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>(1) 按易读方式按时间反序排序，并显示文件详细信息</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ls</span> -lhrt\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>(2) 按大小反序显示文件详细信息</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ls</span> -lrS\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>(3)列出当前目录中所有以\"t\"开头的目录的详细内容</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ls</span> -l t*\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>(4) 列出文件绝对路径（不包含隐藏文件）</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ls</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">\"s:^:<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">pwd</span><span class=\"token variable\">`</span></span>/:\"</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>(5) 列出文件绝对路径（包含隐藏文件）</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">find</span> <span class=\"token variable\">$pwd</span> -maxdepth 1 <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token function\">ls</span> -ld\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t66\"></a><a name=\"t66\"></a><a id=\"mkdir__1879\"></a>mkdir 命令</h3>\r\n<p>mkdir 命令用于创建文件夹。</p>\r\n<p>可用选项：</p>\r\n<ul><li><strong>-m</strong>: 对新建目录设置存取权限，也可以用 chmod 命令设置;</li><li><strong>-p</strong>: 可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后，系统将自动建立好那些尚不在的目录，即一次可以建立多个目录。</li></ul>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）当前工作目录下创建名为 t的文件夹</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">mkdir</span> t\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）在 tmp 目录下创建路径为 test/t1/t 的目录，若不存在，则创建：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">mkdir</span> -p /tmp/test/t1/t\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t67\"></a><a name=\"t67\"></a><a id=\"pwd__1904\"></a>pwd 命令</h3>\r\n<p>pwd 命令用于查看当前工作目录路径。</p>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）查看当前路径</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">pwd</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）查看软链接的实际路径</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">pwd</span> -P\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t68\"></a><a name=\"t68\"></a><a id=\"rmdir__1924\"></a>rmdir 命令</h3>\r\n<p>从一个目录中删除一个或多个子目录项，删除某目录时也必须具有对其父目录的写权限。</p>\r\n<p><strong>注意</strong>：不能删除非空目录</p>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）当 parent 子目录被删除后使它也成为空目录的话，则顺便一并删除：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">rmdir</span> -p parent/child/child11\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h2><a name=\"t69\"></a><a name=\"t69\"></a><a id=\"_1942\"></a>网络通讯命令</h2>\r\n<h3><a name=\"t70\"></a><a name=\"t70\"></a><a id=\"ifconfig__1944\"></a>ifconfig 命令</h3>\r\n<ul><li>ifconfig 用于查看和配置 Linux 系统的网络接口。</li><li>查看所有网络接口及其状态：<code>ifconfig -a</code> 。</li><li>使用 up 和 down 命令启动或停止某个接口：<code>ifconfig eth0 up</code> 和 <code>ifconfig eth0 down</code> 。</li></ul>\r\n<h3><a name=\"t71\"></a><a name=\"t71\"></a><a id=\"iptables__1952\"></a>iptables 命令</h3>\r\n<p>iptables ，是一个配置 Linux 内核防火墙的命令行工具。功能非常强大，对于我们开发来说，主要掌握如何开放端口即可。例如：</p>\r\n<ul><li> <p>把来源 IP 为 192.168.1.101 访问本机 80 端口的包直接拒绝：<code>iptables -I INPUT -s 192.168.1.101 -p tcp --dport 80 -j REJECT</code> 。</p> </li><li> <p>开启 80 端口，因为web对外都是这个端口</p> <pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">iptables -A INPUT -p tcp --dport 80 -j ACCEP\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre> </li><li> <p>另外，要注意使用 <code>iptables save</code> 命令，进行保存。否则，服务器重启后，配置的规则将丢失。</p> </li></ul>\r\n<h3><a name=\"t72\"></a><a name=\"t72\"></a><a id=\"netstat__1968\"></a>netstat 命令</h3>\r\n<p>Linux netstat命令用于显示网络状态。</p>\r\n<p>利用netstat指令可让你得知整个Linux系统的网络情况。</p>\r\n<p>语法</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">netstat [-acCeFghilMnNoprstuvVwx][-A&lt;网络类型&gt;][--ip]\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p><strong>参数说明</strong>：</p>\r\n<ul><li>-a或–all 显示所有连线中的Socket。</li><li>-A&lt;网络类型&gt;或–&lt;网络类型&gt; 列出该网络类型连线中的相关地址。</li><li>-c或–continuous 持续列出网络状态。</li><li>-C或–cache 显示路由器配置的快取信息。</li><li>-e或–extend 显示网络其他相关信息。</li><li>-F或–fib 显示FIB。</li><li>-g或–groups 显示多重广播功能群组组员名单。</li><li>-h或–help 在线帮助。</li><li>-i或–interfaces 显示网络界面信息表单。</li><li>-l或–listening 显示监控中的服务器的Socket。</li><li>-M或–masquerade 显示伪装的网络连线。</li><li>-n或–numeric 直接使用IP地址，而不通过域名服务器。</li><li>-N或–netlink或–symbolic 显示网络硬件外围设备的符号连接名称。</li><li>-o或–timers 显示计时器。</li><li>-p或–programs 显示正在使用Socket的程序识别码和程序名称。</li><li>-r或–route 显示Routing Table。</li><li>-s或–statistice 显示网络工作信息统计表。</li><li>-t或–tcp 显示TCP传输协议的连线状况。</li><li>-u或–udp 显示UDP传输协议的连线状况。</li><li>-v或–verbose 显示指令执行过程。</li><li>-V或–version 显示版本信息。</li><li>-w或–raw 显示RAW传输协议的连线状况。</li><li>-x或–unix 此参数的效果和指定\"-A unix\"参数相同。</li><li>–ip或–inet 此参数的效果和指定\"-A inet\"参数相同。</li></ul>\r\n<p><strong>实例</strong></p>\r\n<p><strong>如何查看系统都开启了哪些端口？</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token punctuation\">[</span>root@centos6 ~ 13:20 <span class=\"token comment\">#55]# netstat -lnp</span>\r\nActive Internet connections <span class=\"token punctuation\">(</span>only servers<span class=\"token punctuation\">)</span>\r\nProto Recv-Q Send-Q Local Address               Foreign Address             State       PID/Program name\r\ntcp        0      0 0.0.0.0:22                  0.0.0.0:*                   LISTEN      1035/sshd\r\ntcp        0      0 :::22                       :::*                        LISTEN      1035/sshd\r\nudp        0      0 0.0.0.0:68                  0.0.0.0:*                               931/dhclient\r\nActive UNIX domain sockets <span class=\"token punctuation\">(</span>only servers<span class=\"token punctuation\">)</span>\r\nProto RefCnt Flags       Type       State         I-Node PID/Program name    Path\r\nunix  2      <span class=\"token punctuation\">[</span> ACC <span class=\"token punctuation\">]</span>     STREAM     LISTENING     6825   1/init              @/com/ubuntu/upstart\r\nunix  2      <span class=\"token punctuation\">[</span> ACC <span class=\"token punctuation\">]</span>     STREAM     LISTENING     8429   1003/dbus-daemon    /var/run/dbus/system_bus_socket\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<p><strong>如何查看网络连接状况？</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token punctuation\">[</span>root@centos6 ~ 13:22 <span class=\"token comment\">#58]# netstat -an</span>\r\nActive Internet connections <span class=\"token punctuation\">(</span>servers and established<span class=\"token punctuation\">)</span>\r\nProto Recv-Q Send-Q Local Address               Foreign Address             State\r\ntcp        0      0 0.0.0.0:22                  0.0.0.0:*                   LISTEN\r\ntcp        0      0 192.168.147.130:22          192.168.147.1:23893         ESTABLISHED\r\ntcp        0      0 :::22                       :::*                        LISTEN\r\nudp        0      0 0.0.0.0:68                  0.0.0.0:*\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<p><strong>如何统计系统当前进程连接数？</strong></p>\r\n<ul><li>输入命令 <code>netstat -an | grep ESTABLISHED | wc -l</code> 。</li><li>输出结果 <code>177</code> 。一共有 177 连接数。</li></ul>\r\n<p><strong>用 netstat 命令配合其他命令，按照源 IP 统计所有到 80 端口的 ESTABLISHED 状态链接的个数？</strong></p>\r\n<blockquote>\r\n<p>严格来说，这个题目考验的是对 awk 的使用。</p>\r\n</blockquote>\r\n<p>首先，使用 <code>netstat -an|grep ESTABLISHED</code> 命令。结果如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">tcp        0      0 120.27.146.122:80       113.65.18.33:62721      ESTABLISHED\r\ntcp        0      0 120.27.146.122:80       27.43.83.115:47148      ESTABLISHED\r\ntcp        0      0 120.27.146.122:58838    106.39.162.96:443       ESTABLISHED\r\ntcp        0      0 120.27.146.122:52304    203.208.40.121:443      ESTABLISHED\r\ntcp        0      0 120.27.146.122:33194    203.208.40.122:443      ESTABLISHED\r\ntcp        0      0 120.27.146.122:53758    101.37.183.144:443      ESTABLISHED\r\ntcp        0      0 120.27.146.122:27017    23.105.193.30:50556     ESTABLISHED\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h3><a name=\"t73\"></a><a name=\"t73\"></a><a id=\"ping__2059\"></a>ping 命令</h3>\r\n<p>Linux ping命令用于检测主机。</p>\r\n<p>执行ping指令会使用ICMP传输协议，发出要求回应的信息，若远端主机的网络功能没有问题，就会回应该信息，因而得知该主机运作正常。</p>\r\n<p>指定接收包的次数</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ping</span> -c 2 www.baidu.com\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t74\"></a><a name=\"t74\"></a><a id=\"telnet__2073\"></a>telnet 命令</h3>\r\n<p>Linux telnet命令用于远端登入。</p>\r\n<p>执行telnet指令开启终端机阶段作业，并登入远端主机。</p>\r\n<p>语法</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">telnet [-8acdEfFKLrx][-b&lt;主机别名&gt;][-e&lt;脱离字符&gt;][-k&lt;域名&gt;][-l&lt;用户名称&gt;][-n&lt;记录文件&gt;][-S&lt;服务类型&gt;][-X&lt;认证形态&gt;][主机名称或IP地址&lt;通信端口&gt;]\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p><strong>参数说明</strong>：</p>\r\n<ul><li>-8 允许使用8位字符资料，包括输入与输出。</li><li>-a 尝试自动登入远端系统。</li><li>-b&lt;主机别名&gt; 使用别名指定远端主机名称。</li><li>-c 不读取用户专属目录里的.telnetrc文件。</li><li>-d 启动排错模式。</li><li>-e&lt;脱离字符&gt; 设置脱离字符。</li><li>-E 滤除脱离字符。</li><li>-f 此参数的效果和指定\"-F\"参数相同。</li><li>-F 使用Kerberos V5认证时，加上此参数可把本地主机的认证数据上传到远端主机。</li><li>-k&lt;域名&gt; 使用Kerberos认证时，加上此参数让远端主机采用指定的领域名，而非该主机的域名。</li><li>-K 不自动登入远端主机。</li><li>-l&lt;用户名称&gt; 指定要登入远端主机的用户名称。</li><li>-L 允许输出8位字符资料。</li><li>-n&lt;记录文件&gt; 指定文件记录相关信息。</li><li>-r 使用类似rlogin指令的用户界面。</li><li>-S&lt;服务类型&gt; 设置telnet连线所需的IP TOS信息。</li><li>-x 假设主机有支持数据加密的功能，就使用它。</li><li>-X&lt;认证形态&gt; 关闭指定的认证形态。</li></ul>\r\n<p><strong>实例</strong></p>\r\n<p>登录远程主机</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\"># 登录IP为 192.168.0.5 的远程主机</span>\r\ntelnet 192.168.0.5\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li></ul></pre>\r\n<h2><a name=\"t75\"></a><a name=\"t75\"></a><a id=\"_2119\"></a>系统管理命令</h2>\r\n<h3><a name=\"t76\"></a><a name=\"t76\"></a><a id=\"date__2121\"></a>date 命令</h3>\r\n<p>显示或设定系统的日期与时间。</p>\r\n<p>命令参数：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-d&lt;字符串&gt; 　显示字符串所指的日期与时间。字符串前后必须加上双引号。\r\n-s&lt;字符串&gt; 　根据字符串来设置日期与时间。字符串前后必须加上双引号。\r\n-u 　显示GMT。\r\n%H 小时(00-23)\r\n%I 小时(00-12)\r\n%M 分钟(以00-59来表示)\r\n%s 总秒数。起算时间为1970-01-01 00:00:00 UTC。\r\n%S 秒(以本地的惯用法来表示)\r\n%a 星期的缩写。\r\n%A 星期的完整名称。\r\n%d 日期(以01-31来表示)。\r\n%D 日期(含年月日)。\r\n%m 月份(以01-12来表示)。\r\n%y 年份(以00-99来表示)。\r\n%Y 年份(以四位数来表示)。\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）显示下一天</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">date</span> +%Y%m%d --date<span class=\"token operator\">=</span><span class=\"token string\">\"+1 day\"</span>  //显示下一天的日期\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）-d参数使用</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">date</span> -d <span class=\"token string\">\"nov 22\"</span>  今年的 11 月 22 日是星期三\r\n<span class=\"token function\">date</span> -d <span class=\"token string\">'2 weeks'</span> 2周后的日期\r\n<span class=\"token function\">date</span> -d <span class=\"token string\">'next monday'</span> <span class=\"token punctuation\">(</span>下周一的日期<span class=\"token punctuation\">)</span>\r\n<span class=\"token function\">date</span> -d next-day +%Y%m%d（明天的日期）或者：date -d tomorrow +%Y%m%d\r\n<span class=\"token function\">date</span> -d last-day +%Y%m%d<span class=\"token punctuation\">(</span>昨天的日期<span class=\"token punctuation\">)</span> 或者：date -d yesterday +%Y%m%d\r\n<span class=\"token function\">date</span> -d last-month +%Y%m<span class=\"token punctuation\">(</span>上个月是几月<span class=\"token punctuation\">)</span>\r\n<span class=\"token function\">date</span> -d next-month +%Y%m<span class=\"token punctuation\">(</span>下个月是几月<span class=\"token punctuation\">)</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h3><a name=\"t77\"></a><a name=\"t77\"></a><a id=\"free__2167\"></a>free 命令</h3>\r\n<p>显示系统内存使用情况，包括物理内存、交互区内存(swap)和内核缓冲区内存。</p>\r\n<p><strong>命令参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-b 以Byte显示内存使用情况\r\n-k 以kb为单位显示内存使用情况\r\n-m 以mb为单位显示内存使用情况\r\n-g 以gb为单位显示内存使用情况\r\n-s&lt;间隔秒数&gt; 持续显示内存\r\n-t 显示内存使用总合\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）显示内存使用情况</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">free</span>\r\n<span class=\"token function\">free</span> -k\r\n<span class=\"token function\">free</span> -m\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre>\r\n<p>（2）以总和的形式显示内存的使用信息</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">free</span> -t\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）周期性查询内存使用情况</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">free</span> -s 10\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t78\"></a><a name=\"t78\"></a><a id=\"kill__2206\"></a>kill 命令</h3>\r\n<p>发送指定的信号到相应进程。不指定型号将发送SIGTERM（15）终止指定进程。如果任无法终止该程序可用\"-KILL\" 参数，其发送的信号为SIGKILL(9) ，将强制结束进程，使用ps命令或者jobs 命令可以查看进程号。root用户将影响用户的进程，非root用户只能影响自己的进程。</p>\r\n<p><strong>常用参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-l  信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称\r\n-a  当处理当前进程时，不限制命令名和进程号的对应关系\r\n-p  指定kill 命令只打印相关进程的进程号，而不发送任何信号\r\n-s  指定发送信号\r\n-u  指定用户\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）先使用ps查找进程pro1，然后用kill杀掉</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">kill</span> -9 <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> pro1<span class=\"token variable\">)</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t79\"></a><a name=\"t79\"></a><a id=\"ps__2230\"></a>ps 命令</h3>\r\n<p>ps(process status)，用来查看当前运行的进程状态，一次性查看，如果需要动态连续结果使用 top</p>\r\n<p>linux上进程有5种状态:</p>\r\n<ol><li> <p>运行(正在运行或在运行队列中等待)</p> </li><li> <p>中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)</p> </li><li> <p>不可中断(收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)</p> </li><li> <p>僵死(进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放)</p> </li><li> <p>停止(进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行)</p> </li></ol>\r\n<p>ps 工具标识进程的5种状态码:</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">D 不可中断 uninterruptible sleep (usually IO)\r\nR 运行 runnable (on run queue)\r\nS 中断 sleeping\r\nT 停止 traced or stopped\r\nZ 僵死 a defunct (”zombie”) process\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<p><strong>命令参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-A 显示所有进程\r\na 显示所有进程\r\n-a 显示同一终端下所有进程\r\nc 显示进程真实名称\r\ne 显示环境变量\r\nf 显示进程间的关系\r\nr 显示当前终端运行的进程\r\n-aux 显示所有包含其它使用的进程\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）显示当前所有进程环境变量及进程间关系</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ps</span> -ef\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）显示当前所有进程</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ps</span> -A\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）与grep联用查找某进程</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ps</span> -aux <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> apache\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（4）找出与 cron 与 syslog 这两个服务有关的 PID 号码</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">ps</span> aux <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'(cron|syslog)'</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t80\"></a><a name=\"t80\"></a><a id=\"rpm__2297\"></a>rpm 命令</h3>\r\n<p>Linux rpm 命令用于管理套件。</p>\r\n<p>rpm(redhat package manager) 原本是 Red Hat Linux 发行版专门用来管理 Linux 各项套件的程序，由于它遵循 GPL 规则且功能强大方便，因而广受欢迎。逐渐受到其他发行版的采用。RPM 套件管理方式的出现，让 Linux 易于安装，升级，间接提升了 Linux 的适用度。</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\"># 查看系统自带jdk</span>\r\nrpm -qa <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> jdk\r\n<span class=\"token comment\"># 删除系统自带jdk</span>\r\nrpm -e --nodeps 查看jdk显示的数据\r\n<span class=\"token comment\"># 安装jdk</span>\r\nrpm -ivh jdk-7u80-linux-x64.rpm\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<h3><a name=\"t81\"></a><a name=\"t81\"></a><a id=\"top__2314\"></a>top 命令</h3>\r\n<p>显示当前系统正在执行的进程的相关信息，包括进程 ID、内存占用率、CPU 占用率等</p>\r\n<p><strong>常用参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-c 显示完整的进程命令\r\n-s 保密模式\r\n-p &lt;进程号&gt; 指定进程显示\r\n-n &lt;次数&gt;循环显示次数\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">top</span> - 14:06:23 up 70 days, 16:44,  2 users,  load average: 1.25, 1.32, 1.35\r\nTasks: 206 total,   1 running, 205 sleeping,   0 stopped,   0 zombie\r\nCpu<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>:  5.9%us,  3.4%sy,  0.0%ni, 90.4%id,  0.0%wa,  0.0%hi,  0.2%si,  0.0%st\r\nMem:  32949016k total, 14411180k used, 18537836k free,   169884k buffers\r\nSwap: 32764556k total,        0k used, 32764556k free,  3612636k cached\r\nPID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND\r\n28894 root      22   0 1501m 405m  10m S 52.2  1.3   2534:16 java\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<p>前五行是当前系统情况整体的统计信息区。</p>\r\n<p><strong>第一行，任务队列信息，同 uptime 命令的执行结果，具体参数说明情况如下</strong>：</p>\r\n<p>14:06:23 — 当前系统时间</p>\r\n<p>up 70 days, 16:44 — 系统已经运行了70天16小时44分钟（在这期间系统没有重启过的吆！）</p>\r\n<p>2 users — 当前有2个用户登录系统</p>\r\n<p>load average: 1.15, 1.42, 1.44 — load average后面的三个数分别是1分钟、5分钟、15分钟的负载情况。</p>\r\n<p>load average数据是每隔5秒钟检查一次活跃的进程数，然后按特定算法计算出的数值。如果这个数除以逻辑CPU的数量，结果高于5的时候就表明系统在超负荷运转了。</p>\r\n<p><strong>第二行，Tasks — 任务（进程），具体信息说明如下</strong>：</p>\r\n<p>系统现在共有206个进程，其中处于运行中的有1个，205个在休眠（sleep），stoped状态的有0个，zombie状态（僵尸）的有0个。</p>\r\n<p><strong>第三行，cpu状态信息，具体属性说明如下</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">5.9%us — 用户空间占用CPU的百分比。\r\n3.4% sy — 内核空间占用CPU的百分比。\r\n0.0% ni — 改变过优先级的进程占用CPU的百分比\r\n90.4% id — 空闲CPU百分比\r\n0.0% wa — IO等待占用CPU的百分比\r\n0.0% hi — 硬中断（Hardware IRQ）占用CPU的百分比\r\n0.2% si — 软中断（Software Interrupts）占用CPU的百分比\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<p><strong>备注</strong>：在这里CPU的使用比率和windows概念不同，需要理解linux系统用户空间和内核空间的相关知识！</p>\r\n<p>第四行，内存状态，具体信息如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">32949016k total — 物理内存总量（32GB）\r\n14411180k used — 使用中的内存总量（14GB）\r\n18537836k free — 空闲内存总量（18GB）\r\n169884k buffers — 缓存的内存量 （169M）\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p><strong>第五行，swap交换分区信息，具体信息说明如下</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">32764556k total — 交换区总量（32GB）\r\n0k used — 使用的交换区总量（0K）\r\n32764556k free — 空闲交换区总量（32GB）\r\n3612636k cached — 缓冲的交换区总量（3.6GB）\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li></ul></pre>\r\n<p><strong>第六行，空行。</strong></p>\r\n<p><strong>第七行以下：各进程（任务）的状态监控，项目列信息说明如下</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">PID — 进程id\r\nUSER — 进程所有者\r\nPR — 进程优先级\r\nNI — nice值。负值表示高优先级，正值表示低优先级\r\nVIRT — 进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES\r\nRES — 进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA\r\nSHR — 共享内存大小，单位kb\r\nS — 进程状态。D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程\r\n%CPU — 上次更新到现在的CPU时间占用百分比\r\n%MEM — 进程使用的物理内存百分比\r\nTIME+ — 进程使用的CPU时间总计，单位1/100秒\r\nCOMMAND — 进程名称（命令名/命令行）\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li></ul></pre>\r\n<p><strong>top 交互命令</strong></p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">h 显示top交互命令帮助信息\r\nc 切换显示命令名称和完整命令行\r\nm 以内存使用率排序\r\nP 根据CPU使用百分比大小进行排序\r\nT 根据时间/累计时间进行排序\r\nW 将当前设置写入~/.toprc文件中\r\no或者O 改变显示项目的顺序\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h3><a name=\"t82\"></a><a name=\"t82\"></a><a id=\"yum__2422\"></a>yum 命令</h3>\r\n<p>yum（ Yellow dog Updater, Modified）是一个在Fedora和RedHat以及SUSE中的Shell前端软件包管理器。</p>\r\n<p>基於RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软体包，无须繁琐地一次次下载、安装。</p>\r\n<p>yum提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。</p>\r\n<ul><li>1.列出所有可更新的软件清单命令：yum check-update</li><li>2.更新所有软件命令：yum update</li><li>3.仅安装指定的软件命令：yum install &lt;package_name&gt;</li><li>4.仅更新指定的软件命令：yum update &lt;package_name&gt;</li><li>5.列出所有可安裝的软件清单命令：yum list</li><li>6.删除软件包命令：yum remove &lt;package_name&gt;</li><li>7.查找软件包 命令：yum search </li><li>8.清除缓存命令:\r\n<ul><li>yum clean packages: 清除缓存目录下的软件包</li><li>yum clean headers: 清除缓存目录下的 headers</li><li>yum clean oldheaders: 清除缓存目录下旧的 headers</li><li>yum clean, yum clean all (= yum clean packages; yum clean oldheaders) :清除缓存目录下的软件包及旧的headers</li></ul> </li></ul>\r\n<p><strong>实例</strong></p>\r\n<p>安装 pam-devel</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token punctuation\">[</span>root@www ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum install pam-devel</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h2><a name=\"t83\"></a><a name=\"t83\"></a><a id=\"_2455\"></a>备份压缩命令</h2>\r\n<h3><a name=\"t84\"></a><a name=\"t84\"></a><a id=\"bzip2__2457\"></a>bzip2 命令</h3>\r\n<ul><li>创建 <code>*.bz2</code> 压缩文件：<code>bzip2 test.txt</code> 。</li><li>解压 <code>*.bz2</code> 文件：<code>bzip2 -d test.txt.bz2</code> 。</li></ul>\r\n<h3><a name=\"t85\"></a><a name=\"t85\"></a><a id=\"gzip__2464\"></a>gzip 命令</h3>\r\n<ul><li>创建一个 <code>*.gz</code> 的压缩文件：<code>gzip test.txt</code> 。</li><li>解压 <code>*.gz</code> 文件：<code>gzip -d test.txt.gz</code> 。</li><li>显示压缩的比率：<code>gzip -l *.gz</code> 。</li></ul>\r\n<h3><a name=\"t86\"></a><a name=\"t86\"></a><a id=\"tar__2472\"></a>tar 命令</h3>\r\n<p>用来压缩和解压文件。tar 本身不具有压缩功能，只具有打包功能，有关压缩及解压是调用其它的功能来完成。</p>\r\n<p>弄清两个概念：打包和压缩。打包是指将一大堆文件或目录变成一个总的文件；压缩则是将一个大的文件通过一些压缩算法变成一个小文件</p>\r\n<p><strong>常用参数</strong>：</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">-c 建立新的压缩文件\r\n-f 指定压缩文件\r\n-r 添加文件到已经压缩文件包中\r\n-u 添加改了和现有的文件到压缩包中\r\n-x 从压缩包中抽取文件\r\n-t 显示压缩文件中的内容\r\n-z 支持gzip压缩\r\n-j 支持bzip2压缩\r\n-Z 支持compress解压文件\r\n-v 显示操作过程\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li></ul></pre>\r\n<p>有关 gzip 及 bzip2 压缩:</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">gzip 实例：压缩 gzip fileName .tar.gz 和.tgz  解压：gunzip filename.gz 或 gzip -d filename.gz\r\n          对应：tar zcvf filename.tar.gz     tar zxvf filename.tar.gz\r\n\r\nbz2实例：压缩 bzip2 -z filename .tar.bz2 解压：bunzip filename.bz2或bzip -d filename.bz2\r\n       对应：tar jcvf filename.tar.gz         解压：tar jxvf filename.tar.bz2\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre>\r\n<p><strong>实例</strong>：</p>\r\n<p>（1）将文件全部打包成 tar 包</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">tar</span> -cvf log.tar 1.log,2.log 或tar -cvf log.*\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（2）将 /etc 下的所有文件及目录打包到指定目录，并使用 gz 压缩</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">tar</span> -zcvf /tmp/etc.tar.gz /etc\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（3）查看刚打包的文件内容（一定加z，因为是使用 gzip 压缩的）</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">tar</span> -ztvf /tmp/etc.tar.gz\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<p>（4）要压缩打包 /home, /etc ，但不要 /home/dmtsai</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-shell has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token function\">tar</span> --exclude /home/dmtsai -zcvf myfile.tar.gz /home/* /etc\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li></ul></pre>\r\n<h3><a name=\"t87\"></a><a name=\"t87\"></a><a id=\"unzip__2531\"></a>unzip 命令</h3>\r\n<ul><li>解压 <code>*.zip</code> 文件：<code>unzip test.zip</code> 。</li><li>查看 <code>*.zip</code> 文件的内容：<code>unzip -l jasper.zip</code> 。</li></ul>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_linux.vue?vue&type=template&id=1391435e\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>ZooKeeper面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"1_ZooKeeper__36\"></a>1. ZooKeeper 是什么？</h2>\r\n<p>ZooKeeper 是一个开源的分布式协调服务。它是一个为分布式应用提供一致性服务的软件，分布式应用程序可以基于 Zookeeper 实现诸如数据发布/订阅、负载均衡、命名服务、分布式协调/通知、集群管理、Master 选举、分布式锁和分布式队列等功能。</p>\r\n<p>ZooKeeper 的目标就是封装好复杂易出错的关键服务，将简单易用的接口和性能高效、功能稳定的系统提供给用户。</p>\r\n<p>Zookeeper 保证了如下分布式一致性特性：</p>\r\n<p>（1）顺序一致性</p>\r\n<p>（2）原子性</p>\r\n<p>（3）单一视图</p>\r\n<p>（4）可靠性</p>\r\n<p>（5）实时性（最终一致性）</p>\r\n<p>客户端的读请求可以被集群中的任意一台机器处理，如果读请求在节点上注册了监听器，这个监听器也是由所连接的 zookeeper 机器来处理。对于写请求，这些请求会同时发给其他 zookeeper 机器并且达成一致后，请求才会返回成功。因此，随着 zookeeper 的集群机器增多，读请求的吞吐会提高但是写请求的吞吐会下降。</p>\r\n<p>有序性是 zookeeper 中非常重要的一个特性，所有的更新都是全局有序的，每个更新都有一个唯一的时间戳，这个时间戳称为 zxid（Zookeeper Transaction Id）。而读请求只会相对于更新有序，也就是读请求的返回结果中会带有这个zookeeper 最新的 zxid。</p>\r\n<h2><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"2_ZooKeeper__62\"></a>2. ZooKeeper 提供了什么？</h2>\r\n<ul><li> <p>文件系统</p> </li><li> <p>通知机制</p> </li></ul>\r\n<h2><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"3_Zookeeper__70\"></a>3. Zookeeper 文件系统</h2>\r\n<p>Zookeeper 提供一个多层级的节点命名空间（节点称为 znode）。与文件系统不同的是，这些节点都可以设置关联的数据，而文件系统中只有文件节点可以存放数据而目录节点不行。</p>\r\n<p>Zookeeper 为了保证高吞吐和低延迟，在内存中维护了这个树状的目录结构，这种特性使得 Zookeeper 不能用于存放大量的数据，每个节点的存放数据上限为1M。</p>\r\n<h2><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"4_Zookeeper__78\"></a>4. Zookeeper 怎么保证主从节点的状态同步？</h2>\r\n<p>Zookeeper 的核心是原子广播机制，这个机制保证了各个 server 之间的同步。实现这个机制的协议叫做 Zab 协议。Zab 协议有两种模式，它们分别是恢复模式和广播模式。</p>\r\n<ol><li>恢复模式</li></ol>\r\n<p>当服务启动或者在领导者崩溃后，Zab就进入了恢复模式，当领导者被选举出来，且大多数 server 完成了和 leader 的状态同步以后，恢复模式就结束了。状态同步保证了 leader 和 server 具有相同的系统状态。</p>\r\n<ol start=\"2\"><li>广播模式</li></ol>\r\n<p>一旦 leader 已经和多数的 follower 进行了状态同步后，它就可以开始广播消息了，即进入广播状态。这时候当一个 server 加入 ZooKeeper 服务中，它会在恢复模式下启动，发现 leader，并和 leader 进行状态同步。待到同步结束，它也参与消息广播。ZooKeeper 服务一直维持在 Broadcast 状态，直到 leader 崩溃了或者 leader 失去了大部分的 followers 支持。</p>\r\n<h2><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"5__Znode_92\"></a>5. 四种类型的数据节点 Znode</h2>\r\n<p>（1）PERSISTENT-持久节点</p>\r\n<p>除非手动删除，否则节点一直存在于 Zookeeper 上</p>\r\n<p>（2）EPHEMERAL-临时节点</p>\r\n<p>临时节点的生命周期与客户端会话绑定，一旦客户端会话失效（客户端与zookeeper 连接断开不一定会话失效），那么这个客户端创建的所有临时节点都会被移除。</p>\r\n<p>（3）PERSISTENT_SEQUENTIAL-持久顺序节点</p>\r\n<p>基本特性同持久节点，只是增加了顺序属性，节点名后边会追加一个由父节点维护的自增整型数字。</p>\r\n<p>（4）EPHEMERAL_SEQUENTIAL-临时顺序节点</p>\r\n<p>基本特性同临时节点，增加了顺序属性，节点名后边会追加一个由父节点维护的自增整型数字。</p>\r\n<h2><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"6_Zookeeper_Watcher____112\"></a>6. Zookeeper Watcher 机制 – 数据变更通知</h2>\r\n<p>Zookeeper 允许客户端向服务端的某个 Znode 注册一个 Watcher 监听，当服务端的一些指定事件触发了这个 Watcher，服务端会向指定客户端发送一个事件通知来实现分布式的通知功能，然后客户端根据 Watcher 通知状态和事件类型做出业务上的改变。</p>\r\n<p>工作机制：</p>\r\n<p>（1）客户端注册 watcher</p>\r\n<p>（2）服务端处理 watcher</p>\r\n<p>（3）客户端回调 watcher</p>\r\n<p>Watcher 特性总结：</p>\r\n<p>（1）一次性</p>\r\n<p>无论是服务端还是客户端，一旦一个 Watcher 被 触 发 ，Zookeeper 都会将其从相应的存储中移除。这样的设计有效的减轻了服务端的压力，不然对于更新非常频繁的节点，服务端会不断的向客户端发送事件通知，无论对于网络还是服务端的压力都非常大。</p>\r\n<p>（2）客户端串行执行</p>\r\n<p>客户端 Watcher 回调的过程是一个串行同步的过程。</p>\r\n<p>（3）轻量</p>\r\n<p>3.1、Watcher 通知非常简单，只会告诉客户端发生了事件，而不会说明事件的具体内容。</p>\r\n<p>3.2、客户端向服务端注册 Watcher 的时候，并不会把客户端真实的 Watcher 对象实体传递到服务端，仅仅是在客户端请求中使用 boolean 类型属性进行了标记。</p>\r\n<p>（4）watcher event 异步发送 watcher 的通知事件从 server 发送到 client 是异步的，这就存在一个问题，不同的客户端和服务器之间通过 socket 进行通信，由于网络延迟或其他因素导致客户端在不通的时刻监听到事件，由于 Zookeeper 本身提供了 ordering guarantee，即客户端监听事件后，才会感知它所监视 znode发生了变化。所以我们使用 Zookeeper 不能期望能够监控到节点每次的变化。Zookeeper 只能保证最终的一致性，而无法保证强一致性。</p>\r\n<p>（5）注册 watcher getData、exists、getChildren</p>\r\n<p>（6）触发 watcher create、delete、setData</p>\r\n<p>（7）当一个客户端连接到一个新的服务器上时，watch 将会被以任意会话事件触发。当与一个服务器失去连接的时候，是无法接收到 watch 的。而当 client 重新连接时，如果需要的话，所有先前注册过的 watch，都会被重新注册。通常这是完全透明的。只有在一个特殊情况下，watch 可能会丢失：对于一个未创建的 znode的 exist watch，如果在客户端断开连接期间被创建了，并且随后在客户端连接上之前又删除了，这种情况下，这个 watch 事件可能会被丢失。</p>\r\n<h2><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"7__Watcher__150\"></a>7. 客户端注册 Watcher 实现</h2>\r\n<p>（1）调用 getData()/getChildren()/exist()三个 API，传入 Watcher 对象</p>\r\n<p>（2）标记请求 request，封装 Watcher 到 WatchRegistration</p>\r\n<p>（3）封装成 Packet 对象，发服务端发送 request</p>\r\n<p>（4）收到服务端响应后，将 Watcher 注册到 ZKWatcherManager 中进行管理</p>\r\n<p>（5）请求返回，完成注册。</p>\r\n<h2><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"8__Watcher__164\"></a>8. 服务端处理 Watcher 实现</h2>\r\n<p>（1）服务端接收 Watcher 并存储</p>\r\n<p>接收到客户端请求，处理请求判断是否需要注册 Watcher，需要的话将数据节点的节点路径和 ServerCnxn（ServerCnxn 代表一个客户端和服务端的连接，实现了 Watcher 的 process 接口，此时可以看成一个 Watcher 对象）存储在WatcherManager 的 WatchTable 和 watch2Paths 中去。</p>\r\n<p>（2）Watcher 触发</p>\r\n<p>以服务端接收到 setData() 事务请求触发 NodeDataChanged 事件为例：</p>\r\n<p>2.1 封装 WatchedEvent</p>\r\n<p>将通知状态（SyncConnected）、事件类型（NodeDataChanged）以及节点路径封装成一个 WatchedEvent 对象</p>\r\n<p>2.2 查询 Watcher</p>\r\n<p>从 WatchTable 中根据节点路径查找 Watcher</p>\r\n<p>2.3 没找到；说明没有客户端在该数据节点上注册过 Watcher</p>\r\n<p>2.4 找到；提取并从 WatchTable 和 Watch2Paths 中删除对应 Watcher（从这里可以看出 Watcher 在服务端是一次性的，触发一次就失效了）</p>\r\n<p>（3）调用 process 方法来触发 Watcher</p>\r\n<p>这里 process 主要就是通过 ServerCnxn 对应的 TCP 连接发送 Watcher 事件通知。</p>\r\n<h2><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"9__Watcher_192\"></a>9. 客户端回调 Watcher</h2>\r\n<p>客户端 SendThread 线程接收事件通知，交由 EventThread 线程回调 Watcher。</p>\r\n<p>客户端的 Watcher 机制同样是一次性的，一旦被触发后，该 Watcher 就失效了。</p>\r\n<h2><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"10_ACL__200\"></a>10. ACL 权限控制机制</h2>\r\n<p>UGO（User/Group/Others）</p>\r\n<p>目前在 Linux/Unix 文件系统中使用，也是使用最广泛的权限控制方式。是一种粗粒度的文件系统权限控制模式。</p>\r\n<p>ACL（Access Control List）访问控制列表</p>\r\n<p>包括三个方面：</p>\r\n<p>权限模式（Scheme）</p>\r\n<p>（1）IP：从 IP 地址粒度进行权限控制</p>\r\n<p>（2）Digest：最常用，用类似于 username:password 的权限标识来进行权限配置，便于区分不同应用来进行权限控制</p>\r\n<p>（3）World：最开放的权限控制方式，是一种特殊的 digest 模式，只有一个权限标识“world:anyone”</p>\r\n<p>（4）Super：超级用户</p>\r\n<p>授权对象</p>\r\n<p>授权对象指的是权限赋予的用户或一个指定实体，例如 IP 地址或是机器灯。</p>\r\n<p>权限 Permission</p>\r\n<p>（1）CREATE：数据节点创建权限，允许授权对象在该 Znode 下创建子节点</p>\r\n<p>（2）DELETE：子节点删除权限，允许授权对象删除该数据节点的子节点</p>\r\n<p>（3）READ：数据节点的读取权限，允许授权对象访问该数据节点并读取其数据内容或子节点列表等</p>\r\n<p>（4）WRITE：数据节点更新权限，允许授权对象对该数据节点进行更新操作</p>\r\n<p>（5）ADMIN：数据节点管理权限，允许授权对象对该数据节点进行 ACL 相关设置操作</p>\r\n<h2><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"11_Chroot__238\"></a>11. Chroot 特性</h2>\r\n<p>3.2.0 版本后，添加了 Chroot 特性，该特性允许每个客户端为自己设置一个命名空间。如果一个客户端设置了 Chroot，那么该客户端对服务器的任何操作，都将会被限制在其自己的命名空间下。</p>\r\n<p>通过设置 Chroot，能够将一个客户端应用于 Zookeeper 服务端的一颗子树相对应，在那些多个应用公用一个 Zookeeper 进群的场景下，对实现不同应用间的相互隔离非常有帮助。</p>\r\n<h2><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"12__246\"></a>12. 会话管理</h2>\r\n<p>分桶策略：将类似的会话放在同一区块中进行管理，以便于 Zookeeper 对会话进行不同区块的隔离处理以及同一区块的统一处理。</p>\r\n<p>分配原则：每个会话的“下次超时时间点”（ExpirationTime）</p>\r\n<p>计算公式：</p>\r\n<p>ExpirationTime_ = currentTime + sessionTimeout</p>\r\n<p>ExpirationTime = (ExpirationTime_ / ExpirationInrerval + 1) *</p>\r\n<p>ExpirationInterval , ExpirationInterval 是指 Zookeeper 会话超时检查时间间隔，默认 tickTime</p>\r\n<h2><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"13__262\"></a>13. 服务器角色</h2>\r\n<p>Leader</p>\r\n<p>（1）事务请求的唯一调度和处理者，保证集群事务处理的顺序性</p>\r\n<p>（2）集群内部各服务的调度者</p>\r\n<p>Follower</p>\r\n<p>（1）处理客户端的非事务请求，转发事务请求给 Leader 服务器</p>\r\n<p>（2）参与事务请求 Proposal 的投票</p>\r\n<p>（3）参与 Leader 选举投票</p>\r\n<p>Observer</p>\r\n<p>（1）3.0 版本以后引入的一个服务器角色，在不影响集群事务处理能力的基础上提升集群的非事务处理能力</p>\r\n<p>（2）处理客户端的非事务请求，转发事务请求给 Leader 服务器</p>\r\n<p>（3）不参与任何形式的投票</p>\r\n<h2><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"14_Zookeeper__Server__288\"></a>14. Zookeeper 下 Server 工作状态</h2>\r\n<p>服务器具有四种状态，分别是 LOOKING、FOLLOWING、LEADING、OBSERVING。</p>\r\n<p>（1）LOOKING：寻 找 Leader 状态。当服务器处于该状态时，它会认为当前集群中没有 Leader，因此需要进入 Leader 选举状态。</p>\r\n<p>（2）FOLLOWING：跟随者状态。表明当前服务器角色是 Follower。</p>\r\n<p>（3）LEADING：领导者状态。表明当前服务器角色是 Leader。</p>\r\n<p>（4）OBSERVING：观察者状态。表明当前服务器角色是 Observer。</p>\r\n<h2><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"15__302\"></a>15. 数据同步</h2>\r\n<p>整个集群完成 Leader 选举之后，Learner（Follower 和 Observer 的统称）回向Leader 服务器进行注册。当 Learner 服务器想 Leader 服务器完成注册后，进入数据同步环节。</p>\r\n<p>数据同步流程：（均以消息传递的方式进行）</p>\r\n<p>Learner 向 Learder 注册</p>\r\n<p>数据同步</p>\r\n<p>同步确认</p>\r\n<p>Zookeeper 的数据同步通常分为四类：</p>\r\n<p>（1）直接差异化同步（DIFF 同步）</p>\r\n<p>（2）先回滚再差异化同步（TRUNC+DIFF 同步）</p>\r\n<p>（3）仅回滚同步（TRUNC 同步）</p>\r\n<p>（4）全量同步（SNAP 同步）</p>\r\n<p>在进行数据同步前，Leader 服务器会完成数据同步初始化：</p>\r\n<p>peerLastZxid：</p>\r\n<p>· 从 learner 服务器注册时发送的 ACKEPOCH 消息中提取 lastZxid（该Learner 服务器最后处理的 ZXID）</p>\r\n<p>minCommittedLog：</p>\r\n<p>· Leader 服务器 Proposal 缓存队列 committedLog 中最小 ZXIDmaxCommittedLog：</p>\r\n<p>· Leader 服务器 Proposal 缓存队列 committedLog 中最大 ZXID直接差异化同步（DIFF 同步）</p>\r\n<p>· 场景：peerLastZxid 介于 minCommittedLog 和 maxCommittedLog之间先回滚再差异化同步（TRUNC+DIFF 同步）</p>\r\n<p>· 场景：当新的 Leader 服务器发现某个 Learner 服务器包含了一条自己没有的事务记录，那么就需要让该 Learner 服务器进行事务回滚–回滚到 Leader服务器上存在的，同时也是最接近于 peerLastZxid 的 ZXID仅回滚同步（TRUNC 同步）</p>\r\n<p>· 场景：peerLastZxid 大于 maxCommittedLog</p>\r\n<p>全量同步（SNAP 同步）</p>\r\n<p>· 场景一：peerLastZxid 小于 minCommittedLog</p>\r\n<p>· 场景二：Leader 服务器上没有 Proposal 缓存队列且 peerLastZxid 不等于 lastProcessZxid</p>\r\n<h2><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"16_zookeeper__350\"></a>16. zookeeper 是如何保证事务的顺序一致性的？</h2>\r\n<p>zookeeper 采用了全局递增的事务 Id 来标识，所有的 proposal（提议）都在被提出的时候加上了 zxid，zxid 实际上是一个 64 位的数字，高 32 位是 epoch（ 时期; 纪元; 世; 新时代）用来标识 leader 周期，如果有新的 leader 产生出来，epoch会自增，低 32 位用来递增计数。当新产生 proposal 的时候，会依据数据库的两阶段过程，首先会向其他的 server 发出事务执行请求，如果超过半数的机器都能执行并且能够成功，那么就会开始执行。</p>\r\n<h2><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"17__Master_356\"></a>17. 分布式集群中为什么会有 Master主节点？</h2>\r\n<p>在分布式环境中，有些业务逻辑只需要集群中的某一台机器进行执行，其他的机器可以共享这个结果，这样可以大大减少重复计算，提高性能，于是就需要进行 leader 选举。</p>\r\n<h2><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"18_zk__362\"></a>18. zk 节点宕机如何处理？</h2>\r\n<p>Zookeeper 本身也是集群，推荐配置不少于 3 个服务器。Zookeeper 自身也要保证当一个节点宕机时，其他节点会继续提供服务。</p>\r\n<p>如果是一个 Follower 宕机，还有 2 台服务器提供访问，因为 Zookeeper 上的数据是有多个副本的，数据并不会丢失；</p>\r\n<p>如果是一个 Leader 宕机，Zookeeper 会选举出新的 Leader。</p>\r\n<p>ZK 集群的机制是只要超过半数的节点正常，集群就能正常提供服务。只有在 ZK节点挂得太多，只剩一半或不到一半节点能工作，集群才失效。</p>\r\n<p>所以</p>\r\n<p>3 个节点的 cluster 可以挂掉 1 个节点(leader 可以得到 2 票&gt;1.5)</p>\r\n<p>2 个节点的 cluster 就不能挂掉任何 1 个节点了(leader 可以得到 1 票&lt;=1)</p>\r\n<h2><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"19_zookeeper__nginx__380\"></a>19. zookeeper 负载均衡和 nginx 负载均衡区别</h2>\r\n<p>zk 的负载均衡是可以调控，nginx 只是能调权重，其他需要可控的都需要自己写插件；但是 nginx 的吞吐量比 zk 大很多，应该说按业务选择用哪种方式。</p>\r\n<h2><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"20_Zookeeper__386\"></a>20. Zookeeper 有哪几种几种部署模式？</h2>\r\n<p>Zookeeper 有三种部署模式：</p>\r\n<ol><li> <p>单机部署：一台集群上运行；</p> </li><li> <p>集群部署：多台集群运行；</p> </li><li> <p>伪集群部署：一台集群启动多个 Zookeeper 实例运行。</p> </li></ol>\r\n<h2><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"21__3__Zookeeper__398\"></a>21. 集群最少要几台机器，集群规则是怎样的？集群中有 3 台服务器，其中一个节点宕机，这个时候 Zookeeper 还可以使用吗？</h2>\r\n<p>集群规则为 2N+1 台，N&gt;0，即 3 台。可以继续使用，单数服务器只要没超过一半的服务器宕机就可以继续使用。</p>\r\n<h2><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"22__406\"></a>22. 集群支持动态添加机器吗？</h2>\r\n<p>其实就是水平扩容了，Zookeeper 在这方面不太好。两种方式：</p>\r\n<p>全部重启：关闭所有 Zookeeper 服务，修改配置之后启动。不影响之前客户端的会话。</p>\r\n<p>逐个重启：在过半存活即可用的原则下，一台机器重启不影响整个集群对外提供服务。这是比较常用的方式。</p>\r\n<p>3.5 版本开始支持动态扩容。</p>\r\n<h2><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"23_Zookeeper__watch__418\"></a>23. Zookeeper 对节点的 watch 监听通知是永久的吗？为什么不是永久的?</h2>\r\n<p>不是。官方声明：一个 Watch 事件是一个一次性的触发器，当被设置了 Watch的数据发生了改变的时候，则服务器将这个改变发送给设置了 Watch 的客户端，以便通知它们。</p>\r\n<p>为什么不是永久的，举个例子，如果服务端变动频繁，而监听的客户端很多情况下，每次变动都要通知到所有的客户端，给网络和服务器造成很大压力。</p>\r\n<p>一般是客户端执行 getData(“/节点 A”,true)，如果节点 A 发生了变更或删除，客户端会得到它的 watch 事件，但是在之后节点 A 又发生了变更，而客户端又没有设置 watch 事件，就不再给客户端发送。</p>\r\n<p>在实际应用中，很多情况下，我们的客户端不需要知道服务端的每一次变动，我只要最新的数据即可。</p>\r\n<h2><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"24_Zookeeper__java__430\"></a>24. Zookeeper 的 java 客户端都有哪些？</h2>\r\n<p>java 客户端：zk 自带的 zkclient 及 Apache 开源的 Curator。</p>\r\n<h2><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"25_chubby__zookeeper__436\"></a>25. chubby 是什么，和 zookeeper 比你怎么看？</h2>\r\n<p>chubby 是 google 的，完全实现 paxos 算法，不开源。zookeeper 是 chubby的开源实现，使用 zab 协议，paxos 算法的变种。</p>\r\n<h2><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"26__zookeeper__442\"></a>26. 说几个 zookeeper 常用的命令。</h2>\r\n<p>常用命令：ls get set create delete 等。</p>\r\n<h2><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"27_ZAB__Paxos__448\"></a>27. ZAB 和 Paxos 算法的联系与区别？</h2>\r\n<p>相同点：</p>\r\n<p>（1）两者都存在一个类似于 Leader 进程的角色，由其负责协调多个 Follower 进程的运行</p>\r\n<p>（2）Leader 进程都会等待超过半数的 Follower 做出正确的反馈后，才会将一个提案进行提交</p>\r\n<p>（3）ZAB 协议中，每个 Proposal 中都包含一个 epoch 值来代表当前的 Leader周期，Paxos 中名字为 Ballot</p>\r\n<p>不同点：</p>\r\n<p>ZAB 用来构建高可用的分布式数据主备系统（Zookeeper），Paxos 是用来构建分布式一致性状态机系统。</p>\r\n<h2><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"28_Zookeeper__464\"></a>28. Zookeeper 的典型应用场景</h2>\r\n<p>Zookeeper 是一个典型的发布/订阅模式的分布式数据管理与协调框架，开发人员可以使用它来进行分布式数据的发布和订阅。</p>\r\n<p>通过对 Zookeeper 中丰富的数据节点进行交叉使用，配合 Watcher 事件通知机制，可以非常方便的构建一系列分布式应用中年都会涉及的核心功能，如：</p>\r\n<p>（1）数据发布/订阅</p>\r\n<p>（2）负载均衡</p>\r\n<p>（3）命名服务</p>\r\n<p>（4）分布式协调/通知</p>\r\n<p>（5）集群管理</p>\r\n<p>（6）Master 选举</p>\r\n<p>（7）分布式锁</p>\r\n<p>（8）分布式队列</p>\r\n<p><strong>数据发布/订阅</strong></p>\r\n<p>介绍</p>\r\n<p>数据发布/订阅系统，即所谓的配置中心，顾名思义就是发布者发布数据供订阅者进行数据订阅。</p>\r\n<p>目的</p>\r\n<p>动态获取数据（配置信息）</p>\r\n<p>实现数据（配置信息）的集中式管理和数据的动态更新</p>\r\n<p>设计模式</p>\r\n<p>Push 模式</p>\r\n<p>Pull 模式</p>\r\n<p>数据（配置信息）特性</p>\r\n<p>（1）数据量通常比较小</p>\r\n<p>（2）数据内容在运行时会发生动态更新</p>\r\n<p>（3）集群中各机器共享，配置一致</p>\r\n<p>如：机器列表信息、运行时开关配置、数据库配置信息等</p>\r\n<p>基于 Zookeeper 的实现方式</p>\r\n<p>· 数据存储：将数据（配置信息）存储到 Zookeeper 上的一个数据节点</p>\r\n<p>· 数据获取：应用在启动初始化节点从 Zookeeper 数据节点读取数据，并在该节点上注册一个数据变更 Watcher</p>\r\n<p>· 数据变更：当变更数据时，更新 Zookeeper 对应节点数据，Zookeeper会将数据变更通知发到各客户端，客户端接到通知后重新读取变更后的数据即可。</p>\r\n<p><strong>负载均衡</strong></p>\r\n<p>zk 的命名服务</p>\r\n<p>命名服务是指通过指定的名字来获取资源或者服务的地址，利用 zk 创建一个全局的路径，这个路径就可以作为一个名字，指向集群中的集群，提供的服务的地址，或者一个远程的对象等等。</p>\r\n<p><strong>分布式通知和协调</strong></p>\r\n<p>对于系统调度来说：操作人员发送通知实际是通过控制台改变某个节点的状态，然后 zk 将这些变化发送给注册了这个节点的 watcher 的所有客户端。</p>\r\n<p>对于执行情况汇报：每个工作进程都在某个目录下创建一个临时节点。并携带工作的进度数据，这样汇总的进程可以监控目录子节点的变化获得工作进度的实时的全局情况。</p>\r\n<p><strong>zk 的命名服务（文件系统）</strong></p>\r\n<p>命名服务是指通过指定的名字来获取资源或者服务的地址，利用 zk 创建一个全局的路径，即是唯一的路径，这个路径就可以作为一个名字，指向集群中的集群，提供的服务的地址，或者一个远程的对象等等。</p>\r\n<p><strong>zk 的配置管理（文件系统、通知机制）</strong></p>\r\n<p>程序分布式的部署在不同的机器上，将程序的配置信息放在 zk 的 znode 下，当有配置发生改变时，也就是 znode 发生变化时，可以通过改变 zk 中某个目录节点的内容，利用 watcher 通知给各个客户端，从而更改配置。</p>\r\n<p><strong>Zookeeper 集群管理（文件系统、通知机制）</strong></p>\r\n<p>所谓集群管理无在乎两点：是否有机器退出和加入、选举 master。</p>\r\n<p>对于第一点，所有机器约定在父目录下创建临时目录节点，然后监听父目录节点</p>\r\n<p>的子节点变化消息。一旦有机器挂掉，该机器与 zookeeper 的连接断开，其所创建的临时目录节点被删除，所有其他机器都收到通知：某个兄弟目录被删除，于是，所有人都知道：它上船了。</p>\r\n<p>新机器加入也是类似，所有机器收到通知：新兄弟目录加入，highcount 又有了，对于第二点，我们稍微改变一下，所有机器创建临时顺序编号目录节点，每次选取编号最小的机器作为 master 就好。</p>\r\n<p><strong>Zookeeper 分布式锁（文件系统、通知机制）</strong></p>\r\n<p>有了 zookeeper 的一致性文件系统，锁的问题变得容易。锁服务可以分为两类，一个是保持独占，另一个是控制时序。</p>\r\n<p>对于第一类，我们将 zookeeper 上的一个 znode 看作是一把锁，通过 createznode的方式来实现。所有客户端都去创建 /distribute_lock 节点，最终成功创建的那个客户端也即拥有了这把锁。用完删除掉自己创建的 distribute_lock 节点就释放出锁。</p>\r\n<p>对于第二类， /distribute_lock 已经预先存在，所有客户端在它下面创建临时顺序编号目录节点，和选 master 一样，编号最小的获得锁，用完删除，依次方便。</p>\r\n<p>Zookeeper 队列管理（文件系统、通知机制）</p>\r\n<p>两种类型的队列：</p>\r\n<p>（1）同步队列，当一个队列的成员都聚齐时，这个队列才可用，否则一直等待所有成员到达。</p>\r\n<p>（2）队列按照 FIFO 方式进行入队和出队操作。</p>\r\n<p>第一类，在约定目录下创建临时目录节点，监听节点数目是否是我们要求的数目。</p>\r\n<p>第二类，和分布式锁服务中的控制时序场景基本原理一致，入列有编号，出列按编号。在特定的目录下创建 PERSISTENT_SEQUENTIAL 节点，创建成功时Watcher 通知等待的队列，队列删除序列号最小的节点用以消费。此场景下Zookeeper 的 znode 用于消息存储，znode 存储的数据就是消息队列中的消息内容，SEQUENTIAL 序列号就是消息的编号，按序取出即可。由于创建的节点是持久化的，所以不必担心队列消息的丢失问题。</p>\r\n<h2><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"29_Zookeeper__574\"></a>29. Zookeeper 都有哪些功能？</h2>\r\n<ol><li> <p>集群管理：监控节点存活状态、运行请求等；</p> </li><li> <p>主节点选举：主节点挂掉了之后可以从备用的节点开始新一轮选主，主节点选举说的就是这个选举的过程，使用 Zookeeper 可以协助完成这个过程；</p> </li><li> <p>分布式锁：Zookeeper 提供两种锁：独占锁、共享锁。独占锁即一次只能有一个线程使用资源，共享锁是读锁共享，读写互斥，即可以有多线线程同时读同一个资源，如果要使用写锁也只能有一个线程使用。Zookeeper 可以对分布式锁进行控制。</p> </li><li> <p>命名服务：在分布式系统中，通过使用命名服务，客户端应用能够根据指定名字来获取资源或服务的地址，提供者等信息。</p> </li></ol>\r\n<h2><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"30__Zookeeper__588\"></a>30. 说一下 Zookeeper 的通知机制？</h2>\r\n<p>client 端会对某个 znode 建立一个 watcher 事件，当该 znode 发生变化时，这些 client 会收到 zk 的通知，然后 client 可以根据 znode 变化来做出业务上的改变等。</p>\r\n<h2><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"31_Zookeeper__Dubbo__594\"></a>31. Zookeeper 和 Dubbo 的关系？</h2>\r\n<p>Zookeeper的作用：</p>\r\n<p>zookeeper用来注册服务和进行负载均衡，哪一个服务由哪一个机器来提供必需让调用者知道，简单来说就是ip地址和服务名称的对应关系。当然也可以通过硬编码的方式把这种对应关系在调用方业务代码中实现，但是如果提供服务的机器挂掉调用者无法知晓，如果不更改代码会继续请求挂掉的机器提供服务。zookeeper通过心跳机制可以检测挂掉的机器并将挂掉机器的ip和服务对应关系从列表中删除。至于支持高并发，简单来说就是横向扩展，在不更改代码的情况通过添加机器来提高运算能力。通过添加新的机器向zookeeper注册服务，服务的提供者多了能服务的客户就多了。</p>\r\n<p>dubbo：</p>\r\n<p>是管理中间层的工具，在业务层到数据仓库间有非常多服务的接入和服务提供者需要调度，dubbo提供一个框架解决这个问题。<br> 注意这里的dubbo只是一个框架，至于你架子上放什么是完全取决于你的，就像一个汽车骨架，你需要配你的轮子引擎。这个框架中要完成调度必须要有一个分布式的注册中心，储存所有服务的元数据，你可以用zk，也可以用别的，只是大家都用zk。</p>\r\n<p>zookeeper和dubbo的关系：</p>\r\n<p>Dubbo 的将注册中心进行抽象，它可以外接不同的存储媒介给注册中心提供服务，有 ZooKeeper，Memcached，Redis 等。</p>\r\n<p>引入了 ZooKeeper 作为存储媒介，也就把 ZooKeeper 的特性引进来。首先是负载均衡，单注册中心的承载能力是有限的，在流量达到一定程度的时 候就需要分流，负载均衡就是为了分流而存在的，一个 ZooKeeper 群配合相应的 Web 应用就可以很容易达到负载均衡；资源同步，单单有负载均衡还不 够，节点之间的数据和资源需要同步，ZooKeeper 集群就天然具备有这样的功能；命名服务，将树状结构用于维护全局的服务地址列表，服务提供者在启动 的时候，向 ZooKeeper 上的指定节点 /dubbo/${serviceName}/providers 目录下写入自己的 URL 地址，这个操作就完成了服务的发布。 其他特性还有 Mast 选举，分布式锁等。</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8xMC8zMS8xNmUyMTliYzc3MDA5OGRm?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_zookeeper.vue?vue&type=template&id=60ee7f45\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>Netty面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n<path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n</svg>\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"1Netty__37\"></a>1.Netty 是什么？</h2>\r\n<p>Netty是 一个异步事件驱动的网络应用程序框架，用于快速开发可维护的高性能协议服务器和客户端。Netty是基于nio的，它封装了jdk的nio，让我们使用起来更加方法灵活。</p>\r\n<h2><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"2Netty__43\"></a>2.Netty 的特点是什么？</h2>\r\n<ul><li>高并发：Netty 是一款基于 NIO（Nonblocking IO，非阻塞IO）开发的网络通信框架，对比于 BIO（Blocking I/O，阻塞IO），他的并发性能得到了很大提高。</li><li>传输快：Netty 的传输依赖于零拷贝特性，尽量减少不必要的内存拷贝，实现了更高效率的传输。</li><li>封装好：Netty 封装了 NIO 操作的很多细节，提供了易于使用调用接口。</li></ul>\r\n<h2><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"3Netty__51\"></a>3.Netty 的优势有哪些？</h2>\r\n<ul><li>使用简单：封装了 NIO 的很多细节，使用更简单。</li><li>功能强大：预置了多种编解码功能，支持多种主流协议。</li><li>定制能力强：可以通过 ChannelHandler 对通信框架进行灵活地扩展。</li><li>性能高：通过与其他业界主流的 NIO 框架对比，Netty 的综合性能最优。</li><li>稳定：Netty 修复了已经发现的所有 NIO 的 bug，让开发人员可以专注于业务本身。</li><li>社区活跃：Netty 是活跃的开源项目，版本迭代周期短，bug 修复速度快。</li></ul>\r\n<h2><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"4Netty__62\"></a>4.Netty 的应用场景有哪些？</h2>\r\n<p>典型的应用有：阿里分布式服务框架 Dubbo，默认使用 Netty 作为基础通信组件，还有 RocketMQ 也是使用 Netty 作为通讯的基础。</p>\r\n<h2><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"5Netty__68\"></a>5.Netty 高性能表现在哪些方面？</h2>\r\n<ul><li>IO 线程模型：同步非阻塞，用最少的资源做更多的事。</li><li>内存零拷贝：尽量减少不必要的内存拷贝，实现了更高效率的传输。</li><li>内存池设计：申请的内存可以重用，主要指直接内存。内部实现是用一颗二叉查找树管理内存分配情况。</li><li>串形化处理读写：避免使用锁带来的性能开销。</li><li>高性能序列化协议：支持 protobuf 等高性能序列化协议。</li></ul>\r\n<h2><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"6BIONIOAIO_78\"></a>6.BIO、NIO和AIO的区别？</h2>\r\n<p>BIO：一个连接一个线程，客户端有连接请求时服务器端就需要启动一个线程进行处理。线程开销大。<br> 伪异步IO：将请求连接放入线程池，一对多，但线程还是很宝贵的资源。</p>\r\n<p>NIO：一个请求一个线程，但客户端发送的连接请求都会注册到多路复用器上，多路复用器轮询到连接有I/O请求时才启动一个线程进行处理。</p>\r\n<p>AIO：一个有效请求一个线程，客户端的I/O请求都是由OS先完成了再通知服务器应用去启动线程进行处理，</p>\r\n<p>BIO是面向流的，NIO是面向缓冲区的；BIO的各种流是阻塞的。而NIO是非阻塞的；BIO的Stream是单向的，而NIO的channel是双向的。</p>\r\n<p>NIO的特点：事件驱动模型、单线程处理多任务、非阻塞I/O，I/O读写不再阻塞，而是返回0、基于block的传输比基于流的传输更高效、更高级的IO函数zero-copy、IO多路复用大大提高了Java网络应用的可伸缩性和实用性。基于Reactor线程模型。</p>\r\n<p>在Reactor模式中，事件分发器等待某个事件或者可应用或个操作的状态发生，事件分发器就把这个事件传给事先注册的事件处理函数或者回调函数，由后者来做实际的读写操作。如在Reactor中实现读：注册读就绪事件和相应的事件处理器、事件分发器等待事件、事件到来，激活分发器，分发器调用事件对应的处理器、事件处理器完成实际的读操作，处理读到的数据，注册新的事件，然后返还控制权。</p>\r\n<h2><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"7NIO_95\"></a>7.NIO的组成？</h2>\r\n<p>Buffer：与Channel进行交互，数据是从Channel读入缓冲区，从缓冲区写入Channel中的</p>\r\n<p>flip方法 ： 反转此缓冲区，将position给limit，然后将position置为0，其实就是切换读写模式</p>\r\n<p>clear方法 ：清除此缓冲区，将position置为0，把capacity的值给limit。</p>\r\n<p>rewind方法 ： 重绕此缓冲区，将position置为0</p>\r\n<p>DirectByteBuffer可减少一次系统空间到用户空间的拷贝。但Buffer创建和销毁的成本更高，不可控，通常会用内存池来提高性能。直接缓冲区主要分配给那些易受基础系统的本机I/O 操作影响的大型、持久的缓冲区。如果数据量比较小的中小应用情况下，可以考虑使用heapBuffer，由JVM进行管理。</p>\r\n<p>Channel：表示 IO 源与目标打开的连接，是双向的，但不能直接访问数据，只能与Buffer 进行交互。通过源码可知，FileChannel的read方法和write方法都导致数据复制了两次！</p>\r\n<p>Selector可使一个单独的线程管理多个Channel，open方法可创建Selector，register方法向多路复用器器注册通道，可以监听的事件类型：读、写、连接、accept。注册事件后会产生一个SelectionKey：它表示SelectableChannel 和Selector 之间的注册关系，wakeup方法：使尚未返回的第一个选择操作立即返回，唤醒的</p>\r\n<p>原因是：注册了新的channel或者事件；channel关闭，取消注册；优先级更高的事件触发（如定时器事件），希望及时处理。</p>\r\n<p>Selector在Linux的实现类是EPollSelectorImpl，委托给EPollArrayWrapper实现，其中三个native方法是对epoll的封装，而EPollSelectorImpl. implRegister方法，通过调用epoll_ctl向epoll实例中注册事件，还将注册的文件描述符(fd)与SelectionKey的对应关系添加到fdToKey中，这个map维护了文件描述符与SelectionKey的映射。</p>\r\n<p>fdToKey有时会变得非常大，因为注册到Selector上的Channel非常多（百万连接）；过期或失效的Channel没有及时关闭。fdToKey总是串行读取的，而读取是在select方法中进行的，该方法是非线程安全的。</p>\r\n<p>Pipe：两个线程之间的单向数据连接，数据会被写到sink通道，从source通道读取</p>\r\n<p>NIO的服务端建立过程：Selector.open()：打开一个Selector；ServerSocketChannel.open()：创建服务端的Channel；bind()：绑定到某个端口上。并配置非阻塞模式；register()：注册Channel和关注的事件到Selector上；select()轮询拿到已经就绪的事件</p>\r\n<h2><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"8Netty_123\"></a>8.Netty的线程模型？</h2>\r\n<p>Netty通过Reactor模型基于多路复用器接收并处理用户请求，内部实现了两个线程池，boss线程池和work线程池，其中boss线程池的线程负责处理请求的accept事件，当接收到accept事件的请求时，把对应的socket封装到一个NioSocketChannel中，并交给work线程池，其中work线程池负责请求的read和write事件，由对应的Handler处理。</p>\r\n<p>单线程模型：所有I/O操作都由一个线程完成，即多路复用、事件分发和处理都是在一个Reactor线程上完成的。既要接收客户端的连接请求,向服务端发起连接，又要发送/读取请求或应答/响应消息。一个NIO 线程同时处理成百上千的链路，性能上无法支撑，速度慢，若线程进入死循环，整个程序不可用，对于高负载、大并发的应用场景不合适。</p>\r\n<p>多线程模型：有一个NIO 线程（Acceptor） 只负责监听服务端，接收客户端的TCP 连接请求；NIO 线程池负责网络IO 的操作，即消息的读取、解码、编码和发送；1 个NIO 线程可以同时处理N 条链路，但是1 个链路只对应1 个NIO 线程，这是为了防止发生并发操作问题。但在并发百万客户端连接或需要安全认证时，一个Acceptor 线程可能会存在性能不足问题。</p>\r\n<p>主从多线程模型：Acceptor 线程用于绑定监听端口，接收客户端连接，将SocketChannel 从主线程池的Reactor 线程的多路复用器上移除，重新注册到Sub 线程池的线程上，用于处理I/O 的读写等操作，从而保证mainReactor只负责接入认证、握手等操作；</p>\r\n<h2><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"9TCP__135\"></a>9.TCP 粘包/拆包的原因及解决方法？</h2>\r\n<p>TCP是以流的方式来处理数据，一个完整的包可能会被TCP拆分成多个包进行发送，也可能把小的封装成一个大的数据包发送。</p>\r\n<p>TCP粘包/分包的原因：</p>\r\n<p>应用程序写入的字节大小大于套接字发送缓冲区的大小，会发生拆包现象，而应用程序写入数据小于套接字缓冲区大小，网卡将应用多次写入的数据发送到网络上，这将会发生粘包现象；</p>\r\n<p>进行MSS大小的TCP分段，当TCP报文长度-TCP头部长度&gt;MSS的时候将发生拆包<br> 以太网帧的payload（净荷）大于MTU（1500字节）进行ip分片。</p>\r\n<p>解决方法</p>\r\n<p>消息定长：FixedLengthFrameDecoder类</p>\r\n<p>包尾增加特殊字符分割：</p>\r\n<ul><li>行分隔符类：LineBasedFrameDecoder</li><li>或自定义分隔符类 ：DelimiterBasedFrameDecoder</li></ul>\r\n<p>将消息分为消息头和消息体：LengthFieldBasedFrameDecoder类。分为有头部的拆包与粘包、长度字段在前且有头部的拆包与粘包、多扩展头部的拆包与粘包。</p>\r\n<h2><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"10_Netty__159\"></a>10.什么是 Netty 的零拷贝？</h2>\r\n<p>Netty 的零拷贝主要包含三个方面：</p>\r\n<ul><li>Netty 的接收和发送 ByteBuffer 采用 DIRECT BUFFERS，使用堆外直接内存进行 Socket 读写，不需要进行字节缓冲区的二次拷贝。如果使用传统的堆内存（HEAP BUFFERS）进行 Socket 读写，JVM 会将堆内存 Buffer 拷贝一份到直接内存中，然后才写入 Socket 中。相比于堆外直接内存，消息在发送过程中多了一次缓冲区的内存拷贝。</li><li>Netty 提供了组合 Buffer 对象，可以聚合多个 ByteBuffer 对象，用户可以像操作一个 Buffer 那样方便的对组合 Buffer 进行操作，避免了传统通过内存拷贝的方式将几个小 Buffer 合并成一个大的 Buffer。</li><li>Netty 的文件传输采用了 transferTo 方法，它可以直接将文件缓冲区的数据发送到目标 Channel，避免了传统通过循环 write 方式导致的内存拷贝问题。</li></ul>\r\n<h2><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"11Netty__169\"></a>11.Netty 中有哪种重要组件？</h2>\r\n<ul><li>Channel：Netty 网络操作抽象类，它除了包括基本的 I/O 操作，如 bind、connect、read、write 等。</li><li>EventLoop：主要是配合 Channel 处理 I/O 操作，用来处理连接的生命周期中所发生的事情。</li><li>ChannelFuture：Netty 框架中所有的 I/O 操作都为异步的，因此我们需要 ChannelFuture 的 addListener()注册一个 ChannelFutureListener 监听事件，当操作执行成功或者失败时，监听就会自动触发返回结果。</li><li>ChannelHandler：充当了所有处理入站和出站数据的逻辑容器。ChannelHandler 主要用来处理各种事件，这里的事件很广泛，比如可以是连接、数据接收、异常、数据转换等。</li><li>ChannelPipeline：为 ChannelHandler 链提供了容器，当 channel 创建时，就会被自动分配到它专属的 ChannelPipeline，这个关联是永久性的。</li></ul>\r\n<h2><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"12Netty__179\"></a>12.Netty 发送消息有几种方式？</h2>\r\n<p>Netty 有两种发送消息的方式：</p>\r\n<ul><li>直接写入 Channel 中，消息从 ChannelPipeline 当中尾部开始移动；</li><li>写入和 ChannelHandler 绑定的 ChannelHandlerContext 中，消息从 ChannelPipeline 中的下一个 ChannelHandler 中移动。</li></ul>\r\n<h2><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"13_Netty__188\"></a>13.默认情况 Netty 起多少线程？何时启动？</h2>\r\n<p>Netty 默认是 CPU 处理器数的两倍，bind 完之后启动。</p>\r\n<h2><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"14_194\"></a>14.了解哪几种序列化协议？</h2>\r\n<p>序列化（编码）是将对象序列化为二进制形式（字节数组），主要用于网络传输、数据持久化等；而反序列化（解码）则是将从网络、磁盘等读取的字节数组还原成原始对象，主要用于网络传输对象的解码，以便完成远程调用。</p>\r\n<p>影响序列化性能的关键因素：序列化后的码流大小（网络带宽的占用）、序列化的性能（CPU资源占用）；是否支持跨语言（异构系统的对接和开发语言切换）。</p>\r\n<p>Java默认提供的序列化：无法跨语言、序列化后的码流太大、序列化的性能差</p>\r\n<p>XML，优点：人机可读性好，可指定元素或特性的名称。缺点：序列化数据只包含数据本身以及类的结构，不包括类型标识和程序集信息；只能序列化公共属性和字段；不能序列化方法；文件庞大，文件格式复杂，传输占带宽。适用场景：当做配置文件存储数据，实时数据转换。</p>\r\n<p>JSON，是一种轻量级的数据交换格式，优点：兼容性高、数据格式比较简单，易于读写、序列化后数据较小，可扩展性好，兼容性好、与XML相比，其协议比较简单，解析速度比较快。缺点：数据的描述性比XML差、不适合性能要求为ms级别的情况、额外空间开销比较大。适用场景（可替代ＸＭＬ）：跨防火墙访问、可调式性要求高、基于Web browser的Ajax请求、传输数据量相对小，实时性要求相对低（例如秒级别）的服务。</p>\r\n<p>Fastjson，采用一种“假定有序快速匹配”的算法。优点：接口简单易用、目前java语言中最快的json库。缺点：过于注重快，而偏离了“标准”及功能性、代码质量不高，文档不全。适用场景：协议交互、Web输出、Android客户端</p>\r\n<p>Thrift，不仅是序列化协议，还是一个RPC框架。优点：序列化后的体积小, 速度快、支持多种语言和丰富的数据类型、对于数据字段的增删具有较强的兼容性、支持二进制压缩编码。缺点：使用者较少、跨防火墙访问时，不安全、不具有可读性，调试代码时相对困难、不能与其他传输层协议共同使用（例如HTTP）、无法支持向持久层直接读写数据，即不适合做数据持久化序列化协议。适用场景：分布式系统的RPC解决方案</p>\r\n<p>Avro，Hadoop的一个子项目，解决了JSON的冗长和没有IDL的问题。优点：支持丰富的数据类型、简单的动态语言结合功能、具有自我描述属性、提高了数据解析速度、快速可压缩的二进制数据形式、可以实现远程过程调用RPC、支持跨编程语言实现。缺点：对于习惯于静态类型语言的用户不直观。适用场景：在Hadoop中做Hive、Pig和MapReduce的持久化数据格式。</p>\r\n<p>Protobuf，将数据结构以.proto文件进行描述，通过代码生成工具可以生成对应数据结构的POJO对象和Protobuf相关的方法和属性。优点：序列化后码流小，性能高、结构化数据存储格式（XML JSON等）、通过标识字段的顺序，可以实现协议的前向兼容、结构化的文档更容易管理和维护。缺点：需要依赖于工具生成代码、支持的语言相对较少，官方只支持Java 、C++ 、python。适用场景：对性能要求高的RPC调用、具有良好的跨防火墙的访问属性、适合应用层对象的持久化</p>\r\n<p>其它</p>\r\n<p>protostuff 基于protobuf协议，但不需要配置proto文件，直接导包即可<br> Jboss marshaling 可以直接序列化java类， 无须实java.io.Serializable接口<br> Message pack 一个高效的二进制序列化格式<br> Hessian 采用二进制协议的轻量级remoting onhttp工具<br> kryo 基于protobuf协议，只支持java语言,需要注册（Registration），然后序列化（Output），反序列化（Input）</p>\r\n<h2><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"15_224\"></a>15.如何选择序列化协议？</h2>\r\n<p>具体场景</p>\r\n<p>对于公司间的系统调用，如果性能要求在100ms以上的服务，基于XML的SOAP协议是一个值得考虑的方案。<br> 基于Web browser的Ajax，以及Mobile app与服务端之间的通讯，JSON协议是首选。对于性能要求不太高，或者以动态类型语言为主，或者传输数据载荷很小的的运用场景，JSON也是非常不错的选择。<br> 对于调试环境比较恶劣的场景，采用JSON或XML能够极大的提高调试效率，降低系统开发成本。<br> 当对性能和简洁性有极高要求的场景，Protobuf，Thrift，Avro之间具有一定的竞争关系。<br> 对于T级别的数据的持久化应用场景，Protobuf和Avro是首要选择。如果持久化后的数据存储在hadoop子项目里，Avro会是更好的选择。</p>\r\n<p>对于持久层非Hadoop项目，以静态类型语言为主的应用场景，Protobuf会更符合静态类型语言工程师的开发习惯。由于Avro的设计理念偏向于动态类型语言，对于动态语言为主的应用场景，Avro是更好的选择。<br> 如果需要提供一个完整的RPC解决方案，Thrift是一个好的选择。<br> 如果序列化之后需要支持不同的传输层协议，或者需要跨防火墙访问的高性能场景，Protobuf可以优先考虑。<br> protobuf的数据类型有多种：bool、double、float、int32、int64、string、bytes、enum、message。protobuf的限定符：required: 必须赋值，不能为空、optional:字段可以赋值，也可以不赋值、repeated: 该字段可以重复任意次数（包括0次）、枚举；只能用指定的常量集中的一个值作为其值；</p>\r\n<p>protobuf的基本规则：每个消息中必须至少留有一个required类型的字段、包含0个或多个optional类型的字段；repeated表示的字段可以包含0个或多个数据；[1,15]之内的标识号在编码的时候会占用一个字节（常用），[16,2047]之内的标识号则占用2个字节，标识号一定不能重复、使用消息类型，也可以将消息嵌套任意多层，可用嵌套消息类型来代替组。</p>\r\n<p>protobuf的消息升级原则：不要更改任何已有的字段的数值标识；不能移除已经存在的required字段，optional和repeated类型的字段可以被移除，但要保留标号不能被重用。新添加的字段必须是optional或repeated。因为旧版本程序无法读取或写入新增的required限定符的字段。</p>\r\n<p>编译器为每一个消息类型生成了一个.java文件，以及一个特殊的Builder类（该类是用来创建消息类接口的）。如：UserProto.User.Builder builder = UserProto.User.newBuilder();builder.build()；</p>\r\n<p>Netty中的使用：ProtobufVarint32FrameDecoder 是用于处理半包消息的解码类；ProtobufDecoder(UserProto.User.getDefaultInstance())这是创建的UserProto.java文件中的解码类；ProtobufVarint32LengthFieldPrepender 对protobuf协议的消息头上加上一个长度为32的整形字段，用于标志这个消息的长度的类；ProtobufEncoder 是编码类</p>\r\n<p>将StringBuilder转换为ByteBuf类型：copiedBuffer()方法</p>\r\n<h2><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"16Netty__251\"></a>16.Netty 支持哪些心跳类型设置？</h2>\r\n<ul><li>readerIdleTime：为读超时时间（即测试端一定时间内未接受到被测试端消息）。</li><li>writerIdleTime：为写超时时间（即测试端一定时间内向被测试端发送消息）。</li><li>allIdleTime：所有类型的超时时间。</li></ul>\r\n<h2><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"17Netty__Tomcat__259\"></a>17.Netty 和 Tomcat 的区别？</h2>\r\n<ul><li>作用不同：Tomcat 是 Servlet 容器，可以视为 Web 服务器，而 Netty 是异步事件驱动的网络应用程序框架和工具用于简化网络编程，例如TCP和UDP套接字服务器。</li><li>协议不同：Tomcat 是基于 http 协议的 Web 服务器，而 Netty 能通过编程自定义各种协议，因为 Netty 本身自己能编码/解码字节流，所有 Netty 可以实现，HTTP 服务器、FTP 服务器、UDP 服务器、RPC 服务器、WebSocket 服务器、Redis 的 Proxy 服务器、MySQL 的 Proxy 服务器等等。</li></ul>\r\n<h2><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"18NIOEventLoopGroup_266\"></a>18.NIOEventLoopGroup源码？</h2>\r\n<p>NioEventLoopGroup(其实是MultithreadEventExecutorGroup) 内部维护一个类型为 EventExecutor children [], 默认大小是处理器核数 * 2, 这样就构成了一个线程池，初始化EventExecutor时NioEventLoopGroup重载newChild方法，所以children元素的实际类型为NioEventLoop。</p>\r\n<p>线程启动时调用SingleThreadEventExecutor的构造方法，执行NioEventLoop类的run方法，首先会调用hasTasks()方法判断当前taskQueue是否有元素。如果taskQueue中有元素，执行 selectNow() 方法，最终执行selector.selectNow()，该方法会立即返回。如果taskQueue没有元素，执行 select(oldWakenUp) 方法</p>\r\n<p>select ( oldWakenUp) 方法解决了 Nio 中的 bug，selectCnt 用来记录selector.select方法的执行次数和标识是否执行过selector.selectNow()，若触发了epoll的空轮询bug，则会反复执行selector.select(timeoutMillis)，变量selectCnt 会逐渐变大，当selectCnt 达到阈值（默认512），则执行rebuildSelector方法，进行selector重建，解决cpu占用100%的bug。</p>\r\n<p>rebuildSelector方法先通过openSelector方法创建一个新的selector。然后将old selector的selectionKey执行cancel。最后将old selector的channel重新注册到新的selector中。rebuild后，需要重新执行方法selectNow，检查是否有已ready的selectionKey。</p>\r\n<p>接下来调用processSelectedKeys 方法（处理I/O任务），当selectedKeys != null时，调用processSelectedKeysOptimized方法，迭代 selectedKeys 获取就绪的 IO 事件的selectkey存放在数组selectedKeys中, 然后为每个事件都调用 processSelectedKey 来处理它，processSelectedKey 中分别处理OP_READ；OP_WRITE；OP_CONNECT事件。</p>\r\n<p>最后调用runAllTasks方法（非IO任务），该方法首先会调用fetchFromScheduledTaskQueue方法，把scheduledTaskQueue中已经超过延迟执行时间的任务移到taskQueue中等待被执行，然后依次从taskQueue中取任务执行，每执行64个任务，进行耗时检查，如果已执行时间超过预先设定的执行时间，则停止执行非IO任务，避免非IO任务太多，影响IO任务的执行。</p>\r\n<p>每个NioEventLoop对应一个线程和一个Selector，NioServerSocketChannel会主动注册到某一个NioEventLoop的Selector上，NioEventLoop负责事件轮询。</p>\r\n<p>Outbound 事件都是请求事件, 发起者是 Channel，处理者是 unsafe，通过 Outbound 事件进行通知，传播方向是 tail到head。Inbound 事件发起者是 unsafe，事件的处理者是 Channel, 是通知事件，传播方向是从头到尾。</p>\r\n<p>内存管理机制，首先会预申请一大块内存Arena，Arena由许多Chunk组成，而每个Chunk默认由2048个page组成。Chunk通过AVL树的形式组织Page，每个叶子节点表示一个Page，而中间节点表示内存区域，节点自己记录它在整个Arena中的偏移地址。当区域被分配出去后，中间节点上的标记位会被标记，这样就表示这个中间节点以下的所有节点都已被分配了。大于8k的内存分配在poolChunkList中，而PoolSubpage用于分配小于8k的内存，它会把一个page分割成多段，进行内存分配。</p>\r\n<p>ByteBuf的特点：支持自动扩容（4M），保证put方法不会抛出异常、通过内置的复合缓冲类型，实现零拷贝（zero-copy）；不需要调用flip()来切换读/写模式，读取和写入索引分开；方法链；引用计数基于AtomicIntegerFieldUpdater用于内存回收；PooledByteBuf采用二叉树来实现一个内存池，集中管理内存的分配和释放，不用每次使用都新建一个缓冲区对象。UnpooledHeapByteBuf每次都会新建一个缓冲区对象。</p>\r\n<h2><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"Netty_291\"></a>Netty简介</h2>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC8xMS8xLzE2NmNjYmJjZmJiZTlmNjY?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>Netty是 一个异步事件驱动的网络应用程序框架，用于快速开发可维护的高性能协议服务器和客户端。</p>\r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"JDKNIO_299\"></a>JDK原生NIO程序的问题</h3>\r\n<p>JDK原生也有一套网络应用程序API，但是存在一系列问题，主要如下：</p>\r\n<ul><li>NIO的类库和API繁杂，使用麻烦，你需要熟练掌握Selector、ServerSocketChannel、SocketChannel、ByteBuffer等</li><li>需要具备其它的额外技能做铺垫，例如熟悉Java多线程编程，因为NIO编程涉及到Reactor模式，你必须对多线程和网路编程非常熟悉，才能编写出高质量的NIO程序</li><li>可靠性能力补齐，开发工作量和难度都非常大。例如客户端面临断连重连、网络闪断、半包读写、失败缓存、网络拥塞和异常码流的处理等等，NIO编程的特点是功能开发相对容易，但是可靠性能力补齐工作量和难度都非常大</li><li>JDK NIO的BUG，例如臭名昭著的epoll bug，它会导致Selector空轮询，最终导致CPU 100%。官方声称在JDK1.6版本的update18修复了该问题，但是直到JDK1.7版本该问题仍旧存在，只不过该bug发生概率降低了一些而已，它并没有被根本解决</li></ul>\r\n<h3><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"Netty_310\"></a>Netty的特点</h3>\r\n<p>Netty的对JDK自带的NIO的API进行封装，解决上述问题，主要特点有：</p>\r\n<ul><li>设计优雅 适用于各种传输类型的统一API - 阻塞和非阻塞Socket 基于灵活且可扩展的事件模型，可以清晰地分离关注点 高度可定制的线程模型 - 单线程，一个或多个线程池 真正的无连接数据报套接字支持（自3.1起）</li><li>使用方便 详细记录的Javadoc，用户指南和示例 没有其他依赖项，JDK 5（Netty 3.x）或6（Netty 4.x）就足够了</li><li>高性能 吞吐量更高，延迟更低 减少资源消耗 最小化不必要的内存复制</li><li>安全 完整的SSL / TLS和StartTLS支持</li><li>社区活跃，不断更新 社区活跃，版本迭代周期短，发现的BUG可以被及时修复，同时，更多的新功能会被加入</li></ul>\r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"Netty_322\"></a>Netty常见使用场景</h3>\r\n<p>Netty常见的使用场景如下：</p>\r\n<ul><li>互联网行业 在分布式系统中，各个节点之间需要远程服务调用，高性能的RPC框架必不可少，Netty作为异步高新能的通信框架,往往作为基础通信组件被这些RPC框架使用。 典型的应用有：阿里分布式服务框架Dubbo的RPC框架使用Dubbo协议进行节点间通信，Dubbo协议默认使用Netty作为基础通信组件，用于实现各进程节点之间的内部通信。</li><li>游戏行业 无论是手游服务端还是大型的网络游戏，Java语言得到了越来越广泛的应用。Netty作为高性能的基础通信组件，它本身提供了TCP/UDP和HTTP协议栈。 非常方便定制和开发私有协议栈，账号登录服务器，地图服务器之间可以方便的通过Netty进行高性能的通信</li><li>大数据领域 经典的Hadoop的高性能通信和序列化组件Avro的RPC框架，默认采用Netty进行跨界点通信，它的Netty Service基于Netty框架二次封装实现</li></ul>\r\n<p>有兴趣的读者可以了解一下目前有哪些开源项目使用了 Netty：<a href=\"https://netty.io/wiki/related-projects.html\">Related projects</a></p>\r\n<h2><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"Netty_334\"></a>Netty高性能设计</h2>\r\n<p>Netty作为异步事件驱动的网络，高性能之处主要来自于其I/O模型和线程处理模型，前者决定如何收发数据，后者决定如何处理数据</p>\r\n<h3><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"IO_338\"></a>I/O模型</h3>\r\n<p>用什么样的通道将数据发送给对方，BIO、NIO或者AIO，I/O模型在很大程度上决定了框架的性能</p>\r\n<h4><a id=\"IO_344\"></a>阻塞I/O</h4>\r\n<p>传统阻塞型I/O(BIO)可以用下图表示：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC8xMS8xLzE2NmNjYmJjZmI3MGMxMTE?x-oss-process=image/format,png\" alt=\"Blocking I/O\"></p>\r\n<p><strong>特点</strong></p>\r\n<ul><li>每个请求都需要独立的线程完成数据read，业务处理，数据write的完整操作</li></ul>\r\n<p><strong>问题</strong></p>\r\n<ul><li>当并发数较大时，需要创建大量线程来处理连接，系统资源占用较大</li><li>连接建立后，如果当前线程暂时没有数据可读，则线程就阻塞在read操作上，造成线程资源浪费</li></ul>\r\n<h4><a id=\"IO_363\"></a>I/O复用模型</h4>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC8xMS8xLzE2NmNjYmJjZmJhNTNjMGE?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>在I/O复用模型中，会用到select，这个函数也会使进程阻塞，但是和阻塞I/O所不同的的，这两个函数可以同时阻塞多个I/O操作，而且可以同时对多个读操作，多个写操作的I/O函数进行检测，直到有数据可读或可写时，才真正调用I/O操作函数</p>\r\n<p>Netty的非阻塞I/O的实现关键是基于I/O复用模型，这里用Selector对象表示：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC8xMS8xLzE2NmNjYmJjZmJhMzIxNjk?x-oss-process=image/format,png\" alt=\"Nonblocking I/O\"></p>\r\n<p>Netty的IO线程NioEventLoop由于聚合了多路复用器Selector，可以同时并发处理成百上千个客户端连接。当线程从某客户端Socket通道进行读写数据时，若没有数据可用时，该线程可以进行其他任务。线程通常将非阻塞 IO 的空闲时间用于在其他通道上执行 IO 操作，所以单独的线程可以管理多个输入和输出通道。</p>\r\n<p>由于读写操作都是非阻塞的，这就可以充分提升IO线程的运行效率，避免由于频繁I/O阻塞导致的线程挂起，一个I/O线程可以并发处理N个客户端连接和读写操作，这从根本上解决了传统同步阻塞I/O一连接一线程模型，架构的性能、弹性伸缩能力和可靠性都得到了极大的提升。</p>\r\n<h4><a id=\"buffer_383\"></a>基于buffer</h4>\r\n<p>传统的I/O是面向字节流或字符流的，以流式的方式顺序地从一个Stream 中读取一个或多个字节, 因此也就不能随意改变读取指针的位置。</p>\r\n<p>在NIO中, 抛弃了传统的 I/O流, 而是引入了Channel和Buffer的概念. 在NIO中, 只能从Channel中读取数据到Buffer中或将数据 Buffer 中写入到 Channel。</p>\r\n<p>基于buffer操作不像传统IO的顺序操作, NIO 中可以随意地读取任意位置的数据</p>\r\n<h3><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"_393\"></a>线程模型</h3>\r\n<p>数据报如何读取？读取之后的编解码在哪个线程进行，编解码后的消息如何派发，线程模型的不同，对性能的影响也非常大。</p>\r\n<h4><a id=\"_399\"></a>事件驱动模型</h4>\r\n<p>通常，我们设计一个事件处理模型的程序有两种思路</p>\r\n<ul><li>轮询方式 线程不断轮询访问相关事件发生源有没有发生事件，有发生事件就调用事件处理逻辑。</li><li>事件驱动方式 发生事件，主线程把事件放入事件队列，在另外线程不断循环消费事件列表中的事件，调用事件对应的处理逻辑处理事件。事件驱动方式也被称为消息通知方式，其实是设计模式中<strong>观察者模式</strong>的思路。</li></ul>\r\n<p>以GUI的逻辑处理为例，说明两种逻辑的不同：</p>\r\n<ul><li>轮询方式 线程不断轮询是否发生按钮点击事件，如果发生，调用处理逻辑</li><li>事件驱动方式 发生点击事件把事件放入事件队列，在另外线程消费的事件列表中的事件，根据事件类型调用相关事件处理逻辑</li></ul>\r\n<p>这里借用O’Reilly 大神关于<a href=\"http://www.oreilly.com/programming/free/software-architecture-patterns.csp\">事件驱动模型解释图</a></p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC8xMS8xLzE2NmNjYmJjZmJkZjM0Mzk?x-oss-process=image/format,png\" alt=\"事件驱动模型\"></p>\r\n<p>主要包括4个基本组件：</p>\r\n<ul><li>事件队列（event queue）：接收事件的入口，存储待处理事件</li><li>分发器（event mediator）：将不同的事件分发到不同的业务逻辑单元</li><li>事件通道（event channel）：分发器与处理器之间的联系渠道</li><li>事件处理器（event processor）：实现业务逻辑，处理完成后会发出事件，触发下一步操作</li></ul>\r\n<p>可以看出，相对传统轮询模式，事件驱动有如下优点：</p>\r\n<ul><li>可扩展性好，分布式的异步架构，事件处理器之间高度解耦，可以方便扩展事件处理逻辑</li><li>高性能，基于队列暂存事件，能方便并行异步处理事件</li></ul>\r\n<h4><a id=\"Reactor_431\"></a>Reactor线程模型</h4>\r\n<p>Reactor是反应堆的意思，Reactor模型，是指通过一个或多个输入同时传递给服务处理器的服务请求的<strong>事件驱动处理模式</strong>。 服务端程序处理传入多路请求，并将它们同步分派给请求对应的处理线程，Reactor模式也叫Dispatcher模式，即I/O多了复用统一监听事件，收到事件后分发(Dispatch给某进程)，是编写高性能网络服务器的必备技术之一。</p>\r\n<p>Reactor模型中有2个关键组成：</p>\r\n<ul><li>Reactor Reactor在一个单独的线程中运行，负责监听和分发事件，分发给适当的处理程序来对IO事件做出反应。 它就像公司的电话接线员，它接听来自客户的电话并将线路转移到适当的联系人</li><li>Handlers 处理程序执行I/O事件要完成的实际事件，类似于客户想要与之交谈的公司中的实际官员。Reactor通过调度适当的处理程序来响应I/O事件，处理程序执行非阻塞操作</li></ul>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC8xMS8xLzE2NmNjYmJkYzY1NGQ2ZGM?x-oss-process=image/format,png\" alt=\"Reactor模型\"></p>\r\n<p>取决于Reactor的数量和Hanndler线程数量的不同，Reactor模型有3个变种</p>\r\n<ul><li>单Reactor单线程</li><li>单Reactor多线程</li><li>主从Reactor多线程</li></ul>\r\n<p>可以这样理解，Reactor就是一个执行while (true) { selector.select(); …}循环的线程，会源源不断的产生新的事件，称作反应堆很贴切。</p>\r\n<p>篇幅关系，这里不再具体展开Reactor特性、优缺点比较，有兴趣的读者可以参考我之前另外一篇文章：<a href=\"https://www.jianshu.com/p/2965fca6bb8f\">《理解高性能网络模型》</a></p>\r\n<h4><a id=\"Netty_456\"></a>Netty线程模型</h4>\r\n<p>Netty主要<strong>基于主从Reactors多线程模型</strong>（如下图）做了一定的修改，其中主从Reactor多线程模型有多个Reactor：MainReactor和SubReactor：</p>\r\n<ul><li>MainReactor负责客户端的连接请求，并将请求转交给SubReactor</li><li>SubReactor负责相应通道的IO读写请求</li><li>非IO请求（具体逻辑处理）的任务则会直接写入队列，等待worker threads进行处理</li></ul>\r\n<p>这里引用Doug Lee大神的Reactor介绍：<a href=\"http://gee.cs.oswego.edu/dl/cpjslides/nio.pdf\">Scalable IO in Java</a>里面关于主从Reactor多线程模型的图</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC8xMS8xLzE2NmNjYmJkYzY5OGRkZDY?x-oss-process=image/format,png\" alt=\"主从Rreactor多线程模型\"></p>\r\n<p>特别说明的是： 虽然Netty的线程模型基于主从Reactor多线程，借用了MainReactor和SubReactor的结构，但是实际实现上，SubReactor和Worker线程在同一个线程池中：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">EventLoopGroup bossGroup <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioEventLoopGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nEventLoopGroup workerGroup <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioEventLoopGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nServerBootstrap server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerBootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span>bossGroup<span class=\"token punctuation\">,</span> workerGroup<span class=\"token punctuation\">)</span>\r\n <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span>NioServerSocketChannel<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre>\r\n<p>上面代码中的bossGroup 和workerGroup是Bootstrap构造方法中传入的两个对象，这两个group均是线程池</p>\r\n<ul><li>bossGroup线程池则只是在bind某个端口后，获得其中一个线程作为MainReactor，专门处理端口的accept事件，<strong>每个端口对应一个boss线程</strong></li><li>workerGroup线程池会被各个SubReactor和worker线程充分利用</li></ul>\r\n<h4><a id=\"_490\"></a>异步处理</h4>\r\n<p>异步的概念和同步相对。当一个异步过程调用发出后，调用者不能立刻得到结果。实际处理这个调用的部件在完成后，通过状态、通知和回调来通知调用者。</p>\r\n<p>Netty中的I/O操作是异步的，包括bind、write、connect等操作会简单的返回一个ChannelFuture，调用者并不能立刻获得结果，通过Future-Listener机制，用户可以方便的主动获取或者通过通知机制获得IO操作结果。</p>\r\n<p>当future对象刚刚创建时，处于非完成状态，调用者可以通过返回的ChannelFuture来获取操作执行的状态，注册监听函数来执行完成后的操，常见有如下操作：</p>\r\n<ul><li>通过isDone方法来判断当前操作是否完成</li><li>通过isSuccess方法来判断已完成的当前操作是否成功</li><li>通过getCause方法来获取已完成的当前操作失败的原因</li><li>通过isCancelled方法来判断已完成的当前操作是否被取消</li><li>通过addListener方法来注册监听器，当操作已完成(isDone方法返回完成)，将会通知指定的监听器；如果future对象已完成，则理解通知指定的监听器</li></ul>\r\n<p>例如下面的的代码中绑定端口是异步操作，当绑定操作处理完，将会调用相应的监听器处理逻辑</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">    serverBootstrap<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>future <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>future<span class=\"token punctuation\">.</span><span class=\"token function\">isSuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\": 端口[\"</span> <span class=\"token operator\">+</span> port <span class=\"token operator\">+</span> <span class=\"token string\">\"]绑定成功!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            System<span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"端口[\"</span> <span class=\"token operator\">+</span> port <span class=\"token operator\">+</span> <span class=\"token string\">\"]绑定失败!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li></ul></pre>\r\n<p>相比传统阻塞I/O，执行I/O操作后线程会被阻塞住, 直到操作完成；异步处理的好处是不会造成线程阻塞，线程在I/O操作期间可以执行别的程序，在高并发情形下会更稳定和更高的吞吐量。</p>\r\n<h2><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"Netty_521\"></a>Netty架构设计</h2>\r\n<p>前面介绍完Netty相关一些理论介绍，下面从功能特性、模块组件、运作过程来介绍Netty的架构设计</p>\r\n<h3><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"_525\"></a>功能特性</h3>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC8xMS8xLzE2NmNjYmJkYzg2MTRjOGY?x-oss-process=image/format,png\" alt=\"Netty功能特性图\"></p>\r\n<ul><li>传输服务 支持BIO和NIO</li><li>容器集成 支持OSGI、JBossMC、Spring、Guice容器</li><li>协议支持 HTTP、Protobuf、二进制、文本、WebSocket等一系列常见协议都支持。 还支持通过实行编码解码逻辑来实现自定义协议</li><li>Core核心 可扩展事件模型、通用通信API、支持零拷贝的ByteBuf缓冲对象</li></ul>\r\n<h3><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"_538\"></a>模块组件</h3>\r\n<h4><a id=\"BootstrapServerBootstrap_540\"></a>Bootstrap、ServerBootstrap</h4>\r\n<p>Bootstrap意思是引导，一个Netty应用通常由一个Bootstrap开始，主要作用是配置整个Netty程序，串联各个组件，Netty中Bootstrap类是客户端程序的启动引导类，ServerBootstrap是服务端启动引导类。</p>\r\n<h4><a id=\"FutureChannelFuture_544\"></a>Future、ChannelFuture</h4>\r\n<p>正如前面介绍，在Netty中所有的IO操作都是异步的，不能立刻得知消息是否被正确处理，但是可以过一会等它执行完成或者直接注册一个监听，具体的实现就是通过Future和ChannelFutures，他们可以注册一个监听，当操作执行成功或失败时监听会自动触发注册的监听事件。</p>\r\n<h4><a id=\"Channel_548\"></a>Channel</h4>\r\n<p>Netty网络通信的组件，能够用于执行网络I/O操作。 Channel为用户提供：</p>\r\n<ul><li>当前网络连接的通道的状态（例如是否打开？是否已连接？）</li><li>网络连接的配置参数 （例如接收缓冲区大小）</li><li>提供异步的网络I/O操作(如建立连接，读写，绑定端口)，异步调用意味着任何I / O调用都将立即返回，并且不保证在调用结束时所请求的I / O操作已完成。调用立即返回一个ChannelFuture实例，通过注册监听器到ChannelFuture上，可以I / O操作成功、失败或取消时回调通知调用方。</li><li>支持关联I/O操作与对应的处理程序</li></ul>\r\n<p>不同协议、不同的阻塞类型的连接都有不同的 Channel 类型与之对应，下面是一些常用的 Channel 类型</p>\r\n<ul><li>NioSocketChannel，异步的客户端 TCP Socket 连接</li><li>NioServerSocketChannel，异步的服务器端 TCP Socket 连接</li><li>NioDatagramChannel，异步的 UDP 连接</li><li>NioSctpChannel，异步的客户端 Sctp 连接</li><li>NioSctpServerChannel，异步的 Sctp 服务器端连接 这些通道涵盖了 UDP 和 TCP网络 IO以及文件 IO.</li></ul>\r\n<h4><a id=\"Selector_565\"></a>Selector</h4>\r\n<p>Netty基于Selector对象实现I/O多路复用，通过 Selector, 一个线程可以监听多个连接的Channel事件, 当向一个Selector中注册Channel 后，Selector 内部的机制就可以自动不断地查询(select) 这些注册的Channel是否有已就绪的I/O事件(例如可读, 可写, 网络连接完成等)，这样程序就可以很简单地使用一个线程高效地管理多个 Channel 。</p>\r\n<h4><a id=\"NioEventLoop_569\"></a>NioEventLoop</h4>\r\n<p>NioEventLoop中维护了一个线程和任务队列，支持异步提交执行任务，线程启动时会调用NioEventLoop的run方法，执行I/O任务和非I/O任务：</p>\r\n<ul><li>I/O任务 即selectionKey中ready的事件，如accept、connect、read、write等，由processSelectedKeys方法触发。</li><li>非IO任务 添加到taskQueue中的任务，如register0、bind0等任务，由runAllTasks方法触发。</li></ul>\r\n<p>两种任务的执行时间比由变量ioRatio控制，默认为50，则表示允许非IO任务执行的时间与IO任务的执行时间相等。</p>\r\n<h4><a id=\"NioEventLoopGroup_578\"></a>NioEventLoopGroup</h4>\r\n<p>NioEventLoopGroup，主要管理eventLoop的生命周期，可以理解为一个线程池，内部维护了一组线程，每个线程(NioEventLoop)负责处理多个Channel上的事件，而一个Channel只对应于一个线程。</p>\r\n<h4><a id=\"ChannelHandler_582\"></a>ChannelHandler</h4>\r\n<p>ChannelHandler是一个接口，处理I / O事件或拦截I / O操作，并将其转发到其ChannelPipeline(业务处理链)中的下一个处理程序。</p>\r\n<p>ChannelHandler本身并没有提供很多方法，因为这个接口有许多的方法需要实现，方便使用期间，可以继承它的子类：</p>\r\n<ul><li>ChannelInboundHandler用于处理入站I / O事件</li><li>ChannelOutboundHandler用于处理出站I / O操作</li></ul>\r\n<p>或者使用以下适配器类：</p>\r\n<ul><li>ChannelInboundHandlerAdapter用于处理入站I / O事件</li><li>ChannelOutboundHandlerAdapter用于处理出站I / O操作</li><li>ChannelDuplexHandler用于处理入站和出站事件</li></ul>\r\n<h4><a id=\"ChannelHandlerContext_597\"></a>ChannelHandlerContext</h4>\r\n<p>保存Channel相关的所有上下文信息，同时关联一个ChannelHandler对象</p>\r\n<h4><a id=\"ChannelPipline_601\"></a>ChannelPipline</h4>\r\n<p>保存ChannelHandler的List，用于处理或拦截Channel的入站事件和出站操作。 ChannelPipeline实现了一种高级形式的拦截过滤器模式，使用户可以完全控制事件的处理方式，以及Channel中各个的ChannelHandler如何相互交互。</p>\r\n<p>下图引用Netty的Javadoc4.1中ChannelPipline的说明，描述了ChannelPipeline中ChannelHandler通常如何处理I/O事件。 I/O事件由ChannelInboundHandler或ChannelOutboundHandler处理，并通过调用ChannelHandlerContext中定义的事件传播方法（例如ChannelHandlerContext.fireChannelRead（Object）和ChannelOutboundInvoker.write（Object））转发到其最近的处理程序。</p>\r\n<pre class=\"prettyprint\"><code class=\"has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">                                                 I/O Request\r\n                                            via Channel or\r\n                                        ChannelHandlerContext\r\n                                                      |\r\n  +---------------------------------------------------+---------------+\r\n  |                           ChannelPipeline         |               |\r\n  |                                                  \\|/              |\r\n  |    +---------------------+            +-----------+----------+    |\r\n  |    | Inbound Handler  N  |            | Outbound Handler  1  |    |\r\n  |    +----------+----------+            +-----------+----------+    |\r\n  |              /|\\                                  |               |\r\n  |               |                                  \\|/              |\r\n  |    +----------+----------+            +-----------+----------+    |\r\n  |    | Inbound Handler N-1 |            | Outbound Handler  2  |    |\r\n  |    +----------+----------+            +-----------+----------+    |\r\n  |              /|\\                                  .               |\r\n  |               .                                   .               |\r\n  | ChannelHandlerContext.fireIN_EVT() ChannelHandlerContext.OUT_EVT()|\r\n  |        [ method call]                       [method call]         |\r\n  |               .                                   .               |\r\n  |               .                                  \\|/              |\r\n  |    +----------+----------+            +-----------+----------+    |\r\n  |    | Inbound Handler  2  |            | Outbound Handler M-1 |    |\r\n  |    +----------+----------+            +-----------+----------+    |\r\n  |              /|\\                                  |               |\r\n  |               |                                  \\|/              |\r\n  |    +----------+----------+            +-----------+----------+    |\r\n  |    | Inbound Handler  1  |            | Outbound Handler  M  |    |\r\n  |    +----------+----------+            +-----------+----------+    |\r\n  |              /|\\                                  |               |\r\n  +---------------+-----------------------------------+---------------+\r\n                  |                                  \\|/\r\n  +---------------+-----------------------------------+---------------+\r\n  |               |                                   |               |\r\n  |       [ Socket.read() ]                    [ Socket.write() ]     |\r\n  |                                                                   |\r\n  |  Netty Internal I/O Threads (Transport Implementation)            |\r\n  +-------------------------------------------------------------------+\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li></ul></pre>\r\n<p>入站事件由自下而上方向的入站处理程序处理，如图左侧所示。 入站Handler处理程序通常处理由图底部的I / O线程生成的入站数据。 通常通过实际输入操作（例如SocketChannel.read（ByteBuffer））从远程读取入站数据。</p>\r\n<p>出站事件由上下方向处理，如图右侧所示。 出站Handler处理程序通常会生成或转换出站传输，例如write请求。 I/O线程通常执行实际的输出操作，例如SocketChannel.write（ByteBuffer）。</p>\r\n<p>在 Netty 中每个 Channel 都有且仅有一个 ChannelPipeline 与之对应, 它们的组成关系如下:</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC8xMS8xLzE2NmNjYmJkYzhjZDFhMmY?x-oss-process=image/format,png\" alt=\"img\"></p>\r\n<p>一个 Channel 包含了一个 ChannelPipeline, 而 ChannelPipeline 中又维护了一个由 ChannelHandlerContext 组成的双向链表, 并且每个 ChannelHandlerContext 中又关联着一个 ChannelHandler。入站事件和出站事件在一个双向链表中，入站事件会从链表head往后传递到最后一个入站的handler，出站事件会从链表tail往前传递到最前一个出站的handler，两种类型的handler互不干扰。</p>\r\n<h3><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"_665\"></a>工作原理架构</h3>\r\n<p>初始化并启动Netty服务端过程如下：</p>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">// 创建mainReactor</span>\r\n        NioEventLoopGroup boosGroup <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioEventLoopGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">// 创建工作线程组</span>\r\n        NioEventLoopGroup workerGroup <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioEventLoopGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">final</span> ServerBootstrap serverBootstrap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerBootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        serverBootstrap\r\n                 <span class=\"token comment\">// 组装NioEventLoopGroup </span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span>boosGroup<span class=\"token punctuation\">,</span> workerGroup<span class=\"token punctuation\">)</span>\r\n                 <span class=\"token comment\">// 设置channel类型为NIO类型</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span>NioServerSocketChannel<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token comment\">// 设置连接配置参数</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">option</span><span class=\"token punctuation\">(</span>ChannelOption<span class=\"token punctuation\">.</span>SO_BACKLOG<span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">childOption</span><span class=\"token punctuation\">(</span>ChannelOption<span class=\"token punctuation\">.</span>SO_KEEPALIVE<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">childOption</span><span class=\"token punctuation\">(</span>ChannelOption<span class=\"token punctuation\">.</span>TCP_NODELAY<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token comment\">// 配置入站、出站事件handler</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">childHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ChannelInitializer</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>NioSocketChannel<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                    <span class=\"token annotation punctuation\">@Override</span>\r\n                    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initChannel</span><span class=\"token punctuation\">(</span>NioSocketChannel ch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                        <span class=\"token comment\">// 配置入站、出站事件channel</span>\r\n                        ch<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                        ch<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token comment\">// 绑定端口</span>\r\n        <span class=\"token keyword\">int</span> port <span class=\"token operator\">=</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">;</span>\r\n        serverBootstrap<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>future <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>future<span class=\"token punctuation\">.</span><span class=\"token function\">isSuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\": 端口[\"</span> <span class=\"token operator\">+</span> port <span class=\"token operator\">+</span> <span class=\"token string\">\"]绑定成功!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                System<span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"端口[\"</span> <span class=\"token operator\">+</span> port <span class=\"token operator\">+</span> <span class=\"token string\">\"]绑定失败!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li></ul></pre>\r\n<ul><li>基本过程如下：</li><li>1 初始化创建2个NioEventLoopGroup，其中boosGroup用于Accetpt连接建立事件并分发请求， workerGroup用于处理I/O读写事件和业务逻辑</li><li>2 基于ServerBootstrap(服务端启动引导类)，配置EventLoopGroup、Channel类型，连接参数、配置入站、出站事件handler</li><li>3 绑定端口，开始工作</li></ul>\r\n<p>结合上面的介绍的Netty Reactor模型，介绍服务端Netty的工作架构图：</p>\r\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOC8xMS8xLzE2NmNjYmJkYzlhN2NhYmU?x-oss-process=image/format,png\" alt=\"服务端Netty Reactor工作架构图\"></p>\r\n<p>server端包含1个Boss NioEventLoopGroup和1个Worker NioEventLoopGroup，NioEventLoopGroup相当于1个事件循环组，这个组里包含多个事件循环NioEventLoop，每个NioEventLoop包含1个selector和1个事件循环线程。</p>\r\n<p>每个Boss NioEventLoop循环执行的任务包含3步：</p>\r\n<ul><li>1 轮询accept事件</li><li>2 处理accept I/O事件，与Client建立连接，生成NioSocketChannel，并将NioSocketChannel注册到某个Worker NioEventLoop的Selector上 *3 处理任务队列中的任务，runAllTasks。任务队列中的任务包括用户调用eventloop.execute或schedule执行的任务，或者其它线程提交到该eventloop的任务。</li></ul>\r\n<p>每个Worker NioEventLoop循环执行的任务包含3步：</p>\r\n<ul><li>1 轮询read、write事件；</li><li>2 处I/O事件，即read、write事件，在NioSocketChannel可读、可写事件发生时进行处理</li><li>3 处理任务队列中的任务，runAllTasks。</li></ul>\r\n<p>其中任务队列中的task有3种典型使用场景</p>\r\n<ul><li>1 用户程序自定义的普通任务</li></ul>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">ctx<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eventLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">//...</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<ul><li>2 非当前reactor线程调用channel的各种方法 例如在推送系统的业务线程里面，根据用户的标识，找到对应的channel引用，然后调用write类方法向该用户推送消息，就会进入到这种场景。最终的write会提交到任务队列中后被异步消费。</li><li>3 用户自定义定时任务</li></ul>\r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\">ctx<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eventLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">schedule</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token annotation punctuation\">@Override</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> TimeUnit<span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n<h2><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"_762\"></a>总结</h2>\r\n<p>现在稳定推荐使用的主流版本还是Netty4，Netty5 中使用了 ForkJoinPool，增加了代码的复杂度，但是对性能的改善却不明显，所以这个版本不推荐使用，官网也没有提供下载链接。</p>\r\n<p>Netty 入门门槛相对较高，其实是因为这方面的资料较少，并不是因为他有多难，大家其实都可以像搞透 Spring 一样搞透 Netty。在学习之前，建议先理解透整个框架原理结构，运行过程，可以少走很多弯路。</p>\r\n</div>\r\n<link href=\"../../../css/csdn/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n<link href=\"../../../css/csdn/style-49037e4d27.css\" rel=\"stylesheet\">\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_netty.vue?vue&type=template&id=7968be86\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>Dubbo的原理，面试常见问题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"htmledit_views\">\r\n<p>一、dubbo是什么？</p>\r\n<p>dubbo是⼀个分布式服务框架，提供⾼性能和透明化的RPC远程服务调⽤⽅案，以及SOA服务治理方案。说白了其实dubbo就是一个远程调用的分布式框架。</p>\r\n<p>二、dubbo的核心服务是什么？</p>\r\n<p>1.远程通讯: 提供对多种基于长连接的NIO框架抽象封装，包括多种线程模型，序列化，以及“请求-响应”模式的信息交换方式。</p>\r\n<p>2.集群容错: 提供基于接口方法的透明远程过程调用，包括多协议支持，以及软负载均衡，失败容错，地址路由，动态配置等集群支持。</p>\r\n<p>3.自动发现: 基于注册中心目录服务，使服务消费方能动态的查找服务提供方，使地址透明，使服务提供方可以平滑增加或减少机器。</p>\r\n<p>&nbsp;</p>\r\n<p>三、dubbo能做什么？</p>\r\n<p>1.透明化的远程方法调用，就像调用本地方法一样调用远程方法，只需简单配置，没有任何API侵入。</p>\r\n<p>2.软负载均衡及容错机制，可在内网替代F5等硬件负载均衡器，降低成本，减少单点。</p>\r\n<p>3. 服务自动注册与发现，不再需要写死服务提供方地址，注册中心基于接口名查询服务提供者的IP地址，并且能够平滑添加或删除服务提供者。</p>\r\n<p>采用spring的配置方式进行配置，完全透明化的接入应用，对应用没有任何入侵，只需要spring加载dubbo的配置就可以了。</p>\r\n<p>&nbsp;</p>\r\n<p>看一下dubbo架构图</p>\r\n<p><img alt=\"\" class=\"has\" height=\"1\" src=\"https://img-blog.csdnimg.cn/20190307233519571.gif\" width=\"1\"></p>\r\n<p>四、服务提供者暴露一个服务的详细过程：</p>\r\n<p>如果你仔细观察dubbo的启动日志你会发现，dubbo的provider启动主要是以下几个过程</p>\r\n<p>1.首先provider启动时，先把想要提供的服务暴露在本地。</p>\r\n<p>2.然后再把服务暴露到远程。</p>\r\n<p>3.启动netty服务，建立长连接。</p>\r\n<p>4.连接到注册中心zk上。</p>\r\n<p>5.然后监控zk上的消费服务。</p>\r\n<p><img alt=\"\" class=\"has\" src=\"https://img-blog.csdnimg.cn/20190307233710348.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzNDc5MTE=,size_16,color_FFFFFF,t_70\"></p>\r\n<p>五、服务消费者消费一个服务的详细过程</p>\r\n<p><img alt=\"\" class=\"has\" src=\"https://img-blog.csdnimg.cn/2019030723373539.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzNDc5MTE=,size_16,color_FFFFFF,t_70\"></p>\r\n<p>首先ReferenceConfig类的init方法调用Protocol的refer方法生成Invoker实例。接下来把Invoker转为客户端需要的接口。</p>\r\n<p>&nbsp;</p>\r\n<p>六、下面来看本地暴露于远程暴露的区别：</p>\r\n<p>本地暴露是暴露在本机JVM中,调用本地服务不需要网络通信.</p>\r\n<p>远程暴露是将ip,端口等信息暴露给远程客户端,调用远程服务时需要网络通信.</p>\r\n<p>&nbsp;</p>\r\n<p>七、什么情况下适用dubbo协议，什么时候适用rmi协议？</p>\r\n<p>Dubbo支持dubbo、rmi、hessian、http、webservice、thrift、redis等多种协议，但是dubbo协议是官网推荐使用的，dubbo 缺省协议是dubbo协议，采用单一长连接和 NIO 异步通讯，适合于小数据量大并发的服务调用，以及服务消费者机器数远大于服务提供者机器数的情况。反之，Dubbo 缺省协议不适合传送大数据量的服务，比如传文件，传视频等，除非请求量很低。RMI协议采用阻塞式(同步)短连接和 JDK 标准序列化方式。适用范围：传入传出参数数据包大小混合，消费者与提供者个数差不多，可传文件。后面会对其他几种协议详细介绍，这里就不赘述了。</p>\r\n<p>&nbsp;</p>\r\n<p>八、Dubbo主要的配置项有哪些，作用是什么？</p>\r\n<p>provider配置</p>\r\n<pre><code class=\"language-html hljs xml\"><ol class=\"hljs-ln\" style=\"width:736px\"><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"1\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\"><span class=\"hljs-comment\">&lt;!-- 提供方应用信息，用于计算依赖关系 --&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"2\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:application</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"hello-world-app\"</span>  /&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"3\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\"> </div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"4\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">    <span class=\"hljs-comment\">&lt;!-- 使用multicast广播注册中心暴露服务地址 --&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"5\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"multicast://224.5.6.7:1234\"</span> /&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"6\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\"> </div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"7\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">    <span class=\"hljs-comment\">&lt;!-- 用dubbo协议在20880端口暴露服务 --&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"8\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:protocol</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"dubbo\"</span> <span class=\"hljs-attr\">port</span>=<span class=\"hljs-string\">\"20880\"</span> /&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"9\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\"> </div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"10\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">    <span class=\"hljs-comment\">&lt;!-- 声明需要暴露的服务接口 --&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"11\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.alibaba.dubbo.demo.DemoService\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"demoService\"</span> /&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"12\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\"> </div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"13\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">    <span class=\"hljs-comment\">&lt;!-- 和本地bean一样实现服务 --&gt;</span></div></div></li></ol></code><div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\" onclick=\"hljs.copyCode(event)\"></div></pre>\r\n<p>&lt;bean id=\"demoService\" class=\"com.alibaba.dubbo.demo.provider.DemoServiceImpl\" /&gt;</p>\r\n<p>&nbsp;</p>\r\n<p>consumer配置</p>\r\n<pre><code class=\"language-html hljs xml\"><ol class=\"hljs-ln\" style=\"width:744px\"><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"1\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\"> <span class=\"hljs-comment\">&lt;!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 --&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"2\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:application</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"consumer-of-helloworld-app\"</span>  /&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"3\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\"> </div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"4\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">    <span class=\"hljs-comment\">&lt;!-- 使用multicast广播注册中心暴露发现服务地址 --&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"5\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"multicast://224.5.6.7:1234\"</span> /&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"6\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\"> </div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"7\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">    <span class=\"hljs-comment\">&lt;!-- 生成远程服务代理，可以和本地bean一样使用demoService --&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"8\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"demoService\"</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.alibaba.dubbo.demo.DemoService\"</span> /&gt;</span></div></div></li></ol></code><div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\" onclick=\"hljs.copyCode(event)\"></div></pre>\r\n<p>九、Dubbo有几种容错机制</p>\r\n<p>什么是容错机制？容错机制指的是某中系统控制在一定范围的一种允许或包容犯错情况的发生，举个简单的例子，我们在电脑上运行一个程序，有时候会出现无响应的情况，然后系统回弹出一个提示框让我们选择，是立即结束还是继续等待，然后根据我们的选择执行对应的操作，这就是“容错”。</p>\r\n<p>&nbsp; &nbsp;在分布式架构下，网络，硬件，应用都可以发生故障，由于各个服务之间可能存在依赖关系，如果一条链路中的某一个节点出现故障，将会导致雪崩效应。为了减少某一个节点故障的影响范围，所以我们才需要去构建容错服务，来优雅的处理这种中断的响应结果</p>\r\n<p>1.failsafe 失败安全，可以认为是把错误吞掉（记录日志）</p>\r\n<p>2.failover(默认)&nbsp; 重试其他服务器；retries(2)重试的次数，默认为2次</p>\r\n<p>3.failback&nbsp; &nbsp;失败后自动恢复</p>\r\n<p>4.forking forks. 设置并行数</p>\r\n<p>5.Broadcast 广播，任意一台报错，则执行的方法报错，通过cluster方式，配置制定的容错方案</p>\r\n<p>&nbsp;</p>\r\n<p>十、dubbo的服务降级</p>\r\n<p>降级的目的是为了保证核心服务可用</p>\r\n<p>降级可以有几个层面的分类：自动降级，人工降级；按照功能可以分为：读服务降级和写服务降级；</p>\r\n<p>1.对一些非核心服务进行人工降级，在大促之前通过降级开关关闭那些推荐内容，评价等对主流程序没有影响的功能</p>\r\n<p>2.故障降级，比如调用的远程服务挂了，网络故障，或者RPC服务返回异常。那么可以直接降级，降级的方案比如设置默认值，采用兜底数据（系统推荐的行为广告挂了，可以提前准备静态页面做返回）等等</p>\r\n<p>3.限流降级，在秒杀这种流量比较集中并且流量特别大的情况下，因为突发访问量特别大可能导致系统支撑不了。这个时候可以采用限流来限制访问量。当达到阈值时，后续的请求被降级，比如进入排队页面，比如跳转到错误页面（活动火爆，请稍后重试）</p>\r\n<p>&nbsp;</p>\r\n<p>Dubbo的降级方式：Mock</p>\r\n<p>实现步骤</p>\r\n<p>1.在client端创建一个testmock类，实现对应的IGphello的接口（需要对哪个接口进行mock，就实现哪个）名称必须以mock结尾</p>\r\n<p>2.在client端的xml配置文件中，添加如下配置，增加一个mock属性指向创建的testmock</p>\r\n<p>3.模拟错误（设置timeout）模拟超时异常，运行测试代码即可访问到testmock这个类，当服务端故障解除以后，调用过程将恢复正常</p>\r\n<p>&nbsp;</p>\r\n<p>十一、dubbo的优先级配置</p>\r\n<p>配置优先级别</p>\r\n<p>1.以timeout为例，显示了配置的查找顺序，其他retries，loadbalance等类似。</p>\r\n<p>（1）方法级优先，接口级次之，全局配置在次之</p>\r\n<p>（2）如果级别一样，则消费方优先，提供方次之</p>\r\n<p>（3）其中，服务提供方配置，通过URL经由注册中心传递给消费方</p>\r\n<p>2.建议由服务提供方设置超时，因为一个方法需要执行多长时间，服务提供方更清楚，如果一个消费方同时引用多个服务，就不需要关心每个服务的超时设置。</p>\r\n<p><img alt=\"\" class=\"has\" src=\"https://mmbiz.qpic.cn/mmbiz_jpg/nVxaflGE5ZOUhf6JRQZ6wouKoTFUUTZux8l4SIibQLhk9JsHAfLWxCZ7o68qDQKCd78b5kHDjQ3ic16WiatlLfQ0w/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1\"></p>\r\n</div>\r\n<div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/a347911/article/details/88324056&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_dubbo.vue?vue&type=template&id=12e8445c\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\r\n<h2>Tomcat面试题</h2>\r\n<article class=\"baidu_pl\" style=\"text-align: left;\">\r\n<div id=\"article_content\" class=\"article_content clearfix\">\r\n<link rel=\"stylesheet\" href=\"../../../css/csdn/ck_htmledit_views-1a85854398.css\">\r\n<div id=\"content_views\" class=\"htmledit_views\">\r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"Tomcat_36\"></a>Tomcat是什么？</h2>\r\n<p>Tomcat 服务器Apache软件基金会项目中的一个核心项目，是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。</p>\r\n<h2><a name=\"t2\"></a><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"Tomcat_42\"></a>Tomcat的缺省端口是多少，怎么修改</h2>\r\n<ol><li>找到Tomcat目录下的conf文件夹</li><li>进入conf文件夹里面找到server.xml文件</li><li>打开server.xml文件</li><li>在server.xml文件里面找到下列信息</li><li>把Connector标签的8080端口改成你想要的端口</li></ol>\r\n<pre><code class=\"hljs xml\"><ol class=\"hljs-ln\"><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"1\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Service</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"Catalina\"</span>&gt;</span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"2\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Connector</span> <span class=\"hljs-attr\">port</span>=<span class=\"hljs-string\">\"8080\"</span> <span class=\"hljs-attr\">protocol</span>=<span class=\"hljs-string\">\"HTTP/1.1\"</span> </span></div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"3\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">               <span class=\"hljs-attr\">connectionTimeout</span>=<span class=\"hljs-string\">\"20000\"</span> </div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"4\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">               <span class=\"hljs-attr\">redirectPort</span>=<span class=\"hljs-string\">\"8443\"</span> /&gt;</div></div></li></ol></code><div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\" onclick=\"hljs.copyCode(event)\"></div></pre>\r\n<ul><li>1</li><li>2</li><li>3</li><li>4</li></ul>\r\n<h2><a name=\"t3\"></a><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"tomcat_Connector__59\"></a>tomcat 有哪几种Connector 运行模式(优化)？</h2>\r\n<p>下面，我们先大致了解Tomcat Connector的三种运行模式。</p>\r\n<ul><li><strong>BIO：同步并阻塞</strong>&nbsp;一个线程处理一个请求。缺点：并发量高时，线程数较多，浪费资源。Tomcat7或以下，在Linux系统中默认使用这种方式。</li></ul>\r\n<p>&ZeroWidthSpace;&nbsp;<strong>配制项</strong>：protocol=”HTTP/1.1”</p>\r\n<ul><li> <p>NIO：同步非阻塞IO</p> <p>利用Java的异步IO处理，可以通过少量的线程处理大量的请求，可以复用同一个线程处理多个connection(多路复用)。</p> <p>Tomcat8在Linux系统中默认使用这种方式。</p> <p>Tomcat7必须修改Connector配置来启动。</p> <p><strong>配制项</strong>：protocol=”org.apache.coyote.http11.Http11NioProtocol”</p> <p><strong>备注</strong>：我们常用的Jetty，Mina，ZooKeeper等都是基于java nio实现.</p> </li><li> <p>APR：即Apache Portable Runtime，从操作系统层面解决io阻塞问题。**AIO方式，**<strong>异步非阻塞IO</strong>(Java NIO2又叫AIO) 主要与NIO的区别主要是操作系统的底层区别.可以做个比喻:比作快递，NIO就是网购后要自己到官网查下快递是否已经到了(可能是多次)，然后自己去取快递；AIO就是快递员送货上门了(不用关注快递进度)。</p> <p><strong>配制项</strong>：protocol=”org.apache.coyote.http11.Http11AprProtocol”</p> <p><strong>备注</strong>：需在本地服务器安装APR库。Tomcat7或Tomcat8在Win7或以上的系统中启动默认使用这种方式。Linux如果安装了apr和native，Tomcat直接启动就支持apr。</p> </li></ul>\r\n<h2><a name=\"t4\"></a><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"Tomcat_87\"></a>Tomcat有几种部署方式？</h2>\r\n<p><strong>在Tomcat中部署Web应用的方式主要有如下几种：</strong></p>\r\n<ol><li> <p>利用Tomcat的自动部署。</p> <p>把web应用拷贝到webapps目录。Tomcat在启动时会加载目录下的应用，并将编译后的结果放入work目录下。</p> </li><li> <p>使用Manager App控制台部署。</p> <p>在tomcat主页点击“Manager App” 进入应用管理控制台，可以指定一个web应用的路径或war文件。</p> </li><li> <p>修改conf/server.xml文件部署。</p> <p>修改conf/server.xml文件，增加Context节点可以部署应用。</p> </li><li> <p>增加自定义的Web部署文件。</p> <p>在conf/Catalina/localhost/ 路径下增加 xyz.xml文件，内容是Context节点，可以部署应用。</p> </li></ol>\r\n<h2><a name=\"t5\"></a><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"tomcatservlet_111\"></a>tomcat容器是如何创建servlet类实例？用到了什么原理？</h2>\r\n<ol><li>当容器启动时，会读取在webapps目录下所有的web应用中的web.xml文件，然后对&nbsp;<strong>xml文件进行解析，并读取servlet注册信息</strong>。然后，将每个应用中注册的servlet类都进行加载，并通过&nbsp;<strong>反射的方式实例化</strong>。（有时候也是在第一次请求时实例化）</li><li>在servlet注册时加上1如果为正数，则在一开始就实例化，如果不写或为负数，则第一次请求实例化。</li></ol>\r\n<h2><a name=\"t6\"></a><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"Tomcat_120\"></a>Tomcat工作模式</h2>\r\n<p>Tomcat作为servlet容器，有三种工作模式：</p>\r\n<ul><li>1、独立的servlet容器，servlet容器是web服务器的一部分；</li><li>2、进程内的servlet容器，servlet容器是作为web服务器的插件和java容器的实现，web服务器插件在内部地址空间打开一个jvm使得java容器在内部得以运行。反应速度快但伸缩性不足；</li><li>3、进程外的servlet容器，servlet容器运行于web服务器之外的地址空间，并作为web服务器的插件和java容器实现的结合。反应时间不如进程内但伸缩性和稳定性比进程内优；</li></ul>\r\n<p>进入Tomcat的请求可以根据Tomcat的工作模式分为如下两类：</p>\r\n<ul><li>Tomcat作为应用程序服务器：请求来自于前端的web服务器，这可能是Apache, IIS, Nginx等；</li><li>Tomcat作为独立服务器：请求来自于web浏览器；</li></ul>\r\n<p>面试时问到Tomcat相关问题的几率并不高，正式因为如此，很多人忽略了对Tomcat相关技能的掌握，下面这一篇文章整理了Tomcat相关的系统架构，介绍了Server、Service、Connector、Container之间的关系，各个模块的功能，可以说把这几个掌握住了，Tomcat相关的面试题你就不会有任何问题了！另外，在面试的时候你还要有意识无意识的往Tomcat这个地方引，就比如说常见的Spring MVC的执行流程，一个URL的完整调用链路，这些相关的题目你是可以往Tomcat处理请求的这个过程去说的！掌握了Tomcat这些技能，面试官一定会佩服你的！</p>\r\n<p>学了本章之后你应该明白的是：</p>\r\n<ul><li>Server、Service、Connector、Container四大组件之间的关系和联系，以及他们的主要功能点；</li><li>Tomcat执行的整体架构，请求是如何被一步步处理的；</li><li>Engine、Host、Context、Wrapper相关的概念关系；</li><li>Container是如何处理请求的；</li><li>Tomcat用到的相关设计模式；</li></ul>\r\n<h2><a name=\"t7\"></a><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"Tomcat_153\"></a>Tomcat顶层架构</h2>\r\n<p>俗话说，站在巨人的肩膀上看世界，一般学习的时候也是先总览一下整体，然后逐个部分个个击破，最后形成思路，了解具体细节，Tomcat的结构很复杂，但是 Tomcat 非常的模块化，找到了 Tomcat 最核心的模块，问题才可以游刃而解，了解了 Tomcat 的整体架构对以后深入了解 Tomcat 来说至关重要！</p>\r\n<p>先上一张Tomcat的顶层结构图（图A），如下：</p>\r\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20191021215330153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\"></p>\r\n<p>Tomcat中最顶层的容器是Server，代表着整个服务器，从上图中可以看出，一个Server可以包含至少一个Service，即可以包含多个Service，用于具体提供服务。</p>\r\n<p>Service主要包含两个部分：Connector和Container。从上图中可以看出 Tomcat 的心脏就是这两个组件，他们的作用如下：</p>\r\n<ul><li>Connector用于处理连接相关的事情，并提供Socket与Request请求和Response响应相关的转化;</li><li>Container用于封装和管理Servlet，以及具体处理Request请求；</li></ul>\r\n<p>一个Tomcat中只有一个Server，一个Server可以包含多个Service，一个Service只有一个Container，但是可以有多个Connectors，这是因为一个服务可以有多个连接，如同时提供Http和Https链接，也可以提供向相同协议不同端口的连接，示意图如下（Engine、Host、Context下面会说到）：</p>\r\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20191021215344811.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\"></p>\r\n<p>多个 Connector 和一个 Container 就形成了一个 Service，有了 Service 就可以对外提供服务了，但是 Service 还要一个生存的环境，必须要有人能够给她生命、掌握其生死大权，那就非 Server 莫属了！所以整个 Tomcat 的生命周期由 Server 控制。</p>\r\n<p>另外，上述的包含关系或者说是父子关系，都可以在tomcat的conf目录下的server.xml配置文件中看出，下图是删除了注释内容之后的一个完整的server.xml配置文件（Tomcat版本为8.0）</p>\r\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20191021215355649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\"></p>\r\n<p>详细的配置文件内容可以到Tomcat官网查看：<a href=\"http://tomcat.apache.org/tomcat-8.0-doc/index.html\">Tomcat配置文件</a></p>\r\n<p>上边的配置文件，还可以通过下边的一张结构图更清楚的理解：</p>\r\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/2019102121541531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\"></p>\r\n<p>Server标签设置的端口号为8005，shutdown=”SHUTDOWN” ，表示在8005端口监听“SHUTDOWN”命令，如果接收到了就会关闭Tomcat。一个Server有一个Service，当然还可以进行配置，一个Service有多个Connector，Service左边的内容都属于Container的，Service下边是Connector。</p>\r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"Tomcat_193\"></a>Tomcat顶层架构小结</h3>\r\n<ol><li> <p>Tomcat中只有一个Server，一个Server可以有多个Service，一个Service可以有多个Connector和一个Container；</p> </li><li> <p>Server掌管着整个Tomcat的生死大权；</p> </li><li> <p>Service 是对外提供服务的；</p> </li><li> <p>Connector用于接受请求并将请求封装成Request和Response来具体处理；</p> </li><li> <p>Container用于封装和管理Servlet，以及具体处理request请求；</p> </li></ol>\r\n<p>知道了整个Tomcat顶层的分层架构和各个组件之间的关系以及作用，对于绝大多数的开发人员来说Server和Service对我们来说确实很远，而我们开发中绝大部分进行配置的内容是属于Connector和Container的，所以接下来介绍一下Connector和Container。</p>\r\n<h2><a name=\"t9\"></a><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"ConnectorContainer_210\"></a>Connector和Container的微妙关系</h2>\r\n<p>由上述内容我们大致可以知道一个请求发送到Tomcat之后，首先经过Service然后会交给我们的Connector，Connector用于接收请求并将接收的请求封装为Request和Response来具体处理，Request和Response封装完之后再交由Container进行处理，Container处理完请求之后再返回给Connector，最后在由Connector通过Socket将处理的结果返回给客户端，这样整个请求的就处理完了！</p>\r\n<p>Connector最底层使用的是Socket来进行连接的，Request和Response是按照HTTP协议来封装的，所以Connector同时需要实现TCP/IP协议和HTTP协议！</p>\r\n<p>Tomcat既然需要处理请求，那么肯定需要先接收到这个请求，接收请求这个东西我们首先就需要看一下Connector！</p>\r\n<p>Connector架构分析</p>\r\n<p>Connector用于接受请求并将请求封装成Request和Response，然后交给Container进行处理，Container处理完之后在交给Connector返回给客户端。</p>\r\n<p>因此，我们可以把Connector分为四个方面进行理解：</p>\r\n<ol><li> <p>Connector如何接受请求的？</p> </li><li> <p>如何将请求封装成Request和Response的？</p> </li><li> <p>封装完之后的Request和Response如何交给Container进行处理的？</p> </li><li> <p>Container处理完之后如何交给Connector并返回给客户端的？</p> </li></ol>\r\n<p>首先看一下Connector的结构图（图B），如下所示：</p>\r\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20191021215430677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\"></p>\r\n<p>Connector就是使用ProtocolHandler来处理请求的，不同的ProtocolHandler代表不同的连接类型，比如：Http11Protocol使用的是普通Socket来连接的，Http11NioProtocol使用的是NioSocket来连接的。</p>\r\n<p>其中ProtocolHandler由包含了三个部件：Endpoint、Processor、Adapter。</p>\r\n<ol><li> <p>Endpoint用来处理底层Socket的网络连接，Processor用于将Endpoint接收到的Socket封装成Request，Adapter用于将Request交给Container进行具体的处理。</p> </li><li> <p>Endpoint由于是处理底层的Socket网络连接，因此Endpoint是用来实现TCP/IP协议的，而Processor用来实现HTTP协议的，Adapter将请求适配到Servlet容器进行具体的处理。</p> </li><li> <p>Endpoint的抽象实现AbstractEndpoint里面定义的Acceptor和AsyncTimeout两个内部类和一个Handler接口。Acceptor用于监听请求，AsyncTimeout用于检查异步Request的超时，Handler用于处理接收到的Socket，在内部调用Processor进行处理。</p> </li></ol>\r\n<p>至此，我们应该很轻松的回答1，2，3的问题了，但是4还是不知道，那么我们就来看一下Container是如何进行处理的以及处理完之后是如何将处理完的结果返回给Connector的？</p>\r\n<h2><a name=\"t10\"></a><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"Container_258\"></a>Container架构分析</h2>\r\n<p>Container用于封装和管理Servlet，以及具体处理Request请求，在Container内部包含了4个子容器，结构图如下（图C）：</p>\r\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20191021215443306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\"></p>\r\n<p>4个子容器的作用分别是：</p>\r\n<ol><li> <p>Engine：引擎，用来管理多个站点，一个Service最多只能有一个Engine；</p> </li><li> <p>Host：代表一个站点，也可以叫虚拟主机，通过配置Host就可以添加站点；</p> </li><li> <p>Context：代表一个应用程序，对应着平时开发的一套程序，或者一个WEB-INF目录以及下面的web.xml文件；</p> </li><li> <p>Wrapper：每一Wrapper封装着一个Servlet；</p> </li></ol>\r\n<p>下面找一个Tomcat的文件目录对照一下，如下图所示：</p>\r\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20191021215455991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\"></p>\r\n<p>Context和Host的区别是Context表示一个应用，我们的Tomcat中默认的配置下webapps下的每一个文件夹目录都是一个Context，其中ROOT目录中存放着主应用，其他目录存放着子应用，而整个webapps就是一个Host站点。</p>\r\n<p>我们访问应用Context的时候，如果是ROOT下的则直接使用域名就可以访问，例如：www.baidu.com，如果是Host（webapps）下的其他应用，则可以使用www.baidu.com/docs进行访问，当然默认指定的根应用（ROOT）是可以进行设定的，只不过Host站点下默认的主应用是ROOT目录下的。</p>\r\n<p>看到这里我们知道Container是什么，但是还是不知道Container是如何进行请求处理的以及处理完之后是如何将处理完的结果返回给Connector的？别急！下边就开始探讨一下Container是如何进行处理的！</p>\r\n<h3><a name=\"t11\"></a><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"Container_291\"></a>Container如何处理请求的</h3>\r\n<p>Container处理请求是使用Pipeline-Valve管道来处理的！（Valve是阀门之意）</p>\r\n<p>Pipeline-Valve是<strong>责任链模式</strong>，责任链模式是指在一个请求处理的过程中有很多处理者依次对请求进行处理，每个处理者负责做自己相应的处理，处理完之后将处理后的结果返回，再让下一个处理者继续处理。</p>\r\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20191021215507725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\"></p>\r\n<p>但是！Pipeline-Valve使用的责任链模式和普通的责任链模式有些不同！区别主要有以下两点：</p>\r\n<ul><li> <p>每个Pipeline都有特定的Valve，而且是在管道的最后一个执行，这个Valve叫做BaseValve，BaseValve是不可删除的；</p> </li><li> <p>在上层容器的管道的BaseValve中会调用下层容器的管道。</p> </li></ul>\r\n<p>我们知道Container包含四个子容器，而这四个子容器对应的BaseValve分别在：StandardEngineValve、StandardHostValve、StandardContextValve、StandardWrapperValve。</p>\r\n<p>Pipeline的处理流程图如下（图D）：</p>\r\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20191021215519408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoaW5rV29u,size_16,color_FFFFFF,t_70\"></p>\r\n<ul><li> <p>Connector在接收到请求后会首先调用最顶层容器的Pipeline来处理，这里的最顶层容器的Pipeline就是EnginePipeline（Engine的管道）；</p> </li><li> <p>在Engine的管道中依次会执行EngineValve1、EngineValve2等等，最后会执行StandardEngineValve，在StandardEngineValve中会调用Host管道，然后再依次执行Host的HostValve1、HostValve2等，最后在执行StandardHostValve，然后再依次调用Context的管道和Wrapper的管道，最后执行到StandardWrapperValve。</p> </li><li> <p>当执行到StandardWrapperValve的时候，会在StandardWrapperValve中创建FilterChain，并调用其doFilter方法来处理请求，这个FilterChain包含着我们配置的与请求相匹配的Filter和Servlet，其doFilter方法会依次调用所有的Filter的doFilter方法和Servlet的service方法，这样请求就得到了处理！</p> </li><li> <p>当所有的Pipeline-Valve都执行完之后，并且处理完了具体的请求，这个时候就可以将返回的结果交给Connector了，Connector在通过Socket的方式将结果返回给客户端。</p> </li></ul>\r\n<h2><a name=\"t12\"></a><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"_327\"></a>总结</h2>\r\n<p>至此，我们已经对Tomcat的整体架构有了大致的了解，从图A、B、C、D可以看出来每一个组件的基本要素和作用。我们在脑海里应该有一个大概的轮廓了！如果你面试的时候，让你简单的聊一下Tomcat，上面的内容你能脱口而出吗？当你能够脱口而出的时候，面试官一定会对你刮目相看的！</p>\r\n</div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/qq_26947195/article/details/109469792&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n</div>\r\n</article>\r\n</template>\r\n","import { render } from \"./interview_tomcat.vue?vue&type=template&id=5504a976\"\nconst script = {}\nscript.render = render\n\nexport default script","import { createRouter, createWebHashHistory } from 'vue-router'\nimport Login from '../views/login.vue'\nimport Index from '../views/blogs/index'\nimport Jsonviewblog from '../views/blogs/_vue/jsonviewblog'\nimport Image2Text_by_opencv_blog from '../views/blogs/_java/Image2Text_by_opencv_blog'\nimport Get_map_key_and_value from '../views/blogs/_vue/get_map_key_and_value'\nimport Face_recognition_by_opencv from '../views/blogs/_java/Face_recognition_by_opencv'\nimport Interview_springboot from '../views/blogs/_study/interview_springboot'\nimport Interview_mysql from '../views/blogs/_study/interview_mysql'\nimport Interview_java_basis from '../views/blogs/_study/interview_java_basis'\nimport Interview_java_container from '../views/blogs/_study/interview_java_container'\nimport Interview_java_abnormal from '../views/blogs/_study/interview_java_abnormal'\nimport Interview_java_concurrent from '../views/blogs/_study/interview_java_concurrent'\nimport Interview_java_jvm from '../views/blogs/_study/interview_java_jvm'\nimport Interview_java_spring from '../views/blogs/_study/interview_java_spring'\nimport Interview_java_springmvc from '../views/blogs/_study/interview_java_springmvc'\nimport Interview_java_springcloud from '../views/blogs/_study/interview_java_springcloud'\nimport Interview_myBatis from '../views/blogs/_study/interview_myBatis'\nimport Interview_redis from '../views/blogs/_study/interview_redis'\nimport Interview_MQ_RabbitMQ from '../views/blogs/_study/interview_MQ_RabbitMQ'\nimport Interview_linux from '../views/blogs/_study/interview_linux'\nimport Interview_zookeeper from '../views/blogs/_study/interview_zookeeper'\nimport Interview_netty from '../views/blogs/_study/interview_netty'\nimport Interview_ADTA from '../views/blogs/_study/interview_ADTA'\nimport Interview_dubbo from '../views/blogs/_study/interview_dubbo'\nimport Interview_tomcat from '../views/blogs/_study/interview_tomcat'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Login',\n    component: Login\n  },\n  {\n    path: '/index',\n    name: 'Index',\n    component: Index,\n    children: [\n      {\n        path: '/vue',\n        name: 'Jsonviewblog',\n        component: Jsonviewblog\n      },\n      {\n        path: '/vue',\n        name: 'Get_map_key_and_value',\n        component: Get_map_key_and_value\n      },\n      {\n        path: '/java',\n        name: 'Image2Text_by_opencv_blog',\n        component: Image2Text_by_opencv_blog\n      },\n      {\n        path: '/java',\n        name: 'Face_recognition_by_opencv',\n        component: Face_recognition_by_opencv\n      },\n      {\n        path: '/study',\n        name: 'Interview_springboot',\n        component: Interview_springboot\n      },\n      {\n        path: '/study',\n        name: 'Interview_mysql',\n        component: Interview_mysql\n      },\n      {\n        path: '/study',\n        name: 'Interview_java_basis',\n        component: Interview_java_basis\n      },\n      {\n        path: '/study',\n        name: 'Interview_java_container',\n        component: Interview_java_container\n      },\n      {\n        path: '/study',\n        name: 'Interview_java_abnormal',\n        component: Interview_java_abnormal\n      },\n      {\n        path: '/study',\n        name: 'Interview_java_concurrent',\n        component: Interview_java_concurrent\n      },\n      {\n        path: '/study',\n        name: 'Interview_java_jvm',\n        component: Interview_java_jvm\n      },\n      {\n        path: '/study',\n        name: 'Interview_java_spring',\n        component: Interview_java_spring\n      },\n      {\n        path: '/study',\n        name: 'Interview_java_springmvc',\n        component: Interview_java_springmvc\n      },\n      {\n        path: '/study',\n        name: 'Interview_java_springcloud',\n        component: Interview_java_springcloud\n      },\n      {\n        path: '/study',\n        name: 'Interview_myBatis',\n        component: Interview_myBatis\n      },\n      {\n        path: '/study',\n        name: 'Interview_redis',\n        component: Interview_redis\n      },\n      {\n        path: '/study',\n        name: 'Interview_MQ_RabbitMQ',\n        component: Interview_MQ_RabbitMQ\n      },\n      {\n        path: '/study',\n        name: 'Interview_linux',\n        component: Interview_linux\n      },\n      {\n        path: '/study',\n        name: 'Interview_zookeeper',\n        component: Interview_zookeeper\n      },\n      {\n        path: '/study',\n        name: 'Interview_netty',\n        component: Interview_netty\n      },\n      {\n        path: '/study',\n        name: 'Interview_ADTA',\n        component: Interview_ADTA\n      },\n      {\n        path: '/study',\n        name: 'Interview_dubbo',\n        component: Interview_dubbo\n      },\n      {\n        path: '/study',\n        name: 'Interview_tomcat',\n        component: Interview_tomcat\n      }\n    ]\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nexport default router\n","import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport ElementPlus from 'element-plus';\r\nimport 'element-plus/lib/theme-chalk/index.css';\r\n\r\ncreateApp(App).use(store).use(router).use(ElementPlus).mount('#app')\r\n","module.exports = __webpack_public_path__ + \"img/5.ee8742da.jpg\";","export { default } from \"-!../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/index.js??ref--1-1!./login.vue?vue&type=style&index=0&id=34cb0803&lang=scss&scoped=true\"; export * from \"-!../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/index.js??ref--1-1!./login.vue?vue&type=style&index=0&id=34cb0803&lang=scss&scoped=true\"","module.exports = __webpack_public_path__ + \"img/study.c4c2c460.png\";","module.exports = __webpack_public_path__ + \"img/17.2bc893e4.jpg\";","module.exports = __webpack_public_path__ + \"img/19.e52ff0ed.jpg\";","module.exports = __webpack_public_path__ + \"img/Face_recognition_by_opencv.f1b2da4c.webp\";","module.exports = __webpack_public_path__ + \"img/1.5cfda522.jpg\";","export { default } from \"-!../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/index.js??ref--1-1!./shootingstar.vue?vue&type=style&index=0&id=d2e1f040&scoped=true&lang=css\"; export * from \"-!../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/index.js??ref--1-1!./shootingstar.vue?vue&type=style&index=0&id=d2e1f040&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"img/12.fe0c52ef.jpg\";","module.exports = __webpack_public_path__ + \"img/Image2Text_by_opencv_blog.e53c884c.png\";","module.exports = __webpack_public_path__ + \"img/3.0e4d656d.jpg\";","export { default } from \"-!../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--9-oneOf-1-1!../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/stylePostLoader.js!../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--9-oneOf-1-1!../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/stylePostLoader.js!../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&lang=scss\"","module.exports = __webpack_public_path__ + \"img/6.51b4c2f0.jpg\";","module.exports = __webpack_public_path__ + \"img/13.313172ed.jpg\";","module.exports = __webpack_public_path__ + \"img/14.8b21c208.jpg\";","module.exports = __webpack_public_path__ + \"img/16.8025fee7.jpg\";","module.exports = __webpack_public_path__ + \"img/logo.82b9c7a5.png\";","module.exports = __webpack_public_path__ + \"img/18.8db2e56a.jpg\";","module.exports = __webpack_public_path__ + \"img/11.a8a81e04.jpg\";","module.exports = __webpack_public_path__ + \"img/15.51fc3d78.jpg\";","module.exports = __webpack_public_path__ + \"img/json-viewer.f900ceb5.png\";","export { default } from \"-!../../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/index.js??ref--1-1!./blogitem.vue?vue&type=style&index=0&lang=css\"; export * from \"-!../../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/index.js??ref--1-1!./blogitem.vue?vue&type=style&index=0&lang=css\"","module.exports = __webpack_public_path__ + \"img/1.a86ea4f3.jpg\";","module.exports = __webpack_public_path__ + \"img/4.f060037a.jpg\";","module.exports = __webpack_public_path__ + \"img/7.34fbcfba.jpg\";"],"sourceRoot":""}